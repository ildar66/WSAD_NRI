package com.hps.july.persistence2;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 */
public class AntennaCableBean implements EntityBean {
	public int cableres;
	private javax.ejb.EntityContext entityContext = null;
	public Integer groundcnt;
	public Integer groundresource;
	public int idanten;
	public int idcable;
	public java.math.BigDecimal lencable;
	private final static long serialVersionUID = 3206093459760846163L;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("groundcnt", getGroundcnt());
        h.put("groundresource", getGroundresource());
        h.put("cableres", new Integer(getCableres()));
        h.put("idanten", new Integer(getIdanten()));
        h.put("idcable", new Integer(getIdcable()));
        h.put("lencable", getLencable());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.Integer localGroundcnt = (java.lang.Integer) h.get("groundcnt");
        java.lang.Integer localGroundresource = (java.lang.Integer) h.get("groundresource");
        Integer localCableres = (Integer) h.get("cableres");
        Integer localIdanten = (Integer) h.get("idanten");
        java.math.BigDecimal localLencable = (java.math.BigDecimal) h.get("lencable");

        if ( h.containsKey("groundcnt") )
            setGroundcnt((localGroundcnt));
        if ( h.containsKey("groundresource") )
            setGroundresource((localGroundresource));
        if ( h.containsKey("cableres") )
            setCableres((localCableres).intValue());
        if ( h.containsKey("idanten") )
            setIdanten((localIdanten).intValue());
        if ( h.containsKey("lencable") )
            setLencable((localLencable));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argIdcable int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argIdcable, int argIdAntenna, int argCableRes, java.math.BigDecimal argLenCable) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	idcable = argIdcable;
	idanten = argIdAntenna;
	cableres = argCableRes;
	lencable = argLenCable;
	groundresource = null;
	groundcnt = null;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argIdcable int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argIdcable) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for cableres
 * @return int
 */
public int getCableres() {
	return cableres;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for groundcnt
 * @return java.lang.Integer
 */
public java.lang.Integer getGroundcnt() {
	return groundcnt;
}
/**
 * Getter method for groundresource
 * @return java.lang.Integer
 */
public java.lang.Integer getGroundresource() {
	return groundresource;
}
/**
 * Getter method for idanten
 * @return int
 */
public int getIdanten() {
	return idanten;
}
/**
 * Insert the method's description here.
 * Creation date: (16.11.2004 17:31:21)
 * @return int
 */
public int getIdcable() {
	return idcable;
}
/**
 * Getter method for lencable
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getLencable() {
	return lencable;
}
/**
 * Setter method for cableres
 * @param newValue int
 */
public void setCableres(int newValue) {
	this.cableres = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for groundcnt
 * @param newValue java.lang.Integer
 */
public void setGroundcnt(java.lang.Integer newValue) {
	this.groundcnt = newValue;
}
/**
 * Setter method for groundresource
 * @param newValue java.lang.Integer
 */
public void setGroundresource(java.lang.Integer newValue) {
	this.groundresource = newValue;
}
/**
 * Setter method for idanten
 * @param newValue int
 */
public void setIdanten(int newValue) {
	this.idanten = newValue;
}
/**
 * Setter method for lencable
 * @param newValue java.math.BigDecimal
 */
public void setLencable(java.math.BigDecimal newValue) {
	this.lencable = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
