package com.hps.july.persistence2;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * Позиции служебных записок
 * This is an Entity Bean class with CMP fields
 */
public class OfficeMemoPosBean implements EntityBean {
	public java.math.BigDecimal cardamount;
	public String cardname;
	public Integer comcardcnt;
	public String defectdescr;
	public java.sql.Date enddate;
	private javax.ejb.EntityContext entityContext = null;
	public Integer equipcnt;
	public String equipname;
	public int idheader;
	public int idpos;
	public Boolean isgarantie;
	public String opertype;
	public String phoneNumber;
	private final static long serialVersionUID = 3206093459760846163L;
	public String service;
	public Integer simcardcnt;
	public java.sql.Date startdate;
	public String tarifplan;
	public Integer equipcode;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("service", getService());
        h.put("enddate", getEnddate());
        h.put("phoneNumber", getPhoneNumber());
        h.put("equipcnt", getEquipcnt());
        h.put("simcardcnt", getSimcardcnt());
        h.put("comcardcnt", getComcardcnt());
        h.put("opertype", getOpertype());
        h.put("equipname", getEquipname());
        h.put("cardname", getCardname());
        h.put("isgarantie", getIsgarantie());
        h.put("equipcode", getEquipcode());
        h.put("startdate", getStartdate());
        h.put("tarifplan", getTarifplan());
        h.put("idheader", new Integer(getIdheader()));
        h.put("defectdescr", getDefectdescr());
        h.put("cardamount", getCardamount());
        h.put("idpos", new Integer(getIdpos()));
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localService = (java.lang.String) h.get("service");
        java.sql.Date localEnddate = (java.sql.Date) h.get("enddate");
        java.lang.String localPhoneNumber = (java.lang.String) h.get("phoneNumber");
        java.lang.Integer localEquipcnt = (java.lang.Integer) h.get("equipcnt");
        java.lang.Integer localSimcardcnt = (java.lang.Integer) h.get("simcardcnt");
        java.lang.Integer localComcardcnt = (java.lang.Integer) h.get("comcardcnt");
        java.lang.String localOpertype = (java.lang.String) h.get("opertype");
        java.lang.String localEquipname = (java.lang.String) h.get("equipname");
        java.lang.String localCardname = (java.lang.String) h.get("cardname");
        java.lang.Boolean localIsgarantie = (java.lang.Boolean) h.get("isgarantie");
        java.lang.Integer localEquipcode = (java.lang.Integer) h.get("equipcode");
        java.sql.Date localStartdate = (java.sql.Date) h.get("startdate");
        java.lang.String localTarifplan = (java.lang.String) h.get("tarifplan");
        Integer localIdheader = (Integer) h.get("idheader");
        java.lang.String localDefectdescr = (java.lang.String) h.get("defectdescr");
        java.math.BigDecimal localCardamount = (java.math.BigDecimal) h.get("cardamount");

        if ( h.containsKey("service") )
            setService((localService));
        if ( h.containsKey("enddate") )
            setEnddate((localEnddate));
        if ( h.containsKey("phoneNumber") )
            setPhoneNumber((localPhoneNumber));
        if ( h.containsKey("equipcnt") )
            setEquipcnt((localEquipcnt));
        if ( h.containsKey("simcardcnt") )
            setSimcardcnt((localSimcardcnt));
        if ( h.containsKey("comcardcnt") )
            setComcardcnt((localComcardcnt));
        if ( h.containsKey("opertype") )
            setOpertype((localOpertype));
        if ( h.containsKey("equipname") )
            setEquipname((localEquipname));
        if ( h.containsKey("cardname") )
            setCardname((localCardname));
        if ( h.containsKey("isgarantie") )
            setIsgarantie((localIsgarantie));
        if ( h.containsKey("equipcode") )
            setEquipcode((localEquipcode));
        if ( h.containsKey("startdate") )
            setStartdate((localStartdate));
        if ( h.containsKey("tarifplan") )
            setTarifplan((localTarifplan));
        if ( h.containsKey("idheader") )
            setIdheader((localIdheader).intValue());
        if ( h.containsKey("defectdescr") )
            setDefectdescr((localDefectdescr));
        if ( h.containsKey("cardamount") )
            setCardamount((localCardamount));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argIdpos int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argIdpos, int argIdHeader) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	idpos = argIdpos;
	idheader = argIdHeader;
	phoneNumber = null;
	tarifplan = null;
	comcardcnt = null;
	cardamount = null;
	simcardcnt = null;
	equipname = null;
	equipcnt = null;
	defectdescr = null;
	service = null;
	opertype = null;
	startdate = null;
	enddate = null;
	isgarantie = null;
	cardname = null;
	equipcode = null;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argIdpos int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argIdpos) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for cardamount
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getCardamount() {
	return cardamount;
}
/**
 * Getter method for cardname
 * @return java.lang.String
 */
public java.lang.String getCardname() {
	return cardname;
}
/**
 * Getter method for comcardcnt
 * @return java.lang.Integer
 */
public java.lang.Integer getComcardcnt() {
	return comcardcnt;
}
/**
 * Getter method for defectdescr
 * @return java.lang.String
 */
public java.lang.String getDefectdescr() {
	return defectdescr;
}
/**
 * Getter method for enddate
 * @return java.sql.Date
 */
public java.sql.Date getEnddate() {
	return enddate;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for equipcnt
 * @return java.lang.Integer
 */
public java.lang.Integer getEquipcnt() {
	return equipcnt;
}
/**
 * Getter method for equipcode
 */
public java.lang.Integer getEquipcode() {
	return equipcode;
}
/**
 * Getter method for equipname
 * @return java.lang.String
 */
public java.lang.String getEquipname() {
	return equipname;
}
/**
 * Getter method for idheader
 * @return int
 */
public int getIdheader() {
	return idheader;
}
/**
 * Insert the method's description here.
 * Creation date: (25.08.2004 15:57:08)
 * @return int
 */
public int getIdpos() {
	return idpos;
}
/**
 * Getter method for isgarantie
 * @return java.lang.Boolean
 */
public java.lang.Boolean getIsgarantie() {
	return isgarantie;
}
/**
 * Getter method for opertype
 * @return java.lang.String
 */
public java.lang.String getOpertype() {
	return opertype;
}
/**
 * Getter method for phoneNumber
 * @return java.lang.String
 */
public java.lang.String getPhoneNumber() {
	return phoneNumber;
}
/**
 * Getter method for service
 * @return java.lang.String
 */
public java.lang.String getService() {
	return service;
}
/**
 * Getter method for simcardcnt
 * @return java.lang.Integer
 */
public java.lang.Integer getSimcardcnt() {
	return simcardcnt;
}
/**
 * Getter method for startdate
 * @return java.sql.Date
 */
public java.sql.Date getStartdate() {
	return startdate;
}
/**
 * Getter method for tarifplan
 * @return java.lang.String
 */
public java.lang.String getTarifplan() {
	return tarifplan;
}
/**
 * Setter method for cardamount
 * @param newValue java.math.BigDecimal
 */
public void setCardamount(java.math.BigDecimal newValue) {
	this.cardamount = newValue;
}
/**
 * Setter method for cardname
 * @param newValue java.lang.String
 */
public void setCardname(java.lang.String newValue) {
	this.cardname = newValue;
}
/**
 * Setter method for comcardcnt
 * @param newValue java.lang.Integer
 */
public void setComcardcnt(java.lang.Integer newValue) {
	this.comcardcnt = newValue;
}
/**
 * Setter method for defectdescr
 * @param newValue java.lang.String
 */
public void setDefectdescr(java.lang.String newValue) {
	this.defectdescr = newValue;
}
/**
 * Setter method for enddate
 * @param newValue java.sql.Date
 */
public void setEnddate(java.sql.Date newValue) {
	this.enddate = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for equipcnt
 * @param newValue java.lang.Integer
 */
public void setEquipcnt(java.lang.Integer newValue) {
	this.equipcnt = newValue;
}
/**
 * Setter method for equipcode
 */
public void setEquipcode(java.lang.Integer newValue) {
	this.equipcode = newValue;
}
/**
 * Setter method for equipname
 * @param newValue java.lang.String
 */
public void setEquipname(java.lang.String newValue) {
	this.equipname = newValue;
}
/**
 * Setter method for idheader
 * @param newValue int
 */
public void setIdheader(int newValue) {
	this.idheader = newValue;
}
/**
 * Setter method for isgarantie
 * @param newValue java.lang.Boolean
 */
public void setIsgarantie(java.lang.Boolean newValue) {
	this.isgarantie = newValue;
}
/**
 * Setter method for opertype
 * @param newValue java.lang.String
 */
public void setOpertype(java.lang.String newValue) {
	this.opertype = newValue;
}
/**
 * Setter method for phoneNumber
 * @param newValue java.lang.String
 */
public void setPhoneNumber(java.lang.String newValue) {
	this.phoneNumber = newValue;
}
/**
 * Setter method for service
 * @param newValue java.lang.String
 */
public void setService(java.lang.String newValue) {
	this.service = newValue;
}
/**
 * Setter method for simcardcnt
 * @param newValue java.lang.Integer
 */
public void setSimcardcnt(java.lang.Integer newValue) {
	this.simcardcnt = newValue;
}
/**
 * Setter method for startdate
 * @param newValue java.sql.Date
 */
public void setStartdate(java.sql.Date newValue) {
	this.startdate = newValue;
}
/**
 * Setter method for tarifplan
 * @param newValue java.lang.String
 */
public void setTarifplan(java.lang.String newValue) {
	this.tarifplan = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
