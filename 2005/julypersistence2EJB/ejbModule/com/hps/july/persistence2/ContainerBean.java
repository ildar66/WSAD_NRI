package com.hps.july.persistence2;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * Контейнеры
 * This is an Entity Bean class with CMP fields
 */
public class ContainerBean implements EntityBean {
	public int container;
	private javax.ejb.EntityContext entityContext = null;
	public java.math.BigDecimal height;
	public java.math.BigDecimal length;
	public int resource;
	private final static long serialVersionUID = 3206093459760846163L;
	public int storageplace;
	public java.math.BigDecimal width;
	public Integer year;

/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("storageplace", new Integer(getStorageplace()));
        h.put("width", getWidth());
        h.put("length", getLength());
        h.put("height", getHeight());
        h.put("container", new Integer(getContainer()));
        h.put("resource", new Integer(getResource()));
        h.put("year", getYear());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        Integer localStorageplace = (Integer) h.get("storageplace");
        java.math.BigDecimal localWidth = (java.math.BigDecimal) h.get("width");
        java.math.BigDecimal localLength = (java.math.BigDecimal) h.get("length");
        java.math.BigDecimal localHeight = (java.math.BigDecimal) h.get("height");
        Integer localResource = (Integer) h.get("resource");
        java.lang.Integer localYear = (java.lang.Integer) h.get("year");

        if ( h.containsKey("storageplace") )
            setStorageplace((localStorageplace).intValue());
        if ( h.containsKey("width") )
            setWidth((localWidth));
        if ( h.containsKey("length") )
            setLength((localLength));
        if ( h.containsKey("height") )
            setHeight((localHeight));
        if ( h.containsKey("resource") )
            setResource((localResource).intValue());
        if ( h.containsKey("year") )
            setYear((localYear));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argContainer int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argContainer, int argStoragePlace, int argResource) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	container = argContainer;
	storageplace = argStoragePlace;
	resource = argResource;
	year = null;
	width = null;
	height = null;
	length = null;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argContainer int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argContainer) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Insert the method's description here.
 * Creation date: (07.04.2004 17:21:20)
 * @return int
 */
public int getContainer() {
	return container;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for height
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getHeight() {
	return height;
}
/**
 * Getter method for length
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getLength() {
	return length;
}
/**
 * Getter method for resource
 * @return int
 */
public int getResource() {
	return resource;
}
/**
 * Getter method for storageplace
 * @return int
 */
public int getStorageplace() {
	return storageplace;
}
/**
 * Getter method for width
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getWidth() {
	return width;
}
/**
 * Getter method for year
 * @return java.lang.Integer
 */
public java.lang.Integer getYear() {
	return year;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for height
 * @param newValue java.math.BigDecimal
 */
public void setHeight(java.math.BigDecimal newValue) {
	this.height = newValue;
}
/**
 * Setter method for length
 * @param newValue java.math.BigDecimal
 */
public void setLength(java.math.BigDecimal newValue) {
	this.length = newValue;
}
/**
 * Setter method for resource
 * @param newValue int
 */
public void setResource(int newValue) {
	this.resource = newValue;
}
/**
 * Setter method for storageplace
 * @param newValue int
 */
public void setStorageplace(int newValue) {
	this.storageplace = newValue;
}
/**
 * Setter method for width
 * @param newValue java.math.BigDecimal
 */
public void setWidth(java.math.BigDecimal newValue) {
	this.width = newValue;
}
/**
 * Setter method for year
 * @param newValue java.lang.Integer
 */
public void setYear(java.lang.Integer newValue) {
	this.year = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
