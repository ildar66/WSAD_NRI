package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Работник
 */
public class WorkerBean implements EntityBean {
	public String email;
	private javax.ejb.EntityContext entityContext = null;
	public String fax;
	public String mobilephone;
	public String phone1;
	public String phone2;
	private final static long serialVersionUID = 3206093459760846163L;
	public int worker;
	public java.lang.Integer man_man;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink manLink = null;
	public java.lang.Integer position_workposition;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink positionLink = null;
	public java.lang.Integer company_company;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink companyLink = null;
	public java.lang.Integer division_division;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink divisionLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink controlleddivisionsLink = null;
	public Boolean active;
	public String localphone;
	public String lotusaddress;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink expeditionLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink controlledContractLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink i13nActTechLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink workedContractLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink positionResponsibleWorkersLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink inwayBillstorManagersLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink inwayBilltechstufLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseContractEconomistLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink documentforstoragerLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink assemblingActLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink internalOutBillLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink internalWayBillLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink requestLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink requestSenderLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink payOffActChairManLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink payOffActMemberLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink payOffActMember2Link = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink faultReportLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseTaskStartEconomistsLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink inventoryNumbersLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink photoLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink inwayBillsLink = null;
	public Boolean isour;
	public Boolean isservicestuff;
	public java.lang.Integer organization_organization;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink organizationLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseContractsLink = null;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("companyKey", getCompanyKey());
        h.put("email", getEmail());
        h.put("organizationKey", getOrganizationKey());
        h.put("isour", getIsour());
        h.put("manKey", getManKey());
        h.put("positionKey", getPositionKey());
        h.put("fax", getFax());
        h.put("isservicestuff", getIsservicestuff());
        h.put("divisionKey", getDivisionKey());
        h.put("mobilephone", getMobilephone());
        h.put("lotusaddress", getLotusaddress());
        h.put("localphone", getLocalphone());
        h.put("phone2", getPhone2());
        h.put("phone1", getPhone1());
        h.put("active", getActive());
        h.put("worker", new Integer(getWorker()));
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localEmail = (java.lang.String) h.get("email");
        java.lang.Boolean localIsour = (java.lang.Boolean) h.get("isour");
        java.lang.String localFax = (java.lang.String) h.get("fax");
        java.lang.Boolean localIsservicestuff = (java.lang.Boolean) h.get("isservicestuff");
        java.lang.String localMobilephone = (java.lang.String) h.get("mobilephone");
        java.lang.String localLotusaddress = (java.lang.String) h.get("lotusaddress");
        java.lang.String localLocalphone = (java.lang.String) h.get("localphone");
        java.lang.String localPhone2 = (java.lang.String) h.get("phone2");
        java.lang.String localPhone1 = (java.lang.String) h.get("phone1");
        java.lang.Boolean localActive = (java.lang.Boolean) h.get("active");
        Integer localWorker = (Integer) h.get("worker");

        if ( h.containsKey("email") )
            setEmail((localEmail));
        if ( h.containsKey("isour") )
            setIsour((localIsour));
        if ( h.containsKey("fax") )
            setFax((localFax));
        if ( h.containsKey("isservicestuff") )
            setIsservicestuff((localIsservicestuff));
        if ( h.containsKey("mobilephone") )
            setMobilephone((localMobilephone));
        if ( h.containsKey("lotusaddress") )
            setLotusaddress((localLotusaddress));
        if ( h.containsKey("localphone") )
            setLocalphone((localLocalphone));
        if ( h.containsKey("phone2") )
            setPhone2((localPhone2));
        if ( h.containsKey("phone1") )
            setPhone1((localPhone1));
        if ( h.containsKey("active") )
            setActive((localActive));
        if ( h.containsKey("worker") )
            setWorker((localWorker).intValue());

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getLeaseTaskStartEconomistsLink());
	links.addElement(getInternalOutBillLink());
	links.addElement(getDocumentforstoragerLink());
	links.addElement(getInwayBilltechstufLink());
	links.addElement(getManLink());
	links.addElement(getWorkedContractLink());
	links.addElement(getI13nActTechLink());
	links.addElement(getControlledContractLink());
	links.addElement(getExpeditionLink());
	links.addElement(getPositionResponsibleWorkersLink());
	links.addElement(getControlleddivisionsLink());
	links.addElement(getDivisionLink());
	links.addElement(getPayOffActMember2Link());
	links.addElement(getRequestLink());
	links.addElement(getPayOffActMemberLink());
	links.addElement(getLeaseContractEconomistLink());
	links.addElement(getPhotoLink());
	links.addElement(getPositionLink());
	links.addElement(getFaultReportLink());
	links.addElement(getRequestSenderLink());
	links.addElement(getInternalWayBillLink());
	links.addElement(getOrganizationLink());
	links.addElement(getInventoryNumbersLink());
	links.addElement(getCompanyLink());
	links.addElement(getAssemblingActLink());
	links.addElement(getPayOffActChairManLink());
	links.addElement(getInwayBillsLink());
	links.addElement(getInwayBillstorManagersLink());
	links.addElement(getLeaseContractsLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	leaseTaskStartEconomistsLink = null;
	internalOutBillLink = null;
	documentforstoragerLink = null;
	inwayBilltechstufLink = null;
	manLink = null;
	workedContractLink = null;
	i13nActTechLink = null;
	controlledContractLink = null;
	expeditionLink = null;
	positionResponsibleWorkersLink = null;
	controlleddivisionsLink = null;
	divisionLink = null;
	payOffActMember2Link = null;
	requestLink = null;
	payOffActMemberLink = null;
	leaseContractEconomistLink = null;
	photoLink = null;
	positionLink = null;
	faultReportLink = null;
	requestSenderLink = null;
	internalWayBillLink = null;
	organizationLink = null;
	inventoryNumbersLink = null;
	companyLink = null;
	assemblingActLink = null;
	payOffActChairManLink = null;
	inwayBillsLink = null;
	inwayBillstorManagersLink = null;
	leaseContractsLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * This method was generated for supporting the association named AssemblingAct2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addAssemblingAct(com.hps.july.persistence.AssemblingAct anAssemblingAct) throws java.rmi.RemoteException {
	this.getAssemblingActLink().addElement(anAssemblingAct);
}
/**
 * This method was generated for supporting the association named Contract2Controller.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addControlledContract(com.hps.july.persistence.Contract aControlledContract) throws java.rmi.RemoteException {
	this.getControlledContractLink().addElement(aControlledContract);
}
/**
 * This method was generated for supporting the association named divisions2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addControlleddivisions(com.hps.july.persistence.Division aControlleddivisions) throws java.rmi.RemoteException {
	this.getControlleddivisionsLink().addElement(aControlleddivisions);
}
/**
 * This method was generated for supporting the association named Document2Storager.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addDocumentforstorager(com.hps.july.persistence.Document aDocumentforstorager) throws java.rmi.RemoteException {
	this.getDocumentforstoragerLink().addElement(aDocumentforstorager);
}
/**
 * This method was generated for supporting the association named Expedition2Expeditor.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addExpedition(com.hps.july.persistence.Expedition anExpedition) throws java.rmi.RemoteException {
	this.getExpeditionLink().addElement(anExpedition);
}
/**
 * This method was generated for supporting the association named FaultReport2Workers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addFaultReport(com.hps.july.persistence.FaultReport aFaultReport) throws java.rmi.RemoteException {
	this.getFaultReportLink().addElement(aFaultReport);
}
/**
 * This method was generated for supporting the association named I13nAct2Techstuff.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addI13nActTech(com.hps.july.persistence.I13nAct anI13nActTech) throws java.rmi.RemoteException {
	this.getI13nActTechLink().addElement(anI13nActTech);
}
/**
 * This method was generated for supporting the association named InternalOutBill2Monter.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addInternalOutBill(com.hps.july.persistence.InternalOutBill anInternalOutBill) throws java.rmi.RemoteException {
	this.getInternalOutBillLink().addElement(anInternalOutBill);
}
/**
 * This method was generated for supporting the association named InternalWayBill2Monter.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addInternalWayBill(com.hps.july.persistence.InternalWayBill anInternalWayBill) throws java.rmi.RemoteException {
	this.getInternalWayBillLink().addElement(anInternalWayBill);
}
/**
 * This method was generated for supporting the association named InventoryNumbers2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addInventoryNumbers(com.hps.july.persistence.InventoryNumbers anInventoryNumbers) throws java.rmi.RemoteException {
	this.getInventoryNumbersLink().addElement(anInventoryNumbers);
}
/**
 * This method was generated for supporting the association named InwayBill2repres.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addInwayBills(com.hps.july.persistence.InwayBill anInwayBills) throws java.rmi.RemoteException {
	this.getInwayBillsLink().addElement(anInwayBills);
}
/**
 * This method was generated for supporting the association named InwayBill2StorageManagers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addInwayBillstorManagers(com.hps.july.persistence.InwayBill anInwayBillstorManagers) throws java.rmi.RemoteException {
	this.getInwayBillstorManagersLink().addElement(anInwayBillstorManagers);
}
/**
 * This method was generated for supporting the association named InwayBill2dActTechStuff.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addInwayBilltechstuf(com.hps.july.persistence.InwayBill anInwayBilltechstuf) throws java.rmi.RemoteException {
	this.getInwayBilltechstufLink().addElement(anInwayBilltechstuf);
}
/**
 * This method was generated for supporting the association named LeaseContract2WorkerEconomist.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeaseContractEconomist(com.hps.july.persistence.LeaseContract aLeaseContractEconomist) throws java.rmi.RemoteException {
	this.getLeaseContractEconomistLink().addElement(aLeaseContractEconomist);
}
/**
 * This method was generated for supporting the association named LeaseContract2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeaseContracts(com.hps.july.persistence.LeaseContract aLeaseContracts) throws java.rmi.RemoteException {
	this.getLeaseContractsLink().addElement(aLeaseContracts);
}
/**
 * This method was generated for supporting the association named LeaseTaskStart2Economist.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeaseTaskStartEconomists(com.hps.july.persistence.LeaseTaskStart aLeaseTaskStartEconomists) throws java.rmi.RemoteException {
	this.getLeaseTaskStartEconomistsLink().addElement(aLeaseTaskStartEconomists);
}
/**
 * This method was generated for supporting the association named PayOffAct2Chairman.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addPayOffActChairMan(com.hps.july.persistence.PayOffAct aPayOffActChairMan) throws java.rmi.RemoteException {
	this.getPayOffActChairManLink().addElement(aPayOffActChairMan);
}
/**
 * This method was generated for supporting the association named PayOffAct2WorkerMember.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addPayOffActMember(com.hps.july.persistence.PayOffAct aPayOffActMember) throws java.rmi.RemoteException {
	this.getPayOffActMemberLink().addElement(aPayOffActMember);
}
/**
 * This method was generated for supporting the association named PayOffAct2Member2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addPayOffActMember2(com.hps.july.persistence.PayOffAct aPayOffActMember2) throws java.rmi.RemoteException {
	this.getPayOffActMember2Link().addElement(aPayOffActMember2);
}
/**
 * This method was generated for supporting the association named Photo2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addPhoto(com.hps.july.persistence.Photo aPhoto) throws java.rmi.RemoteException {
	this.getPhotoLink().addElement(aPhoto);
}
/**
 * This method was generated for supporting the association named PositionResponsibleWorkers2Workers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addPositionResponsibleWorkers(com.hps.july.persistence.PositionResponsibleWorkers aPositionResponsibleWorkers) throws java.rmi.RemoteException {
	this.getPositionResponsibleWorkersLink().addElement(aPositionResponsibleWorkers);
}
/**
 * This method was generated for supporting the association named Request2Checker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addRequest(com.hps.july.persistence.Request aRequest) throws java.rmi.RemoteException {
	this.getRequestLink().addElement(aRequest);
}
/**
 * This method was generated for supporting the association named Request2Sender.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addRequestSender(com.hps.july.persistence.Request aRequestSender) throws java.rmi.RemoteException {
	this.getRequestSenderLink().addElement(aRequestSender);
}
/**
 * This method was generated for supporting the association named Contract2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addWorkedContract(com.hps.july.persistence.Contract aWorkedContract) throws java.rmi.RemoteException {
	this.getWorkedContractLink().addElement(aWorkedContract);
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argWorker int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argWorker) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	worker = argWorker;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argWorker int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argWorker, Integer argMan, Integer argPosition ) throws javax.ejb.CreateException, java.rmi.RemoteException {

	ejbCreate(argWorker, argMan, argPosition, Boolean.TRUE, Boolean.FALSE);	
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argWorker int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argWorker, Integer argMan, Integer argPosition, Boolean argIsour, Boolean argIsservicestuff ) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	email = null;
	fax = null;
	mobilephone = null;
	phone1 = null;
	phone2 = null;
	worker = 0;
	man_man = null;
	position_workposition = null;
	company_company = null;
	division_division = null;
	active = null;
	localphone = null;
	lotusaddress = null;

	worker = argWorker;
	man_man = argMan;
	position_workposition = argPosition;

	isour = argIsour;
	isservicestuff = argIsservicestuff;
	organization_organization = null;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argWorker int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argWorker) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	//_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for active
 */
public java.lang.Boolean getActive() {
	return active;
}
/**
 * This method was generated for supporting the association named AssemblingAct2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getAssemblingAct() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getAssemblingActLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named AssemblingAct2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getAssemblingActLink() {
	if (assemblingActLink == null)
		assemblingActLink = new WorkerToAssemblingActLink(this);
	return assemblingActLink;
}
/**
 * This method was generated for supporting the association named workers2company.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Company getCompany() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Company)this.getCompanyLink().value();
}
/**
 * This method was generated for supporting the association named workers2company.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.CompanyKey getCompanyKey() {
	com.hps.july.persistence.CompanyKey temp = null;
	temp = new com.hps.july.persistence.CompanyKey();
	boolean company_NULLTEST = true;
	company_NULLTEST &= (company_company == null);
	temp.company = ((company_company == null) ? 0 : company_company.intValue());
	if (company_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named workers2company.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getCompanyLink() {
	if (companyLink == null)
		companyLink = new WorkerToCompanyLink(this);
	return companyLink;
}
/**
 * This method was generated for supporting the association named Contract2Controller.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getControlledContract() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getControlledContractLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named Contract2Controller.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getControlledContractLink() {
	if (controlledContractLink == null)
		controlledContractLink = new WorkerToControlledContractLink(this);
	return controlledContractLink;
}
/**
 * This method was generated for supporting the association named divisions2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getControlleddivisions() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getControlleddivisionsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named divisions2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getControlleddivisionsLink() {
	if (controlleddivisionsLink == null)
		controlleddivisionsLink = new WorkerToControlleddivisionsLink(this);
	return controlleddivisionsLink;
}
/**
 * This method was generated for supporting the association named workers2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Division getDivision() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Division)this.getDivisionLink().value();
}
/**
 * This method was generated for supporting the association named workers2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.DivisionKey getDivisionKey() {
	com.hps.july.persistence.DivisionKey temp = null;
	temp = new com.hps.july.persistence.DivisionKey();
	boolean division_NULLTEST = true;
	division_NULLTEST &= (division_division == null);
	temp.division = ((division_division == null) ? 0 : division_division.intValue());
	if (division_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named workers2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getDivisionLink() {
	if (divisionLink == null)
		divisionLink = new WorkerToDivisionLink(this);
	return divisionLink;
}
/**
 * This method was generated for supporting the association named Document2Storager.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getDocumentforstorager() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getDocumentforstoragerLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named Document2Storager.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getDocumentforstoragerLink() {
	if (documentforstoragerLink == null)
		documentforstoragerLink = new WorkerToDocumentforstoragerLink(this);
	return documentforstoragerLink;
}
/**
 * Getter method for email
 * @return java.lang.String
 */
public java.lang.String getEmail() {
	return email;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * This method was generated for supporting the association named Expedition2Expeditor.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getExpedition() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getExpeditionLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named Expedition2Expeditor.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getExpeditionLink() {
	if (expeditionLink == null)
		expeditionLink = new WorkerToExpeditionLink(this);
	return expeditionLink;
}
/**
 * This method was generated for supporting the association named FaultReport2Workers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getFaultReport() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getFaultReportLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named FaultReport2Workers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getFaultReportLink() {
	if (faultReportLink == null)
		faultReportLink = new WorkerToFaultReportLink(this);
	return faultReportLink;
}
/**
 * Getter method for fax
 * @return java.lang.String
 */
public java.lang.String getFax() {
	return fax;
}
/**
 * This method was generated for supporting the association named I13nAct2Techstuff.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getI13nActTech() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getI13nActTechLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named I13nAct2Techstuff.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getI13nActTechLink() {
	if (i13nActTechLink == null)
		i13nActTechLink = new WorkerToI13nActTechLink(this);
	return i13nActTechLink;
}
/**
 * This method was generated for supporting the association named InternalOutBill2Monter.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getInternalOutBill() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getInternalOutBillLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named InternalOutBill2Monter.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getInternalOutBillLink() {
	if (internalOutBillLink == null)
		internalOutBillLink = new WorkerToInternalOutBillLink(this);
	return internalOutBillLink;
}
/**
 * This method was generated for supporting the association named InternalWayBill2Monter.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getInternalWayBill() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getInternalWayBillLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named InternalWayBill2Monter.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getInternalWayBillLink() {
	if (internalWayBillLink == null)
		internalWayBillLink = new WorkerToInternalWayBillLink(this);
	return internalWayBillLink;
}
/**
 * This method was generated for supporting the association named InventoryNumbers2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getInventoryNumbers() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getInventoryNumbersLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named InventoryNumbers2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getInventoryNumbersLink() {
	if (inventoryNumbersLink == null)
		inventoryNumbersLink = new WorkerToInventoryNumbersLink(this);
	return inventoryNumbersLink;
}
/**
 * This method was generated for supporting the association named InwayBill2repres.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getInwayBills() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getInwayBillsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named InwayBill2repres.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getInwayBillsLink() {
	if (inwayBillsLink == null)
		inwayBillsLink = new WorkerToInwayBillsLink(this);
	return inwayBillsLink;
}
/**
 * This method was generated for supporting the association named InwayBill2StorageManagers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getInwayBillstorManagers() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getInwayBillstorManagersLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named InwayBill2StorageManagers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getInwayBillstorManagersLink() {
	if (inwayBillstorManagersLink == null)
		inwayBillstorManagersLink = new WorkerToInwayBillstorManagersLink(this);
	return inwayBillstorManagersLink;
}
/**
 * This method was generated for supporting the association named InwayBill2dActTechStuff.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getInwayBilltechstuf() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getInwayBilltechstufLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named InwayBill2dActTechStuff.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getInwayBilltechstufLink() {
	if (inwayBilltechstufLink == null)
		inwayBilltechstufLink = new WorkerToInwayBilltechstufLink(this);
	return inwayBilltechstufLink;
}
/**
 * Getter method for isour
 */
public java.lang.Boolean getIsour() {
	return isour;
}
/**
 * Getter method for isservicestuff
 */
public java.lang.Boolean getIsservicestuff() {
	return isservicestuff;
}
/**
 * This method was generated for supporting the association named LeaseContract2WorkerEconomist.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseContractEconomist() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseContractEconomistLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseContract2WorkerEconomist.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseContractEconomistLink() {
	if (leaseContractEconomistLink == null)
		leaseContractEconomistLink = new WorkerToLeaseContractEconomistLink(this);
	return leaseContractEconomistLink;
}
/**
 * This method was generated for supporting the association named LeaseContract2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseContracts() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseContractsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseContract2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseContractsLink() {
	if (leaseContractsLink == null)
		leaseContractsLink = new WorkerToLeaseContractsLink(this);
	return leaseContractsLink;
}
/**
 * This method was generated for supporting the association named LeaseTaskStart2Economist.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseTaskStartEconomists() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseTaskStartEconomistsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseTaskStart2Economist.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseTaskStartEconomistsLink() {
	if (leaseTaskStartEconomistsLink == null)
		leaseTaskStartEconomistsLink = new WorkerToLeaseTaskStartEconomistsLink(this);
	return leaseTaskStartEconomistsLink;
}
/**
 * Getter method for localphone
 */
public java.lang.String getLocalphone() {
	return localphone;
}
/**
 * Getter method for lotusaddress
 */
public java.lang.String getLotusaddress() {
	return lotusaddress;
}
/**
 * This method was generated for supporting the association named workers2people.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.People getMan() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.People)this.getManLink().value();
}
/**
 * This method was generated for supporting the association named workers2people.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.PeopleKey getManKey() {
	com.hps.july.persistence.PeopleKey temp = null;
	temp = new com.hps.july.persistence.PeopleKey();
	boolean man_NULLTEST = true;
	man_NULLTEST &= (man_man == null);
	temp.man = ((man_man == null) ? 0 : man_man.intValue());
	if (man_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named workers2people.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getManLink() {
	if (manLink == null)
		manLink = new WorkerToManLink(this);
	return manLink;
}
/**
 * Getter method for mobilephone
 * @return java.lang.String
 */
public java.lang.String getMobilephone() {
	return mobilephone;
}
/**
 * This method was generated for supporting the association named Worker2Organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Organization getOrganization() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Organization)this.getOrganizationLink().value();
}
/**
 * This method was generated for supporting the association named Worker2Organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.OrganizationKey getOrganizationKey() {
	com.hps.july.persistence.OrganizationKey temp = null;
	temp = new com.hps.july.persistence.OrganizationKey();
	boolean organization_NULLTEST = true;
	organization_NULLTEST &= (organization_organization == null);
	temp.organization = ((organization_organization == null) ? 0 : organization_organization.intValue());
	if (organization_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named Worker2Organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getOrganizationLink() {
	if (organizationLink == null)
		organizationLink = new WorkerToOrganizationLink(this);
	return organizationLink;
}
/**
 * This method was generated for supporting the association named PayOffAct2Chairman.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getPayOffActChairMan() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getPayOffActChairManLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named PayOffAct2Chairman.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getPayOffActChairManLink() {
	if (payOffActChairManLink == null)
		payOffActChairManLink = new WorkerToPayOffActChairManLink(this);
	return payOffActChairManLink;
}
/**
 * This method was generated for supporting the association named PayOffAct2WorkerMember.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getPayOffActMember() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getPayOffActMemberLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named PayOffAct2Member2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getPayOffActMember2() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getPayOffActMember2Link().enumerationValue();
}
/**
 * This method was generated for supporting the association named PayOffAct2Member2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getPayOffActMember2Link() {
	if (payOffActMember2Link == null)
		payOffActMember2Link = new WorkerToPayOffActMember2Link(this);
	return payOffActMember2Link;
}
/**
 * This method was generated for supporting the association named PayOffAct2WorkerMember.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getPayOffActMemberLink() {
	if (payOffActMemberLink == null)
		payOffActMemberLink = new WorkerToPayOffActMemberLink(this);
	return payOffActMemberLink;
}
/**
 * Getter method for phone1
 * @return java.lang.String
 */
public java.lang.String getPhone1() {
	return phone1;
}
/**
 * Getter method for phone2
 * @return java.lang.String
 */
public java.lang.String getPhone2() {
	return phone2;
}
/**
 * This method was generated for supporting the association named Photo2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getPhoto() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getPhotoLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named Photo2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getPhotoLink() {
	if (photoLink == null)
		photoLink = new WorkerToPhotoLink(this);
	return photoLink;
}
/**
 * This method was generated for supporting the association named workers2position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.WorkPosition getPosition() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.WorkPosition)this.getPositionLink().value();
}
/**
 * This method was generated for supporting the association named workers2position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.WorkPositionKey getPositionKey() {
	com.hps.july.persistence.WorkPositionKey temp = null;
	temp = new com.hps.july.persistence.WorkPositionKey();
	boolean position_NULLTEST = true;
	position_NULLTEST &= (position_workposition == null);
	temp.workposition = ((position_workposition == null) ? 0 : position_workposition.intValue());
	if (position_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named workers2position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getPositionLink() {
	if (positionLink == null)
		positionLink = new WorkerToPositionLink(this);
	return positionLink;
}
/**
 * This method was generated for supporting the association named PositionResponsibleWorkers2Workers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getPositionResponsibleWorkers() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getPositionResponsibleWorkersLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named PositionResponsibleWorkers2Workers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getPositionResponsibleWorkersLink() {
	if (positionResponsibleWorkersLink == null)
		positionResponsibleWorkersLink = new WorkerToPositionResponsibleWorkersLink(this);
	return positionResponsibleWorkersLink;
}
/**
 * This method was generated for supporting the association named Request2Checker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getRequest() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getRequestLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named Request2Checker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getRequestLink() {
	if (requestLink == null)
		requestLink = new WorkerToRequestLink(this);
	return requestLink;
}
/**
 * This method was generated for supporting the association named Request2Sender.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getRequestSender() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getRequestSenderLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named Request2Sender.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getRequestSenderLink() {
	if (requestSenderLink == null)
		requestSenderLink = new WorkerToRequestSenderLink(this);
	return requestSenderLink;
}
/**
 * This method was generated for supporting the association named Contract2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getWorkedContract() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getWorkedContractLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named Contract2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getWorkedContractLink() {
	if (workedContractLink == null)
		workedContractLink = new WorkerToWorkedContractLink(this);
	return workedContractLink;
}
/**
 * Insert the method's description here.
 * Creation date: (11.04.2002 18:50:36)
 * @return int
 */
public int getWorker() {
	return worker;
}
/**
 * This method was generated for supporting the association named workers2company.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetCompanyKey(com.hps.july.persistence.CompanyKey inKey) {
	boolean company_NULLTEST = (inKey == null);
	if (company_NULLTEST) company_company = null; else company_company = (new Integer(inKey.company));
}
/**
 * This method was generated for supporting the association named workers2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetDivisionKey(com.hps.july.persistence.DivisionKey inKey) {
	boolean division_NULLTEST = (inKey == null);
	if (division_NULLTEST) division_division = null; else division_division = (new Integer(inKey.division));
}
/**
 * This method was generated for supporting the association named workers2people.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetManKey(com.hps.july.persistence.PeopleKey inKey) {
	boolean man_NULLTEST = (inKey == null);
	if (man_NULLTEST) man_man = null; else man_man = (new Integer(inKey.man));
}
/**
 * This method was generated for supporting the association named Worker2Organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetOrganizationKey(com.hps.july.persistence.OrganizationKey inKey) {
	boolean organization_NULLTEST = (inKey == null);
	if (organization_NULLTEST) organization_organization = null; else organization_organization = (new Integer(inKey.organization));
}
/**
 * This method was generated for supporting the association named workers2position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetPositionKey(com.hps.july.persistence.WorkPositionKey inKey) {
	boolean position_NULLTEST = (inKey == null);
	if (position_NULLTEST) position_workposition = null; else position_workposition = (new Integer(inKey.workposition));
}
/**
 * This method was generated for supporting the association named LeaseContract2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void removeLeaseContracts(com.hps.july.persistence.LeaseContract aLeaseContracts) throws java.rmi.RemoteException {
	this.getLeaseContractsLink().removeElement(aLeaseContracts);
}
/**
 * This method was generated for supporting the association named Photo2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void removePhoto(com.hps.july.persistence.Photo aPhoto) throws java.rmi.RemoteException {
	this.getPhotoLink().removeElement(aPhoto);
}
/**
 * This method was generated for supporting the association named PositionResponsibleWorkers2Workers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void removePositionResponsibleWorkers(com.hps.july.persistence.PositionResponsibleWorkers aPositionResponsibleWorkers) throws java.rmi.RemoteException {
	this.getPositionResponsibleWorkersLink().removeElement(aPositionResponsibleWorkers);
}
/**
 * This method was generated for supporting the association named AssemblingAct2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddAssemblingAct(com.hps.july.persistence.AssemblingAct anAssemblingAct) {
	this.getAssemblingActLink().secondaryAddElement(anAssemblingAct);
}
/**
 * This method was generated for supporting the association named Contract2Controller.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddControlledContract(com.hps.july.persistence.Contract aControlledContract) {
	this.getControlledContractLink().secondaryAddElement(aControlledContract);
}
/**
 * This method was generated for supporting the association named divisions2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddControlleddivisions(com.hps.july.persistence.Division aControlleddivisions) {
	this.getControlleddivisionsLink().secondaryAddElement(aControlleddivisions);
}
/**
 * This method was generated for supporting the association named Document2Storager.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddDocumentforstorager(com.hps.july.persistence.Document aDocumentforstorager) {
	this.getDocumentforstoragerLink().secondaryAddElement(aDocumentforstorager);
}
/**
 * This method was generated for supporting the association named Expedition2Expeditor.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddExpedition(com.hps.july.persistence.Expedition anExpedition) {
	this.getExpeditionLink().secondaryAddElement(anExpedition);
}
/**
 * This method was generated for supporting the association named FaultReport2Workers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddFaultReport(com.hps.july.persistence.FaultReport aFaultReport) {
	this.getFaultReportLink().secondaryAddElement(aFaultReport);
}
/**
 * This method was generated for supporting the association named I13nAct2Techstuff.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddI13nActTech(com.hps.july.persistence.I13nAct anI13nActTech) {
	this.getI13nActTechLink().secondaryAddElement(anI13nActTech);
}
/**
 * This method was generated for supporting the association named InternalOutBill2Monter.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddInternalOutBill(com.hps.july.persistence.InternalOutBill anInternalOutBill) {
	this.getInternalOutBillLink().secondaryAddElement(anInternalOutBill);
}
/**
 * This method was generated for supporting the association named InternalWayBill2Monter.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddInternalWayBill(com.hps.july.persistence.InternalWayBill anInternalWayBill) {
	this.getInternalWayBillLink().secondaryAddElement(anInternalWayBill);
}
/**
 * This method was generated for supporting the association named InventoryNumbers2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddInventoryNumbers(com.hps.july.persistence.InventoryNumbers anInventoryNumbers) {
	this.getInventoryNumbersLink().secondaryAddElement(anInventoryNumbers);
}
/**
 * This method was generated for supporting the association named InwayBill2repres.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddInwayBills(com.hps.july.persistence.InwayBill anInwayBills) {
	this.getInwayBillsLink().secondaryAddElement(anInwayBills);
}
/**
 * This method was generated for supporting the association named InwayBill2StorageManagers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddInwayBillstorManagers(com.hps.july.persistence.InwayBill anInwayBillstorManagers) {
	this.getInwayBillstorManagersLink().secondaryAddElement(anInwayBillstorManagers);
}
/**
 * This method was generated for supporting the association named InwayBill2dActTechStuff.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddInwayBilltechstuf(com.hps.july.persistence.InwayBill anInwayBilltechstuf) {
	this.getInwayBilltechstufLink().secondaryAddElement(anInwayBilltechstuf);
}
/**
 * This method was generated for supporting the association named LeaseContract2WorkerEconomist.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseContractEconomist(com.hps.july.persistence.LeaseContract aLeaseContractEconomist) {
	this.getLeaseContractEconomistLink().secondaryAddElement(aLeaseContractEconomist);
}
/**
 * This method was generated for supporting the association named LeaseContract2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseContracts(com.hps.july.persistence.LeaseContract aLeaseContracts) {
	this.getLeaseContractsLink().secondaryAddElement(aLeaseContracts);
}
/**
 * This method was generated for supporting the association named LeaseTaskStart2Economist.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseTaskStartEconomists(com.hps.july.persistence.LeaseTaskStart aLeaseTaskStartEconomists) {
	this.getLeaseTaskStartEconomistsLink().secondaryAddElement(aLeaseTaskStartEconomists);
}
/**
 * This method was generated for supporting the association named PayOffAct2Chairman.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddPayOffActChairMan(com.hps.july.persistence.PayOffAct aPayOffActChairMan) {
	this.getPayOffActChairManLink().secondaryAddElement(aPayOffActChairMan);
}
/**
 * This method was generated for supporting the association named PayOffAct2WorkerMember.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddPayOffActMember(com.hps.july.persistence.PayOffAct aPayOffActMember) {
	this.getPayOffActMemberLink().secondaryAddElement(aPayOffActMember);
}
/**
 * This method was generated for supporting the association named PayOffAct2Member2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddPayOffActMember2(com.hps.july.persistence.PayOffAct aPayOffActMember2) {
	this.getPayOffActMember2Link().secondaryAddElement(aPayOffActMember2);
}
/**
 * This method was generated for supporting the association named Photo2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddPhoto(com.hps.july.persistence.Photo aPhoto) {
	this.getPhotoLink().secondaryAddElement(aPhoto);
}
/**
 * This method was generated for supporting the association named PositionResponsibleWorkers2Workers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddPositionResponsibleWorkers(com.hps.july.persistence.PositionResponsibleWorkers aPositionResponsibleWorkers) {
	this.getPositionResponsibleWorkersLink().secondaryAddElement(aPositionResponsibleWorkers);
}
/**
 * This method was generated for supporting the association named Request2Checker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddRequest(com.hps.july.persistence.Request aRequest) {
	this.getRequestLink().secondaryAddElement(aRequest);
}
/**
 * This method was generated for supporting the association named Request2Sender.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddRequestSender(com.hps.july.persistence.Request aRequestSender) {
	this.getRequestSenderLink().secondaryAddElement(aRequestSender);
}
/**
 * This method was generated for supporting the association named Contract2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddWorkedContract(com.hps.july.persistence.Contract aWorkedContract) {
	this.getWorkedContractLink().secondaryAddElement(aWorkedContract);
}
/**
 * This method was generated for supporting the association named AssemblingAct2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveAssemblingAct(com.hps.july.persistence.AssemblingAct anAssemblingAct) {
	this.getAssemblingActLink().secondaryRemoveElement(anAssemblingAct);
}
/**
 * This method was generated for supporting the association named Contract2Controller.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveControlledContract(com.hps.july.persistence.Contract aControlledContract) {
	this.getControlledContractLink().secondaryRemoveElement(aControlledContract);
}
/**
 * This method was generated for supporting the association named divisions2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveControlleddivisions(com.hps.july.persistence.Division aControlleddivisions) {
	this.getControlleddivisionsLink().secondaryRemoveElement(aControlleddivisions);
}
/**
 * This method was generated for supporting the association named Document2Storager.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveDocumentforstorager(com.hps.july.persistence.Document aDocumentforstorager) {
	this.getDocumentforstoragerLink().secondaryRemoveElement(aDocumentforstorager);
}
/**
 * This method was generated for supporting the association named Expedition2Expeditor.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveExpedition(com.hps.july.persistence.Expedition anExpedition) {
	this.getExpeditionLink().secondaryRemoveElement(anExpedition);
}
/**
 * This method was generated for supporting the association named FaultReport2Workers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveFaultReport(com.hps.july.persistence.FaultReport aFaultReport) {
	this.getFaultReportLink().secondaryRemoveElement(aFaultReport);
}
/**
 * This method was generated for supporting the association named I13nAct2Techstuff.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveI13nActTech(com.hps.july.persistence.I13nAct anI13nActTech) {
	this.getI13nActTechLink().secondaryRemoveElement(anI13nActTech);
}
/**
 * This method was generated for supporting the association named InternalOutBill2Monter.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveInternalOutBill(com.hps.july.persistence.InternalOutBill anInternalOutBill) {
	this.getInternalOutBillLink().secondaryRemoveElement(anInternalOutBill);
}
/**
 * This method was generated for supporting the association named InternalWayBill2Monter.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveInternalWayBill(com.hps.july.persistence.InternalWayBill anInternalWayBill) {
	this.getInternalWayBillLink().secondaryRemoveElement(anInternalWayBill);
}
/**
 * This method was generated for supporting the association named InventoryNumbers2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveInventoryNumbers(com.hps.july.persistence.InventoryNumbers anInventoryNumbers) {
	this.getInventoryNumbersLink().secondaryRemoveElement(anInventoryNumbers);
}
/**
 * This method was generated for supporting the association named InwayBill2repres.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveInwayBills(com.hps.july.persistence.InwayBill anInwayBills) {
	this.getInwayBillsLink().secondaryRemoveElement(anInwayBills);
}
/**
 * This method was generated for supporting the association named InwayBill2StorageManagers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveInwayBillstorManagers(com.hps.july.persistence.InwayBill anInwayBillstorManagers) {
	this.getInwayBillstorManagersLink().secondaryRemoveElement(anInwayBillstorManagers);
}
/**
 * This method was generated for supporting the association named InwayBill2dActTechStuff.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveInwayBilltechstuf(com.hps.july.persistence.InwayBill anInwayBilltechstuf) {
	this.getInwayBilltechstufLink().secondaryRemoveElement(anInwayBilltechstuf);
}
/**
 * This method was generated for supporting the association named LeaseContract2WorkerEconomist.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseContractEconomist(com.hps.july.persistence.LeaseContract aLeaseContractEconomist) {
	this.getLeaseContractEconomistLink().secondaryRemoveElement(aLeaseContractEconomist);
}
/**
 * This method was generated for supporting the association named LeaseContract2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseContracts(com.hps.july.persistence.LeaseContract aLeaseContracts) {
	this.getLeaseContractsLink().secondaryRemoveElement(aLeaseContracts);
}
/**
 * This method was generated for supporting the association named LeaseTaskStart2Economist.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseTaskStartEconomists(com.hps.july.persistence.LeaseTaskStart aLeaseTaskStartEconomists) {
	this.getLeaseTaskStartEconomistsLink().secondaryRemoveElement(aLeaseTaskStartEconomists);
}
/**
 * This method was generated for supporting the association named PayOffAct2Chairman.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemovePayOffActChairMan(com.hps.july.persistence.PayOffAct aPayOffActChairMan) {
	this.getPayOffActChairManLink().secondaryRemoveElement(aPayOffActChairMan);
}
/**
 * This method was generated for supporting the association named PayOffAct2WorkerMember.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemovePayOffActMember(com.hps.july.persistence.PayOffAct aPayOffActMember) {
	this.getPayOffActMemberLink().secondaryRemoveElement(aPayOffActMember);
}
/**
 * This method was generated for supporting the association named PayOffAct2Member2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemovePayOffActMember2(com.hps.july.persistence.PayOffAct aPayOffActMember2) {
	this.getPayOffActMember2Link().secondaryRemoveElement(aPayOffActMember2);
}
/**
 * This method was generated for supporting the association named Photo2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemovePhoto(com.hps.july.persistence.Photo aPhoto) {
	this.getPhotoLink().secondaryRemoveElement(aPhoto);
}
/**
 * This method was generated for supporting the association named PositionResponsibleWorkers2Workers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemovePositionResponsibleWorkers(com.hps.july.persistence.PositionResponsibleWorkers aPositionResponsibleWorkers) {
	this.getPositionResponsibleWorkersLink().secondaryRemoveElement(aPositionResponsibleWorkers);
}
/**
 * This method was generated for supporting the association named Request2Checker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveRequest(com.hps.july.persistence.Request aRequest) {
	this.getRequestLink().secondaryRemoveElement(aRequest);
}
/**
 * This method was generated for supporting the association named Request2Sender.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveRequestSender(com.hps.july.persistence.Request aRequestSender) {
	this.getRequestSenderLink().secondaryRemoveElement(aRequestSender);
}
/**
 * This method was generated for supporting the association named Contract2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveWorkedContract(com.hps.july.persistence.Contract aWorkedContract) {
	this.getWorkedContractLink().secondaryRemoveElement(aWorkedContract);
}
/**
 * This method was generated for supporting the association named workers2company.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetCompany(com.hps.july.persistence.Company aCompany) throws java.rmi.RemoteException {
	this.getCompanyLink().secondarySet(aCompany);
}
/**
 * This method was generated for supporting the association named workers2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetDivision(com.hps.july.persistence.Division aDivision) throws java.rmi.RemoteException {
	this.getDivisionLink().secondarySet(aDivision);
}
/**
 * This method was generated for supporting the association named workers2people.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetMan(com.hps.july.persistence.People aMan) throws java.rmi.RemoteException {
	this.getManLink().secondarySet(aMan);
}
/**
 * This method was generated for supporting the association named Worker2Organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetOrganization(com.hps.july.persistence.Organization anOrganization) throws java.rmi.RemoteException {
	this.getOrganizationLink().secondarySet(anOrganization);
}
/**
 * This method was generated for supporting the association named workers2position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetPosition(com.hps.july.persistence.WorkPosition aPosition) throws java.rmi.RemoteException {
	this.getPositionLink().secondarySet(aPosition);
}
/**
 * Setter method for active
 */
public void setActive(java.lang.Boolean newValue) {
	this.active = newValue;
}
/**
 * This method was generated for supporting the association named workers2company.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setCompany(com.hps.july.persistence.Company aCompany) throws java.rmi.RemoteException {
	this.getCompanyLink().set(aCompany);
}
/**
 * This method was generated for supporting the association named workers2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setDivision(com.hps.july.persistence.Division aDivision) throws java.rmi.RemoteException {
	this.getDivisionLink().set(aDivision);
}
/**
 * Setter method for email
 * @param newValue java.lang.String
 */
public void setEmail(java.lang.String newValue) {
	this.email = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for fax
 * @param newValue java.lang.String
 */
public void setFax(java.lang.String newValue) {
	this.fax = newValue;
}
/**
 * Setter method for isour
 */
public void setIsour(java.lang.Boolean newValue) {
	this.isour = newValue;
}
/**
 * Setter method for isservicestuff
 */
public void setIsservicestuff(java.lang.Boolean newValue) {
	this.isservicestuff = newValue;
}
/**
 * Setter method for localphone
 */
public void setLocalphone(java.lang.String newValue) {
	this.localphone = newValue;
}
/**
 * Setter method for lotusaddress
 */
public void setLotusaddress(java.lang.String newValue) {
	this.lotusaddress = newValue;
}
/**
 * This method was generated for supporting the association named workers2people.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setMan(com.hps.july.persistence.People aMan) throws java.rmi.RemoteException {
	this.getManLink().set(aMan);
}
/**
 * Setter method for mobilephone
 * @param newValue java.lang.String
 */
public void setMobilephone(java.lang.String newValue) {
	this.mobilephone = newValue;
}
/**
 * This method was generated for supporting the association named Worker2Organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setOrganization(com.hps.july.persistence.Organization anOrganization) throws java.rmi.RemoteException {
	this.getOrganizationLink().set(anOrganization);
}
/**
 * Setter method for phone1
 * @param newValue java.lang.String
 */
public void setPhone1(java.lang.String newValue) {
	this.phone1 = newValue;
}
/**
 * Setter method for phone2
 * @param newValue java.lang.String
 */
public void setPhone2(java.lang.String newValue) {
	this.phone2 = newValue;
}
/**
 * This method was generated for supporting the association named workers2position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setPosition(com.hps.july.persistence.WorkPosition aPosition) throws java.rmi.RemoteException {
	this.getPositionLink().set(aPosition);
}
/**
 * Insert the method's description here.
 * Creation date: (11.04.2002 18:50:36)
 * @param newWorker int
 */
public void setWorker(int newWorker) {
	worker = newWorker;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
