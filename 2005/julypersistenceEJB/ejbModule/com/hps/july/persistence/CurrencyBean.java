package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Валюта
 */
public class CurrencyBean implements EntityBean {
	public int currency;
	private javax.ejb.EntityContext entityContext = null;
	public String name;
	private final static long serialVersionUID = 3206093459760846163L;
	public String shortname;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink rateTypeLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink ratesLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink contractLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink inwayBillLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leasePayRuleLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseChargeRuleLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseContractLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseContract2Link = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink abonentBillPosesLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseMutualReglamentsMainLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseMutualReglamentsAddLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseSaldoMainsLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseSaldoAddsLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseDocPositionsLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseCalcRatesLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink outWayBillsLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseSchetFaktsLink = null;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("shortname", getShortname());
        h.put("currency", new Integer(getCurrency()));
        h.put("name", getName());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localShortname = (java.lang.String) h.get("shortname");
        Integer localCurrency = (Integer) h.get("currency");
        java.lang.String localName = (java.lang.String) h.get("name");

        if ( h.containsKey("shortname") )
            setShortname((localShortname));
        if ( h.containsKey("currency") )
            setCurrency((localCurrency).intValue());
        if ( h.containsKey("name") )
            setName((localName));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getLeasePayRuleLink());
	links.addElement(getContractLink());
	links.addElement(getInwayBillLink());
	links.addElement(getLeaseMutualReglamentsMainLink());
	links.addElement(getLeaseContract2Link());
	links.addElement(getLeaseSaldoAddsLink());
	links.addElement(getLeaseCalcRatesLink());
	links.addElement(getLeaseContractLink());
	links.addElement(getLeaseDocPositionsLink());
	links.addElement(getLeaseChargeRuleLink());
	links.addElement(getLeaseMutualReglamentsAddLink());
	links.addElement(getOutWayBillsLink());
	links.addElement(getAbonentBillPosesLink());
	links.addElement(getRateTypeLink());
	links.addElement(getRatesLink());
	links.addElement(getLeaseSaldoMainsLink());
	links.addElement(getLeaseSchetFaktsLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	leasePayRuleLink = null;
	contractLink = null;
	inwayBillLink = null;
	leaseMutualReglamentsMainLink = null;
	leaseContract2Link = null;
	leaseSaldoAddsLink = null;
	leaseCalcRatesLink = null;
	leaseContractLink = null;
	leaseDocPositionsLink = null;
	leaseChargeRuleLink = null;
	leaseMutualReglamentsAddLink = null;
	outWayBillsLink = null;
	abonentBillPosesLink = null;
	rateTypeLink = null;
	ratesLink = null;
	leaseSaldoMainsLink = null;
	leaseSchetFaktsLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * This method was generated for supporting the association named AbonentBillPos2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addAbonentBillPoses(com.hps.july.persistence.AbonentBillPos anAbonentBillPoses) throws java.rmi.RemoteException {
	this.getAbonentBillPosesLink().addElement(anAbonentBillPoses);
}
/**
 * This method was generated for supporting the association named Contract2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addContract(com.hps.july.persistence.Contract aContract) throws java.rmi.RemoteException {
	this.getContractLink().addElement(aContract);
}
/**
 * This method was generated for supporting the association named InwayBill2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addInwayBill(com.hps.july.persistence.InwayBill anInwayBill) throws java.rmi.RemoteException {
	this.getInwayBillLink().addElement(anInwayBill);
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeaseChargeRule(com.hps.july.persistence.LeaseChargeRule aLeaseChargeRule) throws java.rmi.RemoteException {
	this.getLeaseChargeRuleLink().addElement(aLeaseChargeRule);
}
/**
 * This method was generated for supporting the association named LeaseContract2Currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeaseContract(com.hps.july.persistence.LeaseContract aLeaseContract) throws java.rmi.RemoteException {
	this.getLeaseContractLink().addElement(aLeaseContract);
}
/**
 * This method was generated for supporting the association named LeaseContract2Currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeaseContract2(com.hps.july.persistence.LeaseContract aLeaseContract2) throws java.rmi.RemoteException {
	this.getLeaseContract2Link().addElement(aLeaseContract2);
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeaseDocPositions(com.hps.july.persistence.LeaseDocPosition aLeaseDocPositions) throws java.rmi.RemoteException {
	this.getLeaseDocPositionsLink().addElement(aLeaseDocPositions);
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeaseMutualReglamentsAdd(com.hps.july.persistence.LeaseMutualReglament aLeaseMutualReglamentsAdd) throws java.rmi.RemoteException {
	this.getLeaseMutualReglamentsAddLink().addElement(aLeaseMutualReglamentsAdd);
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeaseMutualReglamentsMain(com.hps.july.persistence.LeaseMutualReglament aLeaseMutualReglamentsMain) throws java.rmi.RemoteException {
	this.getLeaseMutualReglamentsMainLink().addElement(aLeaseMutualReglamentsMain);
}
/**
 * This method was generated for supporting the association named LeasePayRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeasePayRule(com.hps.july.persistence.LeasePayRule aLeasePayRule) throws java.rmi.RemoteException {
	this.getLeasePayRuleLink().addElement(aLeasePayRule);
}
/**
 * This method was generated for supporting the association named LeaseSaldo2addcur.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeaseSaldoAdds(com.hps.july.persistence.LeaseSaldo aLeaseSaldoAdds) throws java.rmi.RemoteException {
	this.getLeaseSaldoAddsLink().addElement(aLeaseSaldoAdds);
}
/**
 * This method was generated for supporting the association named LeaseSaldo2maincur.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeaseSaldoMains(com.hps.july.persistence.LeaseSaldo aLeaseSaldoMains) throws java.rmi.RemoteException {
	this.getLeaseSaldoMainsLink().addElement(aLeaseSaldoMains);
}
/**
 * This method was generated for supporting the association named LeaseSchetFakt2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeaseSchetFakts(com.hps.july.persistence.LeaseSchetFakt aLeaseSchetFakts) throws java.rmi.RemoteException {
	this.getLeaseSchetFaktsLink().addElement(aLeaseSchetFakts);
}
/**
 * This method was generated for supporting the association named OutWayBill2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addOutWayBills(com.hps.july.persistence.OutWayBill anOutWayBills) throws java.rmi.RemoteException {
	this.getOutWayBillsLink().addElement(anOutWayBills);
}
/**
 * This method was generated for supporting the association named RateTypes2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addRateType(com.hps.july.persistence.RateType aRateType) throws java.rmi.RemoteException {
	this.getRateTypeLink().addElement(aRateType);
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argCurrency int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argCurrency) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	currency = argCurrency;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argCurrency int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argCurrency, String argName, String argShortName ) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	name = null;
	shortname = null;

	currency = argCurrency;
	name = argName;
	shortname = argShortName;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argCurrency int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argCurrency) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * This method was generated for supporting the association named AbonentBillPos2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getAbonentBillPoses() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getAbonentBillPosesLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named AbonentBillPos2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getAbonentBillPosesLink() {
	if (abonentBillPosesLink == null)
		abonentBillPosesLink = new CurrencyToAbonentBillPosesLink(this);
	return abonentBillPosesLink;
}
/**
 * This method was generated for supporting the association named Contract2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getContract() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getContractLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named Contract2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getContractLink() {
	if (contractLink == null)
		contractLink = new CurrencyToContractLink(this);
	return contractLink;
}
/**
 * Insert the method's description here.
 * Creation date: (18.04.2002 10:50:48)
 * @return int
 */
public int getCurrency() {
	return currency;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * This method was generated for supporting the association named InwayBill2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getInwayBill() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getInwayBillLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named InwayBill2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getInwayBillLink() {
	if (inwayBillLink == null)
		inwayBillLink = new CurrencyToInwayBillLink(this);
	return inwayBillLink;
}
/**
 * This method was generated for supporting the association named LeaseCalcRate2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseCalcRates() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseCalcRatesLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseCalcRate2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseCalcRatesLink() {
	if (leaseCalcRatesLink == null)
		leaseCalcRatesLink = new CurrencyToLeaseCalcRatesLink(this);
	return leaseCalcRatesLink;
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseChargeRule() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseChargeRuleLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseChargeRuleLink() {
	if (leaseChargeRuleLink == null)
		leaseChargeRuleLink = new CurrencyToLeaseChargeRuleLink(this);
	return leaseChargeRuleLink;
}
/**
 * This method was generated for supporting the association named LeaseContract2Currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseContract() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseContractLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseContract2Currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseContract2() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseContract2Link().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseContract2Currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseContract2Link() {
	if (leaseContract2Link == null)
		leaseContract2Link = new CurrencyToLeaseContract2Link(this);
	return leaseContract2Link;
}
/**
 * This method was generated for supporting the association named LeaseContract2Currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseContractLink() {
	if (leaseContractLink == null)
		leaseContractLink = new CurrencyToLeaseContractLink(this);
	return leaseContractLink;
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseDocPositions() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseDocPositionsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseDocPositionsLink() {
	if (leaseDocPositionsLink == null)
		leaseDocPositionsLink = new CurrencyToLeaseDocPositionsLink(this);
	return leaseDocPositionsLink;
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseMutualReglamentsAdd() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseMutualReglamentsAddLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseMutualReglamentsAddLink() {
	if (leaseMutualReglamentsAddLink == null)
		leaseMutualReglamentsAddLink = new CurrencyToLeaseMutualReglamentsAddLink(this);
	return leaseMutualReglamentsAddLink;
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseMutualReglamentsMain() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseMutualReglamentsMainLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseMutualReglamentsMainLink() {
	if (leaseMutualReglamentsMainLink == null)
		leaseMutualReglamentsMainLink = new CurrencyToLeaseMutualReglamentsMainLink(this);
	return leaseMutualReglamentsMainLink;
}
/**
 * This method was generated for supporting the association named LeasePayRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeasePayRule() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeasePayRuleLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeasePayRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeasePayRuleLink() {
	if (leasePayRuleLink == null)
		leasePayRuleLink = new CurrencyToLeasePayRuleLink(this);
	return leasePayRuleLink;
}
/**
 * This method was generated for supporting the association named LeaseSaldo2addcur.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseSaldoAdds() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseSaldoAddsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseSaldo2addcur.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseSaldoAddsLink() {
	if (leaseSaldoAddsLink == null)
		leaseSaldoAddsLink = new CurrencyToLeaseSaldoAddsLink(this);
	return leaseSaldoAddsLink;
}
/**
 * This method was generated for supporting the association named LeaseSaldo2maincur.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseSaldoMains() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseSaldoMainsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseSaldo2maincur.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseSaldoMainsLink() {
	if (leaseSaldoMainsLink == null)
		leaseSaldoMainsLink = new CurrencyToLeaseSaldoMainsLink(this);
	return leaseSaldoMainsLink;
}
/**
 * This method was generated for supporting the association named LeaseSchetFakt2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseSchetFakts() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseSchetFaktsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseSchetFakt2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseSchetFaktsLink() {
	if (leaseSchetFaktsLink == null)
		leaseSchetFaktsLink = new CurrencyToLeaseSchetFaktsLink(this);
	return leaseSchetFaktsLink;
}
/**
 * Getter method for name
 * @return java.lang.String
 */
public java.lang.String getName() {
	return name;
}
/**
 * This method was generated for supporting the association named OutWayBill2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getOutWayBills() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getOutWayBillsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named OutWayBill2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getOutWayBillsLink() {
	if (outWayBillsLink == null)
		outWayBillsLink = new CurrencyToOutWayBillsLink(this);
	return outWayBillsLink;
}
/**
 * This method was generated for supporting the association named Rate2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getRates() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getRatesLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named Rate2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getRatesLink() {
	if (ratesLink == null)
		ratesLink = new CurrencyToRatesLink(this);
	return ratesLink;
}
/**
 * This method was generated for supporting the association named RateTypes2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getRateType() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getRateTypeLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named RateTypes2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getRateTypeLink() {
	if (rateTypeLink == null)
		rateTypeLink = new CurrencyToRateTypeLink(this);
	return rateTypeLink;
}
/**
 * Getter method for shortname
 * @return java.lang.String
 */
public java.lang.String getShortname() {
	return shortname;
}
/**
 * This method was generated for supporting the association named LeaseContract2Currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void removeLeaseContract(com.hps.july.persistence.LeaseContract aLeaseContract) throws java.rmi.RemoteException {
	this.getLeaseContractLink().removeElement(aLeaseContract);
}
/**
 * This method was generated for supporting the association named LeaseContract2Currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void removeLeaseContract2(com.hps.july.persistence.LeaseContract aLeaseContract2) throws java.rmi.RemoteException {
	this.getLeaseContract2Link().removeElement(aLeaseContract2);
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void removeLeaseMutualReglamentsAdd(com.hps.july.persistence.LeaseMutualReglament aLeaseMutualReglamentsAdd) throws java.rmi.RemoteException {
	this.getLeaseMutualReglamentsAddLink().removeElement(aLeaseMutualReglamentsAdd);
}
/**
 * This method was generated for supporting the association named LeaseSaldo2addcur.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void removeLeaseSaldoAdds(com.hps.july.persistence.LeaseSaldo aLeaseSaldoAdds) throws java.rmi.RemoteException {
	this.getLeaseSaldoAddsLink().removeElement(aLeaseSaldoAdds);
}
/**
 * This method was generated for supporting the association named AbonentBillPos2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddAbonentBillPoses(com.hps.july.persistence.AbonentBillPos anAbonentBillPoses) {
	this.getAbonentBillPosesLink().secondaryAddElement(anAbonentBillPoses);
}
/**
 * This method was generated for supporting the association named Contract2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddContract(com.hps.july.persistence.Contract aContract) {
	this.getContractLink().secondaryAddElement(aContract);
}
/**
 * This method was generated for supporting the association named InwayBill2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddInwayBill(com.hps.july.persistence.InwayBill anInwayBill) {
	this.getInwayBillLink().secondaryAddElement(anInwayBill);
}
/**
 * This method was generated for supporting the association named LeaseCalcRate2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseCalcRates(com.hps.july.persistence.LeaseCalcRate aLeaseCalcRates) {
	this.getLeaseCalcRatesLink().secondaryAddElement(aLeaseCalcRates);
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseChargeRule(com.hps.july.persistence.LeaseChargeRule aLeaseChargeRule) {
	this.getLeaseChargeRuleLink().secondaryAddElement(aLeaseChargeRule);
}
/**
 * This method was generated for supporting the association named LeaseContract2Currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseContract(com.hps.july.persistence.LeaseContract aLeaseContract) {
	this.getLeaseContractLink().secondaryAddElement(aLeaseContract);
}
/**
 * This method was generated for supporting the association named LeaseContract2Currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseContract2(com.hps.july.persistence.LeaseContract aLeaseContract2) {
	this.getLeaseContract2Link().secondaryAddElement(aLeaseContract2);
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseDocPositions(com.hps.july.persistence.LeaseDocPosition aLeaseDocPositions) {
	this.getLeaseDocPositionsLink().secondaryAddElement(aLeaseDocPositions);
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseMutualReglamentsAdd(com.hps.july.persistence.LeaseMutualReglament aLeaseMutualReglamentsAdd) {
	this.getLeaseMutualReglamentsAddLink().secondaryAddElement(aLeaseMutualReglamentsAdd);
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseMutualReglamentsMain(com.hps.july.persistence.LeaseMutualReglament aLeaseMutualReglamentsMain) {
	this.getLeaseMutualReglamentsMainLink().secondaryAddElement(aLeaseMutualReglamentsMain);
}
/**
 * This method was generated for supporting the association named LeasePayRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeasePayRule(com.hps.july.persistence.LeasePayRule aLeasePayRule) {
	this.getLeasePayRuleLink().secondaryAddElement(aLeasePayRule);
}
/**
 * This method was generated for supporting the association named LeaseSaldo2addcur.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseSaldoAdds(com.hps.july.persistence.LeaseSaldo aLeaseSaldoAdds) {
	this.getLeaseSaldoAddsLink().secondaryAddElement(aLeaseSaldoAdds);
}
/**
 * This method was generated for supporting the association named LeaseSaldo2maincur.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseSaldoMains(com.hps.july.persistence.LeaseSaldo aLeaseSaldoMains) {
	this.getLeaseSaldoMainsLink().secondaryAddElement(aLeaseSaldoMains);
}
/**
 * This method was generated for supporting the association named LeaseSchetFakt2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseSchetFakts(com.hps.july.persistence.LeaseSchetFakt aLeaseSchetFakts) {
	this.getLeaseSchetFaktsLink().secondaryAddElement(aLeaseSchetFakts);
}
/**
 * This method was generated for supporting the association named OutWayBill2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddOutWayBills(com.hps.july.persistence.OutWayBill anOutWayBills) {
	this.getOutWayBillsLink().secondaryAddElement(anOutWayBills);
}
/**
 * This method was generated for supporting the association named Rate2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddRates(com.hps.july.persistence.Rate aRates) {
	this.getRatesLink().secondaryAddElement(aRates);
}
/**
 * This method was generated for supporting the association named RateTypes2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddRateType(com.hps.july.persistence.RateType aRateType) {
	this.getRateTypeLink().secondaryAddElement(aRateType);
}
/**
 * This method was generated for supporting the association named AbonentBillPos2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveAbonentBillPoses(com.hps.july.persistence.AbonentBillPos anAbonentBillPoses) {
	this.getAbonentBillPosesLink().secondaryRemoveElement(anAbonentBillPoses);
}
/**
 * This method was generated for supporting the association named Contract2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveContract(com.hps.july.persistence.Contract aContract) {
	this.getContractLink().secondaryRemoveElement(aContract);
}
/**
 * This method was generated for supporting the association named InwayBill2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveInwayBill(com.hps.july.persistence.InwayBill anInwayBill) {
	this.getInwayBillLink().secondaryRemoveElement(anInwayBill);
}
/**
 * This method was generated for supporting the association named LeaseCalcRate2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseCalcRates(com.hps.july.persistence.LeaseCalcRate aLeaseCalcRates) {
	this.getLeaseCalcRatesLink().secondaryRemoveElement(aLeaseCalcRates);
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseChargeRule(com.hps.july.persistence.LeaseChargeRule aLeaseChargeRule) {
	this.getLeaseChargeRuleLink().secondaryRemoveElement(aLeaseChargeRule);
}
/**
 * This method was generated for supporting the association named LeaseContract2Currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseContract(com.hps.july.persistence.LeaseContract aLeaseContract) {
	this.getLeaseContractLink().secondaryRemoveElement(aLeaseContract);
}
/**
 * This method was generated for supporting the association named LeaseContract2Currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseContract2(com.hps.july.persistence.LeaseContract aLeaseContract2) {
	this.getLeaseContract2Link().secondaryRemoveElement(aLeaseContract2);
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseDocPositions(com.hps.july.persistence.LeaseDocPosition aLeaseDocPositions) {
	this.getLeaseDocPositionsLink().secondaryRemoveElement(aLeaseDocPositions);
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseMutualReglamentsAdd(com.hps.july.persistence.LeaseMutualReglament aLeaseMutualReglamentsAdd) {
	this.getLeaseMutualReglamentsAddLink().secondaryRemoveElement(aLeaseMutualReglamentsAdd);
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseMutualReglamentsMain(com.hps.july.persistence.LeaseMutualReglament aLeaseMutualReglamentsMain) {
	this.getLeaseMutualReglamentsMainLink().secondaryRemoveElement(aLeaseMutualReglamentsMain);
}
/**
 * This method was generated for supporting the association named LeasePayRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeasePayRule(com.hps.july.persistence.LeasePayRule aLeasePayRule) {
	this.getLeasePayRuleLink().secondaryRemoveElement(aLeasePayRule);
}
/**
 * This method was generated for supporting the association named LeaseSaldo2addcur.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseSaldoAdds(com.hps.july.persistence.LeaseSaldo aLeaseSaldoAdds) {
	this.getLeaseSaldoAddsLink().secondaryRemoveElement(aLeaseSaldoAdds);
}
/**
 * This method was generated for supporting the association named LeaseSaldo2maincur.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseSaldoMains(com.hps.july.persistence.LeaseSaldo aLeaseSaldoMains) {
	this.getLeaseSaldoMainsLink().secondaryRemoveElement(aLeaseSaldoMains);
}
/**
 * This method was generated for supporting the association named LeaseSchetFakt2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseSchetFakts(com.hps.july.persistence.LeaseSchetFakt aLeaseSchetFakts) {
	this.getLeaseSchetFaktsLink().secondaryRemoveElement(aLeaseSchetFakts);
}
/**
 * This method was generated for supporting the association named OutWayBill2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveOutWayBills(com.hps.july.persistence.OutWayBill anOutWayBills) {
	this.getOutWayBillsLink().secondaryRemoveElement(anOutWayBills);
}
/**
 * This method was generated for supporting the association named Rate2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveRates(com.hps.july.persistence.Rate aRates) {
	this.getRatesLink().secondaryRemoveElement(aRates);
}
/**
 * This method was generated for supporting the association named RateTypes2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveRateType(com.hps.july.persistence.RateType aRateType) {
	this.getRateTypeLink().secondaryRemoveElement(aRateType);
}
/**
 * Insert the method's description here.
 * Creation date: (18.04.2002 10:50:48)
 * @param newCurrency int
 */
public void setCurrency(int newCurrency) {
	currency = newCurrency;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for name
 * @param newValue java.lang.String
 */
public void setName(java.lang.String newValue) {
	this.name = newValue;
}
/**
 * Setter method for shortname
 * @param newValue java.lang.String
 */
public void setShortname(java.lang.String newValue) {
	this.shortname = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
