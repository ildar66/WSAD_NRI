package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Данные PIE - договора NRI
 */
public class PIEDogovorNRIBean implements EntityBean {
	public String description;
	public String dogblankcode;
	public java.sql.Date dogdate;
	public java.sql.Date dogfinishdate;
	public java.sql.Date dogstartdate;
	private javax.ejb.EntityContext entityContext = null;
	public int idaccountnri;
	public int idbudjet;
	public String iddogovorplatinum;
	public int idexpence;
	public Integer idheaduser;
	public int idorgowner;
	public int idpartnernri;
	public int idrecdogovor;
	public java.math.BigDecimal overprice;
	public String purpose;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.math.BigDecimal sumdog;
	public int valute;
	public java.lang.Integer piequery_idquery;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink piequeryLink = null;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("description", getDescription());
        h.put("overprice", getOverprice());
        h.put("idbudjet", new Integer(getIdbudjet()));
        h.put("dogfinishdate", getDogfinishdate());
        h.put("iddogovorplatinum", getIddogovorplatinum());
        h.put("dogstartdate", getDogstartdate());
        h.put("idrecdogovor", new Integer(getIdrecdogovor()));
        h.put("sumdog", getSumdog());
        h.put("idexpence", new Integer(getIdexpence()));
        h.put("idheaduser", getIdheaduser());
        h.put("idorgowner", new Integer(getIdorgowner()));
        h.put("idpartnernri", new Integer(getIdpartnernri()));
        h.put("dogdate", getDogdate());
        h.put("dogblankcode", getDogblankcode());
        h.put("valute", new Integer(getValute()));
        h.put("idaccountnri", new Integer(getIdaccountnri()));
        h.put("piequeryKey", getPiequeryKey());
        h.put("purpose", getPurpose());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localDescription = (java.lang.String) h.get("description");
        java.math.BigDecimal localOverprice = (java.math.BigDecimal) h.get("overprice");
        Integer localIdbudjet = (Integer) h.get("idbudjet");
        java.sql.Date localDogfinishdate = (java.sql.Date) h.get("dogfinishdate");
        java.lang.String localIddogovorplatinum = (java.lang.String) h.get("iddogovorplatinum");
        java.sql.Date localDogstartdate = (java.sql.Date) h.get("dogstartdate");
        java.math.BigDecimal localSumdog = (java.math.BigDecimal) h.get("sumdog");
        Integer localIdexpence = (Integer) h.get("idexpence");
        java.lang.Integer localIdheaduser = (java.lang.Integer) h.get("idheaduser");
        Integer localIdorgowner = (Integer) h.get("idorgowner");
        Integer localIdpartnernri = (Integer) h.get("idpartnernri");
        java.sql.Date localDogdate = (java.sql.Date) h.get("dogdate");
        java.lang.String localDogblankcode = (java.lang.String) h.get("dogblankcode");
        Integer localValute = (Integer) h.get("valute");
        Integer localIdaccountnri = (Integer) h.get("idaccountnri");
        java.lang.String localPurpose = (java.lang.String) h.get("purpose");

        if ( h.containsKey("description") )
            setDescription((localDescription));
        if ( h.containsKey("overprice") )
            setOverprice((localOverprice));
        if ( h.containsKey("idbudjet") )
            setIdbudjet((localIdbudjet).intValue());
        if ( h.containsKey("dogfinishdate") )
            setDogfinishdate((localDogfinishdate));
        if ( h.containsKey("iddogovorplatinum") )
            setIddogovorplatinum((localIddogovorplatinum));
        if ( h.containsKey("dogstartdate") )
            setDogstartdate((localDogstartdate));
        if ( h.containsKey("sumdog") )
            setSumdog((localSumdog));
        if ( h.containsKey("idexpence") )
            setIdexpence((localIdexpence).intValue());
        if ( h.containsKey("idheaduser") )
            setIdheaduser((localIdheaduser));
        if ( h.containsKey("idorgowner") )
            setIdorgowner((localIdorgowner).intValue());
        if ( h.containsKey("idpartnernri") )
            setIdpartnernri((localIdpartnernri).intValue());
        if ( h.containsKey("dogdate") )
            setDogdate((localDogdate));
        if ( h.containsKey("dogblankcode") )
            setDogblankcode((localDogblankcode));
        if ( h.containsKey("valute") )
            setValute((localValute).intValue());
        if ( h.containsKey("idaccountnri") )
            setIdaccountnri((localIdaccountnri).intValue());
        if ( h.containsKey("purpose") )
            setPurpose((localPurpose));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getPiequeryLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	piequeryLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argIdrecdogovor int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argIdrecdogovor, int argQuery, int argOrgOwner, int argPartnerNri, int argAccountNri,
		String argDogovorPlatinum, int argIdBudjet, int argIdExperience, 
		java.sql.Date argDogDate, java.sql.Date argDogStartDate, java.sql.Date argDogEndDate, 
		String argDogBlankCode, java.math.BigDecimal argSumDog, int argValute) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	idrecdogovor = argIdrecdogovor;
	piequery_idquery = new Integer(argQuery);
	idorgowner = argOrgOwner;
	idpartnernri = argPartnerNri;
	idaccountnri = argAccountNri;
	iddogovorplatinum = argDogovorPlatinum;
	idbudjet = argIdBudjet;
	idexpence = argIdExperience;
	dogdate = argDogDate;
	dogstartdate = argDogStartDate;
	dogfinishdate = argDogEndDate;
	dogblankcode = argDogBlankCode;
	sumdog = argSumDog;
	valute = argValute;
	purpose = null;
	description = null;
	idheaduser = null;
	overprice = null;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argIdrecdogovor int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argIdrecdogovor) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for description
 * @return java.lang.String
 */
public java.lang.String getDescription() {
	return description;
}
/**
 * Getter method for dogblankcode
 * @return java.lang.String
 */
public java.lang.String getDogblankcode() {
	return dogblankcode;
}
/**
 * Getter method for dogdate
 * @return java.sql.Date
 */
public java.sql.Date getDogdate() {
	return dogdate;
}
/**
 * Getter method for dogfinishdate
 * @return java.sql.Date
 */
public java.sql.Date getDogfinishdate() {
	return dogfinishdate;
}
/**
 * Getter method for dogstartdate
 * @return java.sql.Date
 */
public java.sql.Date getDogstartdate() {
	return dogstartdate;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for idaccountnri
 * @return int
 */
public int getIdaccountnri() {
	return idaccountnri;
}
/**
 * Getter method for idbudjet
 * @return int
 */
public int getIdbudjet() {
	return idbudjet;
}
/**
 * Getter method for iddogovorplatinum
 * @return java.lang.String
 */
public java.lang.String getIddogovorplatinum() {
	return iddogovorplatinum;
}
/**
 * Getter method for idexpence
 * @return int
 */
public int getIdexpence() {
	return idexpence;
}
/**
 * Getter method for idheaduser
 * @return java.lang.Integer
 */
public java.lang.Integer getIdheaduser() {
	return idheaduser;
}
/**
 * Getter method for idorgowner
 * @return int
 */
public int getIdorgowner() {
	return idorgowner;
}
/**
 * Getter method for idpartnernri
 * @return int
 */
public int getIdpartnernri() {
	return idpartnernri;
}
/**
 * Insert the method's description here.
 * Creation date: (15.01.2003 18:45:20)
 * @return int
 */
public int getIdrecdogovor() {
	return idrecdogovor;
}
/**
 * Getter method for overprice
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getOverprice() {
	return overprice;
}
/**
 * This method was generated for supporting the association named PIEDogovorNRI2query.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.PIEQuery getPiequery() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.PIEQuery)this.getPiequeryLink().value();
}
/**
 * This method was generated for supporting the association named PIEDogovorNRI2query.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.PIEQueryKey getPiequeryKey() {
	com.hps.july.persistence.PIEQueryKey temp = null;
	temp = new com.hps.july.persistence.PIEQueryKey();
	boolean piequery_NULLTEST = true;
	piequery_NULLTEST &= (piequery_idquery == null);
	temp.idquery = ((piequery_idquery == null) ? 0 : piequery_idquery.intValue());
	if (piequery_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named PIEDogovorNRI2query.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getPiequeryLink() {
	if (piequeryLink == null)
		piequeryLink = new PIEDogovorNRIToPiequeryLink(this);
	return piequeryLink;
}
/**
 * Getter method for purpose
 * @return java.lang.String
 */
public java.lang.String getPurpose() {
	return purpose;
}
/**
 * Getter method for sumdog
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getSumdog() {
	return sumdog;
}
/**
 * Getter method for valute
 * @return int
 */
public int getValute() {
	return valute;
}
/**
 * This method was generated for supporting the association named PIEDogovorNRI2query.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetPiequeryKey(com.hps.july.persistence.PIEQueryKey inKey) {
	boolean piequery_NULLTEST = (inKey == null);
	if (piequery_NULLTEST) piequery_idquery = null; else piequery_idquery = (new Integer(inKey.idquery));
}
/**
 * This method was generated for supporting the association named PIEDogovorNRI2query.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetPiequery(com.hps.july.persistence.PIEQuery aPiequery) throws java.rmi.RemoteException {
	this.getPiequeryLink().secondarySet(aPiequery);
}
/**
 * Setter method for description
 * @param newValue java.lang.String
 */
public void setDescription(java.lang.String newValue) {
	this.description = newValue;
}
/**
 * Setter method for dogblankcode
 * @param newValue java.lang.String
 */
public void setDogblankcode(java.lang.String newValue) {
	this.dogblankcode = newValue;
}
/**
 * Setter method for dogdate
 * @param newValue java.sql.Date
 */
public void setDogdate(java.sql.Date newValue) {
	this.dogdate = newValue;
}
/**
 * Setter method for dogfinishdate
 * @param newValue java.sql.Date
 */
public void setDogfinishdate(java.sql.Date newValue) {
	this.dogfinishdate = newValue;
}
/**
 * Setter method for dogstartdate
 * @param newValue java.sql.Date
 */
public void setDogstartdate(java.sql.Date newValue) {
	this.dogstartdate = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for idaccountnri
 * @param newValue int
 */
public void setIdaccountnri(int newValue) {
	this.idaccountnri = newValue;
}
/**
 * Setter method for idbudjet
 * @param newValue int
 */
public void setIdbudjet(int newValue) {
	this.idbudjet = newValue;
}
/**
 * Setter method for iddogovorplatinum
 * @param newValue java.lang.String
 */
public void setIddogovorplatinum(java.lang.String newValue) {
	this.iddogovorplatinum = newValue;
}
/**
 * Setter method for idexpence
 * @param newValue int
 */
public void setIdexpence(int newValue) {
	this.idexpence = newValue;
}
/**
 * Setter method for idheaduser
 * @param newValue java.lang.Integer
 */
public void setIdheaduser(java.lang.Integer newValue) {
	this.idheaduser = newValue;
}
/**
 * Setter method for idorgowner
 * @param newValue int
 */
public void setIdorgowner(int newValue) {
	this.idorgowner = newValue;
}
/**
 * Setter method for idpartnernri
 * @param newValue int
 */
public void setIdpartnernri(int newValue) {
	this.idpartnernri = newValue;
}
/**
 * Setter method for overprice
 * @param newValue java.math.BigDecimal
 */
public void setOverprice(java.math.BigDecimal newValue) {
	this.overprice = newValue;
}
/**
 * This method was generated for supporting the association named PIEDogovorNRI2query.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setPiequery(com.hps.july.persistence.PIEQuery aPiequery) throws java.rmi.RemoteException {
	this.getPiequeryLink().set(aPiequery);
}
/**
 * Setter method for purpose
 * @param newValue java.lang.String
 */
public void setPurpose(java.lang.String newValue) {
	this.purpose = newValue;
}
/**
 * Setter method for sumdog
 * @param newValue java.math.BigDecimal
 */
public void setSumdog(java.math.BigDecimal newValue) {
	this.sumdog = newValue;
}
/**
 * Setter method for valute
 * @param newValue int
 */
public void setValute(int newValue) {
	this.valute = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
