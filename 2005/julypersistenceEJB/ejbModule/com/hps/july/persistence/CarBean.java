package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Автомашина
 */
public class CarBean implements EntityBean {
	public int car;
	public String car_model;
	public String car_number;
	private javax.ejb.EntityContext entityContext = null;
	public Boolean isour;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.lang.Integer organization_organization;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink organizationLink = null;
	public java.lang.Integer division_division;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink divisionLink = null;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("car", new Integer(getCar()));
        h.put("car_number", getCar_number());
        h.put("organizationKey", getOrganizationKey());
        h.put("isour", getIsour());
        h.put("divisionKey", getDivisionKey());
        h.put("car_model", getCar_model());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localCar_number = (java.lang.String) h.get("car_number");
        java.lang.Boolean localIsour = (java.lang.Boolean) h.get("isour");
        java.lang.String localCar_model = (java.lang.String) h.get("car_model");

        if ( h.containsKey("car_number") )
            setCar_number((localCar_number));
        if ( h.containsKey("isour") )
            setIsour((localIsour));
        if ( h.containsKey("car_model") )
            setCar_model((localCar_model));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getOrganizationLink());
	links.addElement(getDivisionLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	organizationLink = null;
	divisionLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argCar int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argCar, Boolean argIsour, String argCarmodel, String argCarnumber) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	car = argCar;
	isour = argIsour;
	car_model = argCarmodel;
	car_number = argCarnumber;
	organization_organization = null;
	division_division = null;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argCar int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argCar) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Insert the method's description here.
 * Creation date: (01.07.2003 16:13:32)
 * @return int
 */
public int getCar() {
	return car;
}
/**
 * Getter method for car_model
 * @return java.lang.String
 */
public java.lang.String getCar_model() {
	return car_model;
}
/**
 * Getter method for car_number
 * @return java.lang.String
 */
public java.lang.String getCar_number() {
	return car_number;
}
/**
 * This method was generated for supporting the association named Car2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Division getDivision() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Division)this.getDivisionLink().value();
}
/**
 * This method was generated for supporting the association named Car2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.DivisionKey getDivisionKey() {
	com.hps.july.persistence.DivisionKey temp = null;
	temp = new com.hps.july.persistence.DivisionKey();
	boolean division_NULLTEST = true;
	division_NULLTEST &= (division_division == null);
	temp.division = ((division_division == null) ? 0 : division_division.intValue());
	if (division_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named Car2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getDivisionLink() {
	if (divisionLink == null)
		divisionLink = new CarToDivisionLink(this);
	return divisionLink;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for isour
 * @return java.lang.Boolean
 */
public java.lang.Boolean getIsour() {
	return isour;
}
/**
 * This method was generated for supporting the association named Car2Organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Organization getOrganization() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Organization)this.getOrganizationLink().value();
}
/**
 * This method was generated for supporting the association named Car2Organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.OrganizationKey getOrganizationKey() {
	com.hps.july.persistence.OrganizationKey temp = null;
	temp = new com.hps.july.persistence.OrganizationKey();
	boolean organization_NULLTEST = true;
	organization_NULLTEST &= (organization_organization == null);
	temp.organization = ((organization_organization == null) ? 0 : organization_organization.intValue());
	if (organization_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named Car2Organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getOrganizationLink() {
	if (organizationLink == null)
		organizationLink = new CarToOrganizationLink(this);
	return organizationLink;
}
/**
 * This method was generated for supporting the association named Car2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetDivisionKey(com.hps.july.persistence.DivisionKey inKey) {
	boolean division_NULLTEST = (inKey == null);
	if (division_NULLTEST) division_division = null; else division_division = (new Integer(inKey.division));
}
/**
 * This method was generated for supporting the association named Car2Organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetOrganizationKey(com.hps.july.persistence.OrganizationKey inKey) {
	boolean organization_NULLTEST = (inKey == null);
	if (organization_NULLTEST) organization_organization = null; else organization_organization = (new Integer(inKey.organization));
}
/**
 * This method was generated for supporting the association named Car2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetDivision(com.hps.july.persistence.Division aDivision) throws java.rmi.RemoteException {
	this.getDivisionLink().secondarySet(aDivision);
}
/**
 * This method was generated for supporting the association named Car2Organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetOrganization(com.hps.july.persistence.Organization anOrganization) throws java.rmi.RemoteException {
	this.getOrganizationLink().secondarySet(anOrganization);
}
/**
 * Setter method for car_model
 * @param newValue java.lang.String
 */
public void setCar_model(java.lang.String newValue) {
	this.car_model = newValue;
}
/**
 * Setter method for car_number
 * @param newValue java.lang.String
 */
public void setCar_number(java.lang.String newValue) {
	this.car_number = newValue;
}
/**
 * This method was generated for supporting the association named Car2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setDivision(com.hps.july.persistence.Division aDivision) throws java.rmi.RemoteException {
	this.getDivisionLink().set(aDivision);
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for isour
 * @param newValue java.lang.Boolean
 */
public void setIsour(java.lang.Boolean newValue) {
	this.isour = newValue;
}
/**
 * This method was generated for supporting the association named Car2Organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setOrganization(com.hps.july.persistence.Organization anOrganization) throws java.rmi.RemoteException {
	this.getOrganizationLink().set(anOrganization);
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
