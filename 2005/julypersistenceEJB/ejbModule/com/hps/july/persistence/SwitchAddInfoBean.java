package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Доп. характеристики коммутатора
 */
public class SwitchAddInfoBean implements EntityBean {
	public java.math.BigDecimal abon_act_bss;
	public Integer abon_qty_bss;
	public java.sql.Date act_date;
	private javax.ejb.EntityContext entityContext = null;
	public java.math.BigDecimal koeff_kn;
	public java.math.BigDecimal load_all_percent;
	public java.math.BigDecimal load_event_percent;
	public String load_max_day;
	public String load_max_hour_all;
	public String load_max_hour_bss;
	public String load_max_hour_nss;
	public Integer load_mobile;
	public java.math.BigDecimal load_sms_percent;
	public Integer load_transit;
	private final static long serialVersionUID = 3206093459760846163L;
	public Integer traf_all;
	public Integer traf_bss_all;
	public Integer traf_bss_bss;
	public Integer traf_nss_all;
	public Integer traf_nss_nss;
	public Integer tryqty_mobile_all;
	public Integer tryqty_sms_all;
	public Integer tryqty_transit_all;
	public java.lang.Integer switch_storageplace;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink switchLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink switchParamsLink = null;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("traf_nss_all", getTraf_nss_all());
        h.put("traf_nss_nss", getTraf_nss_nss());
        h.put("load_sms_percent", getLoad_sms_percent());
        h.put("tryqty_sms_all", getTryqty_sms_all());
        h.put("traf_all", getTraf_all());
        h.put("load_max_hour_all", getLoad_max_hour_all());
        h.put("tryqty_transit_all", getTryqty_transit_all());
        h.put("load_max_hour_nss", getLoad_max_hour_nss());
        h.put("act_date", getAct_date());
        h.put("load_event_percent", getLoad_event_percent());
        h.put("traf_bss_all", getTraf_bss_all());
        h.put("load_max_hour_bss", getLoad_max_hour_bss());
        h.put("tryqty_mobile_all", getTryqty_mobile_all());
        h.put("switchKey", getSwitchKey());
        h.put("load_mobile", getLoad_mobile());
        h.put("koeff_kn", getKoeff_kn());
        h.put("load_all_percent", getLoad_all_percent());
        h.put("load_max_day", getLoad_max_day());
        h.put("traf_bss_bss", getTraf_bss_bss());
        h.put("abon_qty_bss", getAbon_qty_bss());
        h.put("abon_act_bss", getAbon_act_bss());
        h.put("load_transit", getLoad_transit());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.Integer localTraf_nss_all = (java.lang.Integer) h.get("traf_nss_all");
        java.lang.Integer localTraf_nss_nss = (java.lang.Integer) h.get("traf_nss_nss");
        java.math.BigDecimal localLoad_sms_percent = (java.math.BigDecimal) h.get("load_sms_percent");
        java.lang.Integer localTryqty_sms_all = (java.lang.Integer) h.get("tryqty_sms_all");
        java.lang.Integer localTraf_all = (java.lang.Integer) h.get("traf_all");
        java.lang.String localLoad_max_hour_all = (java.lang.String) h.get("load_max_hour_all");
        java.lang.Integer localTryqty_transit_all = (java.lang.Integer) h.get("tryqty_transit_all");
        java.lang.String localLoad_max_hour_nss = (java.lang.String) h.get("load_max_hour_nss");
        java.math.BigDecimal localLoad_event_percent = (java.math.BigDecimal) h.get("load_event_percent");
        java.lang.Integer localTraf_bss_all = (java.lang.Integer) h.get("traf_bss_all");
        java.lang.String localLoad_max_hour_bss = (java.lang.String) h.get("load_max_hour_bss");
        java.lang.Integer localTryqty_mobile_all = (java.lang.Integer) h.get("tryqty_mobile_all");
        java.lang.Integer localLoad_mobile = (java.lang.Integer) h.get("load_mobile");
        java.math.BigDecimal localKoeff_kn = (java.math.BigDecimal) h.get("koeff_kn");
        java.math.BigDecimal localLoad_all_percent = (java.math.BigDecimal) h.get("load_all_percent");
        java.lang.String localLoad_max_day = (java.lang.String) h.get("load_max_day");
        java.lang.Integer localTraf_bss_bss = (java.lang.Integer) h.get("traf_bss_bss");
        java.lang.Integer localAbon_qty_bss = (java.lang.Integer) h.get("abon_qty_bss");
        java.math.BigDecimal localAbon_act_bss = (java.math.BigDecimal) h.get("abon_act_bss");
        java.lang.Integer localLoad_transit = (java.lang.Integer) h.get("load_transit");

        if ( h.containsKey("traf_nss_all") )
            setTraf_nss_all((localTraf_nss_all));
        if ( h.containsKey("traf_nss_nss") )
            setTraf_nss_nss((localTraf_nss_nss));
        if ( h.containsKey("load_sms_percent") )
            setLoad_sms_percent((localLoad_sms_percent));
        if ( h.containsKey("tryqty_sms_all") )
            setTryqty_sms_all((localTryqty_sms_all));
        if ( h.containsKey("traf_all") )
            setTraf_all((localTraf_all));
        if ( h.containsKey("load_max_hour_all") )
            setLoad_max_hour_all((localLoad_max_hour_all));
        if ( h.containsKey("tryqty_transit_all") )
            setTryqty_transit_all((localTryqty_transit_all));
        if ( h.containsKey("load_max_hour_nss") )
            setLoad_max_hour_nss((localLoad_max_hour_nss));
        if ( h.containsKey("load_event_percent") )
            setLoad_event_percent((localLoad_event_percent));
        if ( h.containsKey("traf_bss_all") )
            setTraf_bss_all((localTraf_bss_all));
        if ( h.containsKey("load_max_hour_bss") )
            setLoad_max_hour_bss((localLoad_max_hour_bss));
        if ( h.containsKey("tryqty_mobile_all") )
            setTryqty_mobile_all((localTryqty_mobile_all));
        if ( h.containsKey("load_mobile") )
            setLoad_mobile((localLoad_mobile));
        if ( h.containsKey("koeff_kn") )
            setKoeff_kn((localKoeff_kn));
        if ( h.containsKey("load_all_percent") )
            setLoad_all_percent((localLoad_all_percent));
        if ( h.containsKey("load_max_day") )
            setLoad_max_day((localLoad_max_day));
        if ( h.containsKey("traf_bss_bss") )
            setTraf_bss_bss((localTraf_bss_bss));
        if ( h.containsKey("abon_qty_bss") )
            setAbon_qty_bss((localAbon_qty_bss));
        if ( h.containsKey("abon_act_bss") )
            setAbon_act_bss((localAbon_act_bss));
        if ( h.containsKey("load_transit") )
            setLoad_transit((localLoad_transit));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getSwitchLink());
	links.addElement(getSwitchParamsLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	switchLink = null;
	switchParamsLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * This method was generated for supporting the association named SwitchParams2addinfo.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addSwitchParams(com.hps.july.persistence.SwitchParams aSwitchParams) throws java.rmi.RemoteException {
	this.getSwitchParamsLink().addElement(aSwitchParams);
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argAct_date java.sql.Date
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(Integer argEquipment, java.sql.Date argAct_date) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	switch_storageplace = argEquipment;
	act_date = argAct_date;

	load_max_day = null;
	load_max_hour_bss = null;
	load_max_hour_nss = null;
	load_max_hour_all = null;
	traf_all = null;
	traf_bss_all = null;
	traf_nss_all = null;
	traf_bss_bss = null;
	traf_nss_nss = null;
	abon_qty_bss = null;
	abon_act_bss = null;
	tryqty_mobile_all = null;
	tryqty_transit_all = null;
	tryqty_sms_all = null;
	load_mobile = null;
	load_transit = null;
	load_sms_percent = null;
	load_all_percent = null;
	load_event_percent = null;
	koeff_kn = null;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argAct_date java.sql.Date
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(java.sql.Date argAct_date) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for abon_act_bss
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getAbon_act_bss() {
	return abon_act_bss;
}
/**
 * Getter method for abon_qty_bss
 * @return java.lang.Integer
 */
public java.lang.Integer getAbon_qty_bss() {
	return abon_qty_bss;
}
/**
 * Insert the method's description here.
 * Creation date: (06.08.2003 17:19:07)
 * @return java.sql.Date
 */
public java.sql.Date getAct_date() {
	return act_date;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for koeff_kn
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getKoeff_kn() {
	return koeff_kn;
}
/**
 * Getter method for load_all_percent
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getLoad_all_percent() {
	return load_all_percent;
}
/**
 * Getter method for load_event_percent
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getLoad_event_percent() {
	return load_event_percent;
}
/**
 * Getter method for load_max_day
 * @return java.lang.String
 */
public java.lang.String getLoad_max_day() {
	return load_max_day;
}
/**
 * Getter method for load_max_hour_all
 * @return java.lang.String
 */
public java.lang.String getLoad_max_hour_all() {
	return load_max_hour_all;
}
/**
 * Getter method for load_max_hour_bss
 * @return java.lang.String
 */
public java.lang.String getLoad_max_hour_bss() {
	return load_max_hour_bss;
}
/**
 * Getter method for load_max_hour_nss
 * @return java.lang.String
 */
public java.lang.String getLoad_max_hour_nss() {
	return load_max_hour_nss;
}
/**
 * Getter method for load_mobile
 * @return java.lang.Integer
 */
public java.lang.Integer getLoad_mobile() {
	return load_mobile;
}
/**
 * Getter method for load_sms_percent
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getLoad_sms_percent() {
	return load_sms_percent;
}
/**
 * Getter method for load_transit
 * @return java.lang.Integer
 */
public java.lang.Integer getLoad_transit() {
	return load_transit;
}
/**
 * This method was generated for supporting the association named SwitchAddInfo2switch.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Switch getSwitch() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Switch)this.getSwitchLink().value();
}
/**
 * This method was generated for supporting the association named SwitchAddInfo2switch.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.StoragePlaceKey getSwitchKey() {
	com.hps.july.persistence.StoragePlaceKey temp = null;
	temp = new com.hps.july.persistence.StoragePlaceKey();
	boolean switch_NULLTEST = true;
	switch_NULLTEST &= (switch_storageplace == null);
	temp.storageplace = ((switch_storageplace == null) ? 0 : switch_storageplace.intValue());
	if (switch_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named SwitchAddInfo2switch.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getSwitchLink() {
	if (switchLink == null)
		switchLink = new SwitchAddInfoToSwitchLink(this);
	return switchLink;
}
/**
 * This method was generated for supporting the association named SwitchParams2addinfo.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getSwitchParams() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getSwitchParamsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named SwitchParams2addinfo.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getSwitchParamsLink() {
	if (switchParamsLink == null)
		switchParamsLink = new SwitchAddInfoToSwitchParamsLink(this);
	return switchParamsLink;
}
/**
 * Getter method for traf_all
 * @return java.lang.Integer
 */
public java.lang.Integer getTraf_all() {
	return traf_all;
}
/**
 * Getter method for traf_bss_all
 * @return java.lang.Integer
 */
public java.lang.Integer getTraf_bss_all() {
	return traf_bss_all;
}
/**
 * Getter method for traf_bss_bss
 * @return java.lang.Integer
 */
public java.lang.Integer getTraf_bss_bss() {
	return traf_bss_bss;
}
/**
 * Getter method for traf_nss_all
 * @return java.lang.Integer
 */
public java.lang.Integer getTraf_nss_all() {
	return traf_nss_all;
}
/**
 * Getter method for traf_nss_nss
 * @return java.lang.Integer
 */
public java.lang.Integer getTraf_nss_nss() {
	return traf_nss_nss;
}
/**
 * Getter method for tryqty_mobile_all
 * @return java.lang.Integer
 */
public java.lang.Integer getTryqty_mobile_all() {
	return tryqty_mobile_all;
}
/**
 * Getter method for tryqty_sms_all
 * @return java.lang.Integer
 */
public java.lang.Integer getTryqty_sms_all() {
	return tryqty_sms_all;
}
/**
 * Getter method for tryqty_transit_all
 * @return java.lang.Integer
 */
public java.lang.Integer getTryqty_transit_all() {
	return tryqty_transit_all;
}
/**
 * This method was generated for supporting the association named SwitchAddInfo2switch.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetSwitchKey(com.hps.july.persistence.StoragePlaceKey inKey) {
	boolean switch_NULLTEST = (inKey == null);
	if (switch_NULLTEST) switch_storageplace = null; else switch_storageplace = (new Integer(inKey.storageplace));
}
/**
 * This method was generated for supporting the association named SwitchParams2addinfo.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddSwitchParams(com.hps.july.persistence.SwitchParams aSwitchParams) {
	this.getSwitchParamsLink().secondaryAddElement(aSwitchParams);
}
/**
 * This method was generated for supporting the association named SwitchParams2addinfo.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveSwitchParams(com.hps.july.persistence.SwitchParams aSwitchParams) {
	this.getSwitchParamsLink().secondaryRemoveElement(aSwitchParams);
}
/**
 * Setter method for abon_act_bss
 * @param newValue java.math.BigDecimal
 */
public void setAbon_act_bss(java.math.BigDecimal newValue) {
	this.abon_act_bss = newValue;
}
/**
 * Setter method for abon_qty_bss
 * @param newValue java.lang.Integer
 */
public void setAbon_qty_bss(java.lang.Integer newValue) {
	this.abon_qty_bss = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for koeff_kn
 * @param newValue java.math.BigDecimal
 */
public void setKoeff_kn(java.math.BigDecimal newValue) {
	this.koeff_kn = newValue;
}
/**
 * Setter method for load_all_percent
 * @param newValue java.math.BigDecimal
 */
public void setLoad_all_percent(java.math.BigDecimal newValue) {
	this.load_all_percent = newValue;
}
/**
 * Setter method for load_event_percent
 * @param newValue java.math.BigDecimal
 */
public void setLoad_event_percent(java.math.BigDecimal newValue) {
	this.load_event_percent = newValue;
}
/**
 * Setter method for load_max_day
 * @param newValue java.lang.String
 */
public void setLoad_max_day(java.lang.String newValue) {
	this.load_max_day = newValue;
}
/**
 * Setter method for load_max_hour_all
 * @param newValue java.lang.String
 */
public void setLoad_max_hour_all(java.lang.String newValue) {
	this.load_max_hour_all = newValue;
}
/**
 * Setter method for load_max_hour_bss
 * @param newValue java.lang.String
 */
public void setLoad_max_hour_bss(java.lang.String newValue) {
	this.load_max_hour_bss = newValue;
}
/**
 * Setter method for load_max_hour_nss
 * @param newValue java.lang.String
 */
public void setLoad_max_hour_nss(java.lang.String newValue) {
	this.load_max_hour_nss = newValue;
}
/**
 * Setter method for load_mobile
 * @param newValue java.lang.Integer
 */
public void setLoad_mobile(java.lang.Integer newValue) {
	this.load_mobile = newValue;
}
/**
 * Setter method for load_sms_percent
 * @param newValue java.math.BigDecimal
 */
public void setLoad_sms_percent(java.math.BigDecimal newValue) {
	this.load_sms_percent = newValue;
}
/**
 * Setter method for load_transit
 * @param newValue java.lang.Integer
 */
public void setLoad_transit(java.lang.Integer newValue) {
	this.load_transit = newValue;
}
/**
 * This method was generated for supporting the association named SwitchAddInfo2switch.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setSwitch(com.hps.july.persistence.Switch aSwitch) throws java.rmi.RemoteException {
	this.getSwitchLink().set(aSwitch);
}
/**
 * Setter method for traf_all
 * @param newValue java.lang.Integer
 */
public void setTraf_all(java.lang.Integer newValue) {
	this.traf_all = newValue;
}
/**
 * Setter method for traf_bss_all
 * @param newValue java.lang.Integer
 */
public void setTraf_bss_all(java.lang.Integer newValue) {
	this.traf_bss_all = newValue;
}
/**
 * Setter method for traf_bss_bss
 * @param newValue java.lang.Integer
 */
public void setTraf_bss_bss(java.lang.Integer newValue) {
	this.traf_bss_bss = newValue;
}
/**
 * Setter method for traf_nss_all
 * @param newValue java.lang.Integer
 */
public void setTraf_nss_all(java.lang.Integer newValue) {
	this.traf_nss_all = newValue;
}
/**
 * Setter method for traf_nss_nss
 * @param newValue java.lang.Integer
 */
public void setTraf_nss_nss(java.lang.Integer newValue) {
	this.traf_nss_nss = newValue;
}
/**
 * Setter method for tryqty_mobile_all
 * @param newValue java.lang.Integer
 */
public void setTryqty_mobile_all(java.lang.Integer newValue) {
	this.tryqty_mobile_all = newValue;
}
/**
 * Setter method for tryqty_sms_all
 * @param newValue java.lang.Integer
 */
public void setTryqty_sms_all(java.lang.Integer newValue) {
	this.tryqty_sms_all = newValue;
}
/**
 * Setter method for tryqty_transit_all
 * @param newValue java.lang.Integer
 */
public void setTryqty_transit_all(java.lang.Integer newValue) {
	this.tryqty_transit_all = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
