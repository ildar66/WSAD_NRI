package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Регламент проведения акта взаимозачета
 */
public class LeaseMutualReglamentBean extends LeaseDocumentBean {
	public String actType;
	public String calcRateType;
	public String mutualPeriod;
	private final static long serialVersionUID = 3206093459760846163L;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseMutualPhoneLink = null;
	public Boolean commonRate;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseMutualActReglamentLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseMutualActNewLink = null;
	public String mutstate;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseMutualContractsLink = null;
	public java.lang.Integer maincurrency_currency;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink maincurrencyLink = null;
	public java.lang.Integer additionalCurrency_currency;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink additionalCurrencyLink = null;
	public String dutyraterule;
	public java.sql.Date startdate;
	public java.sql.Date enddate;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseMutualRulesLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseMRCntPriorsLink = null;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("createdby", getCreatedby());
        h.put("documentDate", getDocumentDate());
        h.put("enddate", getEnddate());
        h.put("maincurrencyKey", getMaincurrencyKey());
        h.put("documentNumber", getDocumentNumber());
        h.put("leaseDocument", new Integer(getLeaseDocument()));
        h.put("created", getCreated());
        h.put("actType", getActType());
        h.put("modifiedby", getModifiedby());
        h.put("operator", getOperator());
        h.put("calcRateType", getCalcRateType());
        h.put("additionalCurrencyKey", getAdditionalCurrencyKey());
        h.put("startdate", getStartdate());
        h.put("regionid", new Integer(getRegionid()));
        h.put("modified", getModified());
        h.put("commonRate", getCommonRate());
        h.put("mutState", getMutState());
        h.put("dutyraterule", getDutyraterule());
        h.put("mutualPeriod", getMutualPeriod());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.Integer localCreatedby = (java.lang.Integer) h.get("createdby");
        java.sql.Date localDocumentDate = (java.sql.Date) h.get("documentDate");
        java.sql.Date localEnddate = (java.sql.Date) h.get("enddate");
        java.lang.String localDocumentNumber = (java.lang.String) h.get("documentNumber");
        Integer localLeaseDocument = (Integer) h.get("leaseDocument");
        java.sql.Timestamp localCreated = (java.sql.Timestamp) h.get("created");
        java.lang.String localActType = (java.lang.String) h.get("actType");
        java.lang.Integer localModifiedby = (java.lang.Integer) h.get("modifiedby");
        java.lang.Integer localOperator = (java.lang.Integer) h.get("operator");
        java.lang.String localCalcRateType = (java.lang.String) h.get("calcRateType");
        java.sql.Date localStartdate = (java.sql.Date) h.get("startdate");
        Integer localRegionid = (Integer) h.get("regionid");
        java.sql.Timestamp localModified = (java.sql.Timestamp) h.get("modified");
        java.lang.Boolean localCommonRate = (java.lang.Boolean) h.get("commonRate");
        java.lang.String localMutState = (java.lang.String) h.get("mutState");
        java.lang.String localDutyraterule = (java.lang.String) h.get("dutyraterule");
        java.lang.String localMutualPeriod = (java.lang.String) h.get("mutualPeriod");

        if ( h.containsKey("createdby") )
            setCreatedby((localCreatedby));
        if ( h.containsKey("documentDate") )
            setDocumentDate((localDocumentDate));
        if ( h.containsKey("enddate") )
            setEnddate((localEnddate));
        if ( h.containsKey("documentNumber") )
            setDocumentNumber((localDocumentNumber));
        if ( h.containsKey("leaseDocument") )
            setLeaseDocument((localLeaseDocument).intValue());
        if ( h.containsKey("created") )
            setCreated((localCreated));
        if ( h.containsKey("actType") )
            setActType((localActType));
        if ( h.containsKey("modifiedby") )
            setModifiedby((localModifiedby));
        if ( h.containsKey("operator") )
            setOperator((localOperator));
        if ( h.containsKey("calcRateType") )
            setCalcRateType((localCalcRateType));
        if ( h.containsKey("startdate") )
            setStartdate((localStartdate));
        if ( h.containsKey("regionid") )
            setRegionid((localRegionid).intValue());
        if ( h.containsKey("modified") )
            setModified((localModified));
        if ( h.containsKey("commonRate") )
            setCommonRate((localCommonRate));
        if ( h.containsKey("mutState") )
            setMutState((localMutState));
        if ( h.containsKey("dutyraterule") )
            setDutyraterule((localDutyraterule));
        if ( h.containsKey("mutualPeriod") )
            setMutualPeriod((localMutualPeriod));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = super._getLinks();
	links.addElement(getLeaseMutualActNewLink());
	links.addElement(getLeaseMutualPhoneLink());
	links.addElement(getLeaseMutualContractsLink());
	links.addElement(getMaincurrencyLink());
	links.addElement(getAdditionalCurrencyLink());
	links.addElement(getLeaseMutualRulesLink());
	links.addElement(getLeaseMRCntPriorsLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	super._initLinks();
	leaseMutualActNewLink = null;
	leaseMutualPhoneLink = null;
	leaseMutualContractsLink = null;
	maincurrencyLink = null;
	additionalCurrencyLink = null;
	leaseMutualRulesLink = null;
	leaseMRCntPriorsLink = null;
}
/**
 * This method was generated for supporting the association named LeaseMutualActNew2LeaseMutualReglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeaseMutualActNew(com.hps.july.persistence.LeaseMutualActNew aLeaseMutualActNew) throws java.rmi.RemoteException {
	this.getLeaseMutualActNewLink().addElement(aLeaseMutualActNew);
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argLeaseDocument int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argLeaseDocument, java.sql.Date argDocDate, String argDocNumber,
	String argMutualPeriod, Integer argMainCurrency, Boolean argCommonRate, 
	String argActType, String argMutstate, String argDutyraterule,
	java.sql.Date argStartDate, java.sql.Date argEndDate) throws javax.ejb.CreateException, java.rmi.RemoteException {
	super.ejbCreate(argLeaseDocument, argDocDate, argDocNumber);
	_initLinks();
	// All CMP fields should be initialized here.
	calcRateType = null;

	mutualPeriod = argMutualPeriod;
	commonRate = argCommonRate;
	actType = argActType;
	this.mutstate = argMutstate;
	maincurrency_currency = argMainCurrency;
	additionalCurrency_currency = null;
	dutyraterule = argDutyraterule;
	startdate = argStartDate;
	enddate = argEndDate;
}
/**
 * Getter method for actType
 * @return java.lang.String
 */
public java.lang.String getActType() {
	return actType;
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Currency getAdditionalCurrency() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Currency)this.getAdditionalCurrencyLink().value();
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.CurrencyKey getAdditionalCurrencyKey() {
	com.hps.july.persistence.CurrencyKey temp = null;
	temp = new com.hps.july.persistence.CurrencyKey();
	boolean additionalCurrency_NULLTEST = true;
	additionalCurrency_NULLTEST &= (additionalCurrency_currency == null);
	temp.currency = ((additionalCurrency_currency == null) ? 0 : additionalCurrency_currency.intValue());
	if (additionalCurrency_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getAdditionalCurrencyLink() {
	if (additionalCurrencyLink == null)
		additionalCurrencyLink = new LeaseMutualReglamentToAdditionalCurrencyLink(this);
	return additionalCurrencyLink;
}
/**
 * Getter method for calcRateType
 * @return java.lang.String
 */
public java.lang.String getCalcRateType() {
	return calcRateType;
}
/**
 * Getter method for commonRate
 */
public java.lang.Boolean getCommonRate() {
	return commonRate;
}
/**
 * Getter method for dutyraterule
 */
public java.lang.String getDutyraterule() {
	return dutyraterule;
}
/**
 * Getter method for enddate
 */
public java.sql.Date getEnddate() {
	return enddate;
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseMRCntPriors() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseMRCntPriorsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseMRCntPriorsLink() {
	if (leaseMRCntPriorsLink == null)
		leaseMRCntPriorsLink = new LeaseMutualReglamentToLeaseMRCntPriorsLink(this);
	return leaseMRCntPriorsLink;
}
/**
 * This method was generated for supporting the association named LeaseMutualActNew2LeaseMutualReglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseMutualActNew() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseMutualActNewLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseMutualActNew2LeaseMutualReglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseMutualActNewLink() {
	if (leaseMutualActNewLink == null)
		leaseMutualActNewLink = new LeaseMutualReglamentToLeaseMutualActNewLink(this);
	return leaseMutualActNewLink;
}
/**
 * This method was generated for supporting the association named LeaseMutualContracts2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseMutualContracts() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseMutualContractsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseMutualContracts2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseMutualContractsLink() {
	if (leaseMutualContractsLink == null)
		leaseMutualContractsLink = new LeaseMutualReglamentToLeaseMutualContractsLink(this);
	return leaseMutualContractsLink;
}
/**
 * This method was generated for supporting the association named LeaseMutualPhone2LeaseContract.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseMutualPhone() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseMutualPhoneLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseMutualPhone2LeaseContract.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseMutualPhoneLink() {
	if (leaseMutualPhoneLink == null)
		leaseMutualPhoneLink = new LeaseMutualReglamentToLeaseMutualPhoneLink(this);
	return leaseMutualPhoneLink;
}
/**
 * This method was generated for supporting the association named LeaseMutualRuleNew2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseMutualRules() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseMutualRulesLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseMutualRuleNew2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseMutualRulesLink() {
	if (leaseMutualRulesLink == null)
		leaseMutualRulesLink = new LeaseMutualReglamentToLeaseMutualRulesLink(this);
	return leaseMutualRulesLink;
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Currency getMaincurrency() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Currency)this.getMaincurrencyLink().value();
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.CurrencyKey getMaincurrencyKey() {
	com.hps.july.persistence.CurrencyKey temp = null;
	temp = new com.hps.july.persistence.CurrencyKey();
	boolean maincurrency_NULLTEST = true;
	maincurrency_NULLTEST &= (maincurrency_currency == null);
	temp.currency = ((maincurrency_currency == null) ? 0 : maincurrency_currency.intValue());
	if (maincurrency_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getMaincurrencyLink() {
	if (maincurrencyLink == null)
		maincurrencyLink = new LeaseMutualReglamentToMaincurrencyLink(this);
	return maincurrencyLink;
}
/**
 * Getter method for MutState
 */
public java.lang.String getMutState() {
	return mutstate;
}
/**
 * Getter method for mutualPeriod
 * @return java.lang.String
 */
public java.lang.String getMutualPeriod() {
	return mutualPeriod;
}
/**
 * Getter method for startdate
 */
public java.sql.Date getStartdate() {
	return startdate;
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetAdditionalCurrencyKey(com.hps.july.persistence.CurrencyKey inKey) {
	boolean additionalCurrency_NULLTEST = (inKey == null);
	if (additionalCurrency_NULLTEST) additionalCurrency_currency = null; else additionalCurrency_currency = (new Integer(inKey.currency));
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetMaincurrencyKey(com.hps.july.persistence.CurrencyKey inKey) {
	boolean maincurrency_NULLTEST = (inKey == null);
	if (maincurrency_NULLTEST) maincurrency_currency = null; else maincurrency_currency = (new Integer(inKey.currency));
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseMRCntPriors(com.hps.july.persistence.LeaseMRCntPrior aLeaseMRCntPriors) {
	this.getLeaseMRCntPriorsLink().secondaryAddElement(aLeaseMRCntPriors);
}
/**
 * This method was generated for supporting the association named LeaseMutualActNew2LeaseMutualReglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseMutualActNew(com.hps.july.persistence.LeaseMutualActNew aLeaseMutualActNew) {
	this.getLeaseMutualActNewLink().secondaryAddElement(aLeaseMutualActNew);
}
/**
 * This method was generated for supporting the association named LeaseMutualContracts2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseMutualContracts(com.hps.july.persistence.LeaseMutualContracts aLeaseMutualContracts) {
	this.getLeaseMutualContractsLink().secondaryAddElement(aLeaseMutualContracts);
}
/**
 * This method was generated for supporting the association named LeaseMutualPhone2LeaseContract.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseMutualPhone(com.hps.july.persistence.LeaseMutualPhone aLeaseMutualPhone) {
	this.getLeaseMutualPhoneLink().secondaryAddElement(aLeaseMutualPhone);
}
/**
 * This method was generated for supporting the association named LeaseMutualRuleNew2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseMutualRules(com.hps.july.persistence.LeaseMutualRuleNew aLeaseMutualRules) {
	this.getLeaseMutualRulesLink().secondaryAddElement(aLeaseMutualRules);
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseMRCntPriors(com.hps.july.persistence.LeaseMRCntPrior aLeaseMRCntPriors) {
	this.getLeaseMRCntPriorsLink().secondaryRemoveElement(aLeaseMRCntPriors);
}
/**
 * This method was generated for supporting the association named LeaseMutualActNew2LeaseMutualReglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseMutualActNew(com.hps.july.persistence.LeaseMutualActNew aLeaseMutualActNew) {
	this.getLeaseMutualActNewLink().secondaryRemoveElement(aLeaseMutualActNew);
}
/**
 * This method was generated for supporting the association named LeaseMutualContracts2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseMutualContracts(com.hps.july.persistence.LeaseMutualContracts aLeaseMutualContracts) {
	this.getLeaseMutualContractsLink().secondaryRemoveElement(aLeaseMutualContracts);
}
/**
 * This method was generated for supporting the association named LeaseMutualPhone2LeaseContract.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseMutualPhone(com.hps.july.persistence.LeaseMutualPhone aLeaseMutualPhone) {
	this.getLeaseMutualPhoneLink().secondaryRemoveElement(aLeaseMutualPhone);
}
/**
 * This method was generated for supporting the association named LeaseMutualRuleNew2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseMutualRules(com.hps.july.persistence.LeaseMutualRuleNew aLeaseMutualRules) {
	this.getLeaseMutualRulesLink().secondaryRemoveElement(aLeaseMutualRules);
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetAdditionalCurrency(com.hps.july.persistence.Currency anAdditionalCurrency) throws java.rmi.RemoteException {
	this.getAdditionalCurrencyLink().secondarySet(anAdditionalCurrency);
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetMaincurrency(com.hps.july.persistence.Currency aMaincurrency) throws java.rmi.RemoteException {
	this.getMaincurrencyLink().secondarySet(aMaincurrency);
}
/**
 * Setter method for actType
 * @param newValue java.lang.String
 */
public void setActType(java.lang.String newValue) {
	this.actType = newValue;
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setAdditionalCurrency(com.hps.july.persistence.Currency anAdditionalCurrency) throws java.rmi.RemoteException {
	this.getAdditionalCurrencyLink().set(anAdditionalCurrency);
}
/**
 * Setter method for calcRateType
 * @param newValue java.lang.String
 */
public void setCalcRateType(java.lang.String newValue) {
	this.calcRateType = newValue;
}
/**
 * Setter method for commonRate
 */
public void setCommonRate(java.lang.Boolean newValue) {
	this.commonRate = newValue;
}
/**
 * Setter method for dutyraterule
 */
public void setDutyraterule(java.lang.String newValue) {
	this.dutyraterule = newValue;
}
/**
 * Setter method for enddate
 */
public void setEnddate(java.sql.Date newValue) {
	this.enddate = newValue;
}
/**
 * This method was generated for supporting the association named LeaseMutualReglament2currency1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setMaincurrency(com.hps.july.persistence.Currency aMaincurrency) throws java.rmi.RemoteException {
	this.getMaincurrencyLink().set(aMaincurrency);
}
/**
 * Setter method for MutState
 */
public void setMutState(java.lang.String newValue) {
	this.mutstate = newValue;
}
/**
 * Setter method for mutualPeriod
 * @param newValue java.lang.String
 */
public void setMutualPeriod(java.lang.String newValue) {
	this.mutualPeriod = newValue;
}
/**
 * Setter method for startdate
 */
public void setStartdate(java.sql.Date newValue) {
	this.startdate = newValue;
}
}
