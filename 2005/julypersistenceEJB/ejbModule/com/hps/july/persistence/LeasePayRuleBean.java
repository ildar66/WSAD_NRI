package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Правило платежа аренды
 */
public class LeasePayRuleBean extends LeaseRuleBean {
	public String payPeriod;
	public String PayPurpose;
	public String payTerms;
	public String payType;
	public String ppType;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.math.BigDecimal sum;
	public java.lang.Integer resource_resource;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink resourceLink = null;
	public java.lang.Integer currency_currency;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink currencyLink = null;
	public java.lang.Integer orgToPay_organization;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink orgToPayLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink orgAccLink = null;
	public java.lang.Integer orgAcc_account;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leasePaymentLink = null;
	public Short payBeforeDate;
	public Boolean separateNdsPay;
	public String validdatepay;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("payType", getPayType());
        h.put("separateNdsPay", getSeparateNdsPay());
        h.put("ppType", getPpType());
        h.put("validdatepay", getValiddatepay());
        h.put("payPurpose", getPayPurpose());
        h.put("currencyKey", getCurrencyKey());
        h.put("leaseRule", new Integer(getLeaseRule()));
        h.put("leaseDocumentKey", getLeaseDocumentKey());
        h.put("payPeriod", getPayPeriod());
        h.put("orgAccKey", getOrgAccKey());
        h.put("payTerms", getPayTerms());
        h.put("resourceKey", getResourceKey());
        h.put("sum", getSum());
        h.put("orgToPayKey", getOrgToPayKey());
        h.put("payBeforeDate", getPayBeforeDate());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localPayType = (java.lang.String) h.get("payType");
        java.lang.Boolean localSeparateNdsPay = (java.lang.Boolean) h.get("separateNdsPay");
        java.lang.String localPpType = (java.lang.String) h.get("ppType");
        java.lang.String localValiddatepay = (java.lang.String) h.get("validdatepay");
        java.lang.String localPayPurpose = (java.lang.String) h.get("payPurpose");
        Integer localLeaseRule = (Integer) h.get("leaseRule");
        java.lang.String localPayPeriod = (java.lang.String) h.get("payPeriod");
        java.lang.String localPayTerms = (java.lang.String) h.get("payTerms");
        java.math.BigDecimal localSum = (java.math.BigDecimal) h.get("sum");
        java.lang.Short localPayBeforeDate = (java.lang.Short) h.get("payBeforeDate");

        if ( h.containsKey("payType") )
            setPayType((localPayType));
        if ( h.containsKey("separateNdsPay") )
            setSeparateNdsPay((localSeparateNdsPay));
        if ( h.containsKey("ppType") )
            setPpType((localPpType));
        if ( h.containsKey("validdatepay") )
            setValiddatepay((localValiddatepay));
        if ( h.containsKey("payPurpose") )
            setPayPurpose((localPayPurpose));
        if ( h.containsKey("leaseRule") )
            setLeaseRule((localLeaseRule).intValue());
        if ( h.containsKey("payPeriod") )
            setPayPeriod((localPayPeriod));
        if ( h.containsKey("payTerms") )
            setPayTerms((localPayTerms));
        if ( h.containsKey("sum") )
            setSum((localSum));
        if ( h.containsKey("payBeforeDate") )
            setPayBeforeDate((localPayBeforeDate));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = super._getLinks();
	links.addElement(getCurrencyLink());
	links.addElement(getOrgAccLink());
	links.addElement(getResourceLink());
	links.addElement(getOrgToPayLink());
	links.addElement(getLeasePaymentLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	super._initLinks();
	currencyLink = null;
	orgAccLink = null;
	resourceLink = null;
	orgToPayLink = null;
	leasePaymentLink = null;
}
/**
 * This method was generated for supporting the association named LeasePayment2LeaseRule.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeasePayment(com.hps.july.persistence.LeasePayment aLeasePayment) throws java.rmi.RemoteException {
	this.getLeasePaymentLink().addElement(aLeasePayment);
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argLeaseRule int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(Integer argLeaseRule, Integer argLeaseDocument, 
	Integer argCurrency, java.math.BigDecimal argSum, 
	String argPayType ) throws javax.ejb.CreateException, java.rmi.RemoteException {
	super.ejbCreate(argLeaseRule, argLeaseDocument);
	_initLinks();
	// All CMP fields should be initialized here.
	PayPurpose = null;
	payTerms = null;

	resource_resource = null;
	currency_currency = argCurrency;
	sum = PersistenceUtil.dec(argSum,2);
	payPeriod = null;
	payType = argPayType;
	ppType = null;
	orgToPay_organization = null;
	orgAcc_account = null;
	payBeforeDate = null;
	separateNdsPay = null;
	validdatepay = null;
}
/**
 * This method was generated for supporting the association named LeasePayRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Currency getCurrency() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Currency)this.getCurrencyLink().value();
}
/**
 * This method was generated for supporting the association named LeasePayRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.CurrencyKey getCurrencyKey() {
	com.hps.july.persistence.CurrencyKey temp = null;
	temp = new com.hps.july.persistence.CurrencyKey();
	boolean currency_NULLTEST = true;
	currency_NULLTEST &= (currency_currency == null);
	temp.currency = ((currency_currency == null) ? 0 : currency_currency.intValue());
	if (currency_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeasePayRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getCurrencyLink() {
	if (currencyLink == null)
		currencyLink = new LeasePayRuleToCurrencyLink(this);
	return currencyLink;
}
/**
 * This method was generated for supporting the association named LeasePayment2LeaseRule.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeasePayment() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeasePaymentLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeasePayment2LeaseRule.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeasePaymentLink() {
	if (leasePaymentLink == null)
		leasePaymentLink = new LeasePayRuleToLeasePaymentLink(this);
	return leasePaymentLink;
}
/**
 * This method was generated for supporting the association named LeasePayRule2OrgAcc.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Account getOrgAcc() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Account)this.getOrgAccLink().value();
}
/**
 * This method was generated for supporting the association named LeasePayRule2OrgAcc.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.AccountKey getOrgAccKey() {
	com.hps.july.persistence.AccountKey temp = null;
	temp = new com.hps.july.persistence.AccountKey();
	boolean orgAcc_NULLTEST = true;
	orgAcc_NULLTEST &= (orgAcc_account == null);
	temp.account = ((orgAcc_account == null) ? 0 : orgAcc_account.intValue());
	if (orgAcc_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeasePayRule2OrgAcc.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getOrgAccLink() {
	if (orgAccLink == null)
		orgAccLink = new LeasePayRuleToOrgAccLink(this);
	return orgAccLink;
}
/**
 * This method was generated for supporting the association named LeasePayRule2Orgtopay.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Organization getOrgToPay() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Organization)this.getOrgToPayLink().value();
}
/**
 * This method was generated for supporting the association named LeasePayRule2Orgtopay.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.OrganizationKey getOrgToPayKey() {
	com.hps.july.persistence.OrganizationKey temp = null;
	temp = new com.hps.july.persistence.OrganizationKey();
	boolean orgToPay_NULLTEST = true;
	orgToPay_NULLTEST &= (orgToPay_organization == null);
	temp.organization = ((orgToPay_organization == null) ? 0 : orgToPay_organization.intValue());
	if (orgToPay_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeasePayRule2Orgtopay.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getOrgToPayLink() {
	if (orgToPayLink == null)
		orgToPayLink = new LeasePayRuleToOrgToPayLink(this);
	return orgToPayLink;
}
/**
 * Getter method for payBeforeDate
 */
public java.lang.Short getPayBeforeDate() {
	return payBeforeDate;
}
/**
 * Getter method for payPeriod
 * @return java.lang.String
 */
public java.lang.String getPayPeriod() {
	return payPeriod;
}
/**
 * Getter method for PayPurpose
 * @return java.lang.String
 */
public java.lang.String getPayPurpose() {
	return PayPurpose;
}
/**
 * Getter method for payTerms
 * @return java.lang.String
 */
public java.lang.String getPayTerms() {
	return payTerms;
}
/**
 * Getter method for payType
 * @return java.lang.String
 */
public java.lang.String getPayType() {
	return payType;
}
/**
 * Getter method for ppType
 * @return java.lang.String
 */
public java.lang.String getPpType() {
	return ppType;
}
/**
 * This method was generated for supporting the association named LeasePayRule2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Resource getResource() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Resource)this.getResourceLink().value();
}
/**
 * This method was generated for supporting the association named LeasePayRule2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ResourceKey getResourceKey() {
	com.hps.july.persistence.ResourceKey temp = null;
	temp = new com.hps.july.persistence.ResourceKey();
	boolean resource_NULLTEST = true;
	resource_NULLTEST &= (resource_resource == null);
	temp.resource = ((resource_resource == null) ? 0 : resource_resource.intValue());
	if (resource_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeasePayRule2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getResourceLink() {
	if (resourceLink == null)
		resourceLink = new LeasePayRuleToResourceLink(this);
	return resourceLink;
}
/**
 * Getter method for separateNdsPay
 */
public java.lang.Boolean getSeparateNdsPay() {
	return separateNdsPay;
}
/**
 * Getter method for sum
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getSum() {
	return sum;
}
/**
 * Getter method for validdatepay
 */
public java.lang.String getValiddatepay() {
	return validdatepay;
}
/**
 * This method was generated for supporting the association named LeasePayRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetCurrencyKey(com.hps.july.persistence.CurrencyKey inKey) {
	boolean currency_NULLTEST = (inKey == null);
	if (currency_NULLTEST) currency_currency = null; else currency_currency = (new Integer(inKey.currency));
}
/**
 * This method was generated for supporting the association named LeasePayRule2OrgAcc.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetOrgAccKey(com.hps.july.persistence.AccountKey inKey) {
	boolean orgAcc_NULLTEST = (inKey == null);
	if (orgAcc_NULLTEST) orgAcc_account = null; else orgAcc_account = (new Integer(inKey.account));
}
/**
 * This method was generated for supporting the association named LeasePayRule2Orgtopay.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetOrgToPayKey(com.hps.july.persistence.OrganizationKey inKey) {
	boolean orgToPay_NULLTEST = (inKey == null);
	if (orgToPay_NULLTEST) orgToPay_organization = null; else orgToPay_organization = (new Integer(inKey.organization));
}
/**
 * This method was generated for supporting the association named LeasePayRule2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetResourceKey(com.hps.july.persistence.ResourceKey inKey) {
	boolean resource_NULLTEST = (inKey == null);
	if (resource_NULLTEST) resource_resource = null; else resource_resource = (new Integer(inKey.resource));
}
/**
 * This method was generated for supporting the association named LeasePayment2LeaseRule.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeasePayment(com.hps.july.persistence.LeasePayment aLeasePayment) {
	this.getLeasePaymentLink().secondaryAddElement(aLeasePayment);
}
/**
 * This method was generated for supporting the association named LeasePayment2LeaseRule.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeasePayment(com.hps.july.persistence.LeasePayment aLeasePayment) {
	this.getLeasePaymentLink().secondaryRemoveElement(aLeasePayment);
}
/**
 * This method was generated for supporting the association named LeasePayRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetCurrency(com.hps.july.persistence.Currency aCurrency) throws java.rmi.RemoteException {
	this.getCurrencyLink().secondarySet(aCurrency);
}
/**
 * This method was generated for supporting the association named LeasePayRule2OrgAcc.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetOrgAcc(com.hps.july.persistence.Account anOrgAcc) throws java.rmi.RemoteException {
	this.getOrgAccLink().secondarySet(anOrgAcc);
}
/**
 * This method was generated for supporting the association named LeasePayRule2Orgtopay.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetOrgToPay(com.hps.july.persistence.Organization anOrgToPay) throws java.rmi.RemoteException {
	this.getOrgToPayLink().secondarySet(anOrgToPay);
}
/**
 * This method was generated for supporting the association named LeasePayRule2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetResource(com.hps.july.persistence.Resource aResource) throws java.rmi.RemoteException {
	this.getResourceLink().secondarySet(aResource);
}
/**
 * This method was generated for supporting the association named LeasePayRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setCurrency(com.hps.july.persistence.Currency aCurrency) throws java.rmi.RemoteException {
	this.getCurrencyLink().set(aCurrency);
}
/**
 * This method was generated for supporting the association named LeasePayRule2OrgAcc.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setOrgAcc(com.hps.july.persistence.Account anOrgAcc) throws java.rmi.RemoteException {
	this.getOrgAccLink().set(anOrgAcc);
}
/**
 * This method was generated for supporting the association named LeasePayRule2Orgtopay.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setOrgToPay(com.hps.july.persistence.Organization anOrgToPay) throws java.rmi.RemoteException {
	this.getOrgToPayLink().set(anOrgToPay);
}
/**
 * Setter method for payBeforeDate
 */
public void setPayBeforeDate(java.lang.Short newValue) {
	this.payBeforeDate = newValue;
}
/**
 * Setter method for payPeriod
 * @param newValue java.lang.String
 */
public void setPayPeriod(java.lang.String newValue) {
	this.payPeriod = newValue;
}
/**
 * Setter method for PayPurpose
 * @param newValue java.lang.String
 */
public void setPayPurpose(java.lang.String newValue) {
	this.PayPurpose = newValue;
}
/**
 * Setter method for payTerms
 * @param newValue java.lang.String
 */
public void setPayTerms(java.lang.String newValue) {
	this.payTerms = newValue;
}
/**
 * Setter method for payType
 * @param newValue java.lang.String
 */
public void setPayType(java.lang.String newValue) {
	this.payType = newValue;
}
/**
 * Setter method for ppType
 * @param newValue java.lang.String
 */
public void setPpType(java.lang.String newValue) {
	this.ppType = newValue;
}
/**
 * This method was generated for supporting the association named LeasePayRule2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setResource(com.hps.july.persistence.Resource aResource) throws java.rmi.RemoteException {
	this.getResourceLink().set(aResource);
}
/**
 * Setter method for separateNdsPay
 */
public void setSeparateNdsPay(java.lang.Boolean newValue) {
	this.separateNdsPay = newValue;
}
/**
 * Setter method for sum
 * @param newValue java.math.BigDecimal
 */
public void setSum(java.math.BigDecimal newValue) {
	this.sum = PersistenceUtil.dec(newValue,2);
}
/**
 * Setter method for validdatepay
 */
public void setValiddatepay(java.lang.String newValue) {
	this.validdatepay = newValue;
}
}
