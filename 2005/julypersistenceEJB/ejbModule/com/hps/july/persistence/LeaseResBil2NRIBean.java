package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Буфер переноса ресурса из билинга
 */
public class LeaseResBil2NRIBean implements EntityBean {
	public String billresname;
	private javax.ejb.EntityContext entityContext = null;
	public int idrecord;
	public String idresbilling;
	public String record_status;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.lang.Integer leaseResBil_resource;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink leaseResBilLink = null;
	public String typeres;
	public boolean isactive;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("isactive", new Boolean(getIsactive()));
        h.put("idrecord", new Integer(getIdrecord()));
        h.put("billresname", getBillresname());
        h.put("idresbilling", getIdresbilling());
        h.put("leaseResBilKey", getLeaseResBilKey());
        h.put("record_status", getRecord_status());
        h.put("typeres", getTyperes());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        Boolean localIsactive = (Boolean) h.get("isactive");
        java.lang.String localBillresname = (java.lang.String) h.get("billresname");
        java.lang.String localIdresbilling = (java.lang.String) h.get("idresbilling");
        java.lang.String localRecord_status = (java.lang.String) h.get("record_status");
        java.lang.String localTyperes = (java.lang.String) h.get("typeres");

        if ( h.containsKey("isactive") )
            setIsactive((localIsactive).booleanValue());
        if ( h.containsKey("billresname") )
            setBillresname((localBillresname));
        if ( h.containsKey("idresbilling") )
            setIdresbilling((localIdresbilling));
        if ( h.containsKey("record_status") )
            setRecord_status((localRecord_status));
        if ( h.containsKey("typeres") )
            setTyperes((localTyperes));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getLeaseResBilLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	leaseResBilLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argIdrecord int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argIdrecord, String argIdresbilling, String argBillresname, String argRecord_status) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	idrecord = argIdrecord;
	idresbilling = argIdresbilling;
	billresname = argBillresname;
	record_status = argRecord_status;
	leaseResBil_resource = null;
	typeres = null;
	isactive = true;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argIdrecord int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argIdrecord) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for billresname
 * @return java.lang.String
 */
public java.lang.String getBillresname() {
	return billresname;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Insert the method's description here.
 * Creation date: (28.06.2003 15:00:59)
 * @return int
 */
public int getIdrecord() {
	return idrecord;
}
/**
 * Getter method for idresbilling
 * @return java.lang.String
 */
public java.lang.String getIdresbilling() {
	return idresbilling;
}
/**
 * Getter method for isactive
 */
public boolean getIsactive() {
	return isactive;
}
/**
 * This method was generated for supporting the association named LeaseResBil2NRI2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Resource getLeaseResBil() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Resource)this.getLeaseResBilLink().value();
}
/**
 * This method was generated for supporting the association named LeaseResBil2NRI2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ResourceKey getLeaseResBilKey() {
	com.hps.july.persistence.ResourceKey temp = null;
	temp = new com.hps.july.persistence.ResourceKey();
	boolean leaseResBil_NULLTEST = true;
	leaseResBil_NULLTEST &= (leaseResBil_resource == null);
	temp.resource = ((leaseResBil_resource == null) ? 0 : leaseResBil_resource.intValue());
	if (leaseResBil_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeaseResBil2NRI2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getLeaseResBilLink() {
	if (leaseResBilLink == null)
		leaseResBilLink = new LeaseResBil2NRIToLeaseResBilLink(this);
	return leaseResBilLink;
}
/**
 * Getter method for record_status
 * @return java.lang.String
 */
public java.lang.String getRecord_status() {
	return record_status;
}
/**
 * Getter method for typeres
 */
public java.lang.String getTyperes() {
	return typeres;
}
/**
 * This method was generated for supporting the association named LeaseResBil2NRI2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetLeaseResBilKey(com.hps.july.persistence.ResourceKey inKey) {
	boolean leaseResBil_NULLTEST = (inKey == null);
	if (leaseResBil_NULLTEST) leaseResBil_resource = null; else leaseResBil_resource = (new Integer(inKey.resource));
}
/**
 * This method was generated for supporting the association named LeaseResBil2NRI2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetLeaseResBil(com.hps.july.persistence.Resource aLeaseResBil) throws java.rmi.RemoteException {
	this.getLeaseResBilLink().secondarySet(aLeaseResBil);
}
/**
 * Setter method for billresname
 * @param newValue java.lang.String
 */
public void setBillresname(java.lang.String newValue) {
	this.billresname = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for idresbilling
 * @param newValue java.lang.String
 */
public void setIdresbilling(java.lang.String newValue) {
	this.idresbilling = newValue;
}
/**
 * Setter method for isactive
 */
public void setIsactive(boolean newValue) {
	this.isactive = newValue;
}
/**
 * This method was generated for supporting the association named LeaseResBil2NRI2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setLeaseResBil(com.hps.july.persistence.Resource aLeaseResBil) throws java.rmi.RemoteException {
	this.getLeaseResBilLink().set(aLeaseResBil);
}
/**
 * Setter method for record_status
 * @param newValue java.lang.String
 */
public void setRecord_status(java.lang.String newValue) {
	this.record_status = newValue;
}
/**
 * Setter method for typeres
 */
public void setTyperes(java.lang.String newValue) {
	this.typeres = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
