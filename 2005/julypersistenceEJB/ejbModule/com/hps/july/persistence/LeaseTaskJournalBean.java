package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Запись журнала выполнения задачи
 */
public class LeaseTaskJournalBean implements EntityBean {
	public Integer currency1;
	public Integer currency2;
	public java.sql.Date date1;
	public java.sql.Date date2;
	private javax.ejb.EntityContext entityContext = null;
	public int jrnaction;
	public String jrntype;
	public Integer leasedocposition;
	public Integer leasedocument;
	public Integer leaserule;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.math.BigDecimal summ1;
	public java.math.BigDecimal summ2;
	public int taskjournal;
	public java.lang.Integer journal2start_taskstart;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink journal2startLink = null;
	public java.sql.Timestamp jrndate;
	public Integer leasedocposition2;
	public Integer resource1;
	public Integer resource2;
	public String jrnmessage;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("jrntype", getJrntype());
        h.put("jrnmessage", getJrnmessage());
        h.put("leasedocument", getLeasedocument());
        h.put("leasedocposition", getLeasedocposition());
        h.put("currency2", getCurrency2());
        h.put("currency1", getCurrency1());
        h.put("date2", getDate2());
        h.put("date1", getDate1());
        h.put("jrnaction", new Integer(getJrnaction()));
        h.put("resource2", getResource2());
        h.put("resource1", getResource1());
        h.put("leaserule", getLeaserule());
        h.put("jrndate", getJrndate());
        h.put("leasedocposition2", getLeasedocposition2());
        h.put("journal2startKey", getJournal2startKey());
        h.put("summ2", getSumm2());
        h.put("summ1", getSumm1());
        h.put("taskjournal", new Integer(getTaskjournal()));
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localJrntype = (java.lang.String) h.get("jrntype");
        java.lang.String localJrnmessage = (java.lang.String) h.get("jrnmessage");
        java.lang.Integer localLeasedocument = (java.lang.Integer) h.get("leasedocument");
        java.lang.Integer localLeasedocposition = (java.lang.Integer) h.get("leasedocposition");
        java.lang.Integer localCurrency2 = (java.lang.Integer) h.get("currency2");
        java.lang.Integer localCurrency1 = (java.lang.Integer) h.get("currency1");
        java.sql.Date localDate2 = (java.sql.Date) h.get("date2");
        java.sql.Date localDate1 = (java.sql.Date) h.get("date1");
        Integer localJrnaction = (Integer) h.get("jrnaction");
        java.lang.Integer localResource2 = (java.lang.Integer) h.get("resource2");
        java.lang.Integer localResource1 = (java.lang.Integer) h.get("resource1");
        java.lang.Integer localLeaserule = (java.lang.Integer) h.get("leaserule");
        java.sql.Timestamp localJrndate = (java.sql.Timestamp) h.get("jrndate");
        java.lang.Integer localLeasedocposition2 = (java.lang.Integer) h.get("leasedocposition2");
        java.math.BigDecimal localSumm2 = (java.math.BigDecimal) h.get("summ2");
        java.math.BigDecimal localSumm1 = (java.math.BigDecimal) h.get("summ1");

        if ( h.containsKey("jrntype") )
            setJrntype((localJrntype));
        if ( h.containsKey("jrnmessage") )
            setJrnmessage((localJrnmessage));
        if ( h.containsKey("leasedocument") )
            setLeasedocument((localLeasedocument));
        if ( h.containsKey("leasedocposition") )
            setLeasedocposition((localLeasedocposition));
        if ( h.containsKey("currency2") )
            setCurrency2((localCurrency2));
        if ( h.containsKey("currency1") )
            setCurrency1((localCurrency1));
        if ( h.containsKey("date2") )
            setDate2((localDate2));
        if ( h.containsKey("date1") )
            setDate1((localDate1));
        if ( h.containsKey("jrnaction") )
            setJrnaction((localJrnaction).intValue());
        if ( h.containsKey("resource2") )
            setResource2((localResource2));
        if ( h.containsKey("resource1") )
            setResource1((localResource1));
        if ( h.containsKey("leaserule") )
            setLeaserule((localLeaserule));
        if ( h.containsKey("jrndate") )
            setJrndate((localJrndate));
        if ( h.containsKey("leasedocposition2") )
            setLeasedocposition2((localLeasedocposition2));
        if ( h.containsKey("summ2") )
            setSumm2((localSumm2));
        if ( h.containsKey("summ1") )
            setSumm1((localSumm1));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getJournal2startLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	journal2startLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argTaskjournal int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argTaskjournal) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	taskjournal = argTaskjournal;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argTaskjournal int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argTaskJournal, int argTaskStart, java.sql.Timestamp argJrnDate, 
	int argJrnAction, java.lang.String argJrnType) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	taskjournal = argTaskJournal;
	journal2start_taskstart = new Integer(argTaskStart);
	jrndate = argJrnDate;
	jrnaction = argJrnAction;
	jrntype = argJrnType;
	jrnmessage = null;
	leaserule = null;
	leasedocument = null;
	leasedocposition = null;
	leasedocposition2 = null;
	date1 = null;
	date2 = null;
	summ1 = null;
	summ2 = null;
	currency1 = null;
	currency2 = null;
	resource1 = null;
	resource2 = null;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argTaskjournal int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argTaskjournal) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for currency1
 * @return java.lang.Integer
 */
public java.lang.Integer getCurrency1() {
	return currency1;
}
/**
 * Getter method for currency2
 * @return java.lang.Integer
 */
public java.lang.Integer getCurrency2() {
	return currency2;
}
/**
 * Getter method for date1
 * @return java.sql.Date
 */
public java.sql.Date getDate1() {
	return date1;
}
/**
 * Getter method for date2
 * @return java.sql.Date
 */
public java.sql.Date getDate2() {
	return date2;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * This method was generated for supporting the association named LeaseTaskJournal2TaskStart.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseTaskStart getJournal2start() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.LeaseTaskStart)this.getJournal2startLink().value();
}
/**
 * This method was generated for supporting the association named LeaseTaskJournal2TaskStart.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseTaskStartKey getJournal2startKey() {
	com.hps.july.persistence.LeaseTaskStartKey temp = null;
	temp = new com.hps.july.persistence.LeaseTaskStartKey();
	boolean journal2start_NULLTEST = true;
	journal2start_NULLTEST &= (journal2start_taskstart == null);
	temp.taskstart = ((journal2start_taskstart == null) ? 0 : journal2start_taskstart.intValue());
	if (journal2start_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeaseTaskJournal2TaskStart.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getJournal2startLink() {
	if (journal2startLink == null)
		journal2startLink = new LeaseTaskJournalToJournal2startLink(this);
	return journal2startLink;
}
/**
 * Getter method for jrnaction
 * @return int
 */
public int getJrnaction() {
	return jrnaction;
}
/**
 * Getter method for jrndate
 */
public java.sql.Timestamp getJrndate() {
	return jrndate;
}
/**
 * Getter method for jrnmessage
 */
public java.lang.String getJrnmessage() {
	return jrnmessage;
}
/**
 * Getter method for jrntype
 * @return java.lang.String
 */
public java.lang.String getJrntype() {
	return jrntype;
}
/**
 * Getter method for leasedocposition
 * @return java.lang.Integer
 */
public java.lang.Integer getLeasedocposition() {
	return leasedocposition;
}
/**
 * Getter method for leasedocposition2
 */
public java.lang.Integer getLeasedocposition2() {
	return leasedocposition2;
}
/**
 * Getter method for leasedocument
 * @return java.lang.Integer
 */
public java.lang.Integer getLeasedocument() {
	return leasedocument;
}
/**
 * Getter method for leaserule
 * @return java.lang.Integer
 */
public java.lang.Integer getLeaserule() {
	return leaserule;
}
/**
 * Getter method for resource1
 */
public java.lang.Integer getResource1() {
	return resource1;
}
/**
 * Getter method for resource2
 */
public java.lang.Integer getResource2() {
	return resource2;
}
/**
 * Getter method for summ1
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getSumm1() {
	return summ1;
}
/**
 * Getter method for summ2
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getSumm2() {
	return summ2;
}
/**
 * Insert the method's description here.
 * Creation date: (26.09.2002 14:53:52)
 * @return int
 */
public int getTaskjournal() {
	return taskjournal;
}
/**
 * This method was generated for supporting the association named LeaseTaskJournal2TaskStart.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetJournal2startKey(com.hps.july.persistence.LeaseTaskStartKey inKey) {
	boolean journal2start_NULLTEST = (inKey == null);
	if (journal2start_NULLTEST) journal2start_taskstart = null; else journal2start_taskstart = (new Integer(inKey.taskstart));
}
/**
 * This method was generated for supporting the association named LeaseTaskJournal2TaskStart.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetJournal2start(com.hps.july.persistence.LeaseTaskStart aJournal2start) throws java.rmi.RemoteException {
	this.getJournal2startLink().secondarySet(aJournal2start);
}
/**
 * Setter method for currency1
 * @param newValue java.lang.Integer
 */
public void setCurrency1(java.lang.Integer newValue) {
	this.currency1 = newValue;
}
/**
 * Setter method for currency2
 * @param newValue java.lang.Integer
 */
public void setCurrency2(java.lang.Integer newValue) {
	this.currency2 = newValue;
}
/**
 * Setter method for date1
 * @param newValue java.sql.Date
 */
public void setDate1(java.sql.Date newValue) {
	this.date1 = newValue;
}
/**
 * Setter method for date2
 * @param newValue java.sql.Date
 */
public void setDate2(java.sql.Date newValue) {
	this.date2 = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * This method was generated for supporting the association named LeaseTaskJournal2TaskStart.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setJournal2start(com.hps.july.persistence.LeaseTaskStart aJournal2start) throws java.rmi.RemoteException {
	this.getJournal2startLink().set(aJournal2start);
}
/**
 * Setter method for jrnaction
 * @param newValue int
 */
public void setJrnaction(int newValue) {
	this.jrnaction = newValue;
}
/**
 * Setter method for jrndate
 */
public void setJrndate(java.sql.Timestamp newValue) {
	this.jrndate = newValue;
}
/**
 * Setter method for jrnmessage
 */
public void setJrnmessage(java.lang.String newValue) {
	this.jrnmessage = newValue;
}
/**
 * Setter method for jrntype
 * @param newValue java.lang.String
 */
public void setJrntype(java.lang.String newValue) {
	this.jrntype = newValue;
}
/**
 * Setter method for leasedocposition
 * @param newValue java.lang.Integer
 */
public void setLeasedocposition(java.lang.Integer newValue) {
	this.leasedocposition = newValue;
}
/**
 * Setter method for leasedocposition2
 */
public void setLeasedocposition2(java.lang.Integer newValue) {
	this.leasedocposition2 = newValue;
}
/**
 * Setter method for leasedocument
 * @param newValue java.lang.Integer
 */
public void setLeasedocument(java.lang.Integer newValue) {
	this.leasedocument = newValue;
}
/**
 * Setter method for leaserule
 * @param newValue java.lang.Integer
 */
public void setLeaserule(java.lang.Integer newValue) {
	this.leaserule = newValue;
}
/**
 * Setter method for resource1
 */
public void setResource1(java.lang.Integer newValue) {
	this.resource1 = newValue;
}
/**
 * Setter method for resource2
 */
public void setResource2(java.lang.Integer newValue) {
	this.resource2 = newValue;
}
/**
 * Setter method for summ1
 * @param newValue java.math.BigDecimal
 */
public void setSumm1(java.math.BigDecimal newValue) {
	this.summ1 = newValue;
}
/**
 * Setter method for summ2
 * @param newValue java.math.BigDecimal
 */
public void setSumm2(java.math.BigDecimal newValue) {
	this.summ2 = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
