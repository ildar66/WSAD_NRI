package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Документ позиции опорной сети
 */
public class SiteDocBean implements EntityBean {
	public java.sql.Date blankdate;
	public String blanknumber;
	public String comment;
	private javax.ejb.EntityContext entityContext = null;
	public java.sql.Date expiredate;
	private final static long serialVersionUID = 3206093459760846163L;
	public int sitedoc;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink siteDocFilesLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink projectActionLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink siteDocTypeLink = null;
	public java.lang.Integer projectAction_projectaction;
	public java.lang.Integer siteDocType_sitedoctype;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink sitedoc2SplacesLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink manLink = null;
	public java.lang.Integer man_man;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("blanknumber", getBlanknumber());
        h.put("sitedoc", new Integer(getSitedoc()));
        h.put("blankdate", getBlankdate());
        h.put("comment", getComment());
        h.put("projectActionKey", getProjectActionKey());
        h.put("manKey", getManKey());
        h.put("expiredate", getExpiredate());
        h.put("siteDocTypeKey", getSiteDocTypeKey());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localBlanknumber = (java.lang.String) h.get("blanknumber");
        java.sql.Date localBlankdate = (java.sql.Date) h.get("blankdate");
        java.lang.String localComment = (java.lang.String) h.get("comment");
        java.sql.Date localExpiredate = (java.sql.Date) h.get("expiredate");

        if ( h.containsKey("blanknumber") )
            setBlanknumber((localBlanknumber));
        if ( h.containsKey("blankdate") )
            setBlankdate((localBlankdate));
        if ( h.containsKey("comment") )
            setComment((localComment));
        if ( h.containsKey("expiredate") )
            setExpiredate((localExpiredate));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getProjectActionLink());
	links.addElement(getSiteDocTypeLink());
	links.addElement(getSitedoc2SplacesLink());
	links.addElement(getSiteDocFilesLink());
	links.addElement(getManLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	projectActionLink = null;
	siteDocTypeLink = null;
	sitedoc2SplacesLink = null;
	siteDocFilesLink = null;
	manLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * This method was generated for supporting the association named SiteDocFile2SiteDocs.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addSiteDocFiles(com.hps.july.persistence.SiteDocFile aSiteDocFiles) throws java.rmi.RemoteException {
	this.getSiteDocFilesLink().addElement(aSiteDocFiles);
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argSitedoc int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argSitedoc, int siteDocType, int man) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	sitedoc = argSitedoc;
	siteDocType_sitedoctype = new Integer(siteDocType);
	blanknumber = null;
	blankdate = null;
	expiredate = null;
	comment = null;
	projectAction_projectaction = null;
	man_man = new Integer(man);
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argSitedoc int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argSitedoc) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for blankdate
 * @return java.util.Date
 */
public java.sql.Date getBlankdate() {
	return blankdate;
}
/**
 * Getter method for blanknumber
 * @return java.lang.String
 */
public java.lang.String getBlanknumber() {
	return blanknumber;
}
/**
 * Getter method for comment
 * @return java.lang.String
 */
public java.lang.String getComment() {
	return comment;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for expiredate
 * @return java.util.Date
 */
public java.sql.Date getExpiredate() {
	return expiredate;
}
/**
 * This method was generated for supporting the association named SiteDoc2People.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.People getMan() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.People)this.getManLink().value();
}
/**
 * This method was generated for supporting the association named SiteDoc2People.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.PeopleKey getManKey() {
	com.hps.july.persistence.PeopleKey temp = null;
	temp = new com.hps.july.persistence.PeopleKey();
	boolean man_NULLTEST = true;
	man_NULLTEST &= (man_man == null);
	temp.man = ((man_man == null) ? 0 : man_man.intValue());
	if (man_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named SiteDoc2People.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getManLink() {
	if (manLink == null)
		manLink = new SiteDocToManLink(this);
	return manLink;
}
/**
 * This method was generated for supporting the association named SiteDoc2ProjectAction.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ProjectAction getProjectAction() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.ProjectAction)this.getProjectActionLink().value();
}
/**
 * This method was generated for supporting the association named SiteDoc2ProjectAction.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ProjectActionKey getProjectActionKey() {
	com.hps.july.persistence.ProjectActionKey temp = null;
	temp = new com.hps.july.persistence.ProjectActionKey();
	boolean projectAction_NULLTEST = true;
	projectAction_NULLTEST &= (projectAction_projectaction == null);
	temp.projectaction = ((projectAction_projectaction == null) ? 0 : projectAction_projectaction.intValue());
	if (projectAction_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named SiteDoc2ProjectAction.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getProjectActionLink() {
	if (projectActionLink == null)
		projectActionLink = new SiteDocToProjectActionLink(this);
	return projectActionLink;
}
/**
 * Insert the method's description here.
 * Creation date: (14.05.2003 13:14:05)
 * @return int
 */
public int getSitedoc() {
	return sitedoc;
}
/**
 * This method was generated for supporting the association named Sitedoc2Splace2SiteDoc.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getSitedoc2Splaces() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getSitedoc2SplacesLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named Sitedoc2Splace2SiteDoc.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getSitedoc2SplacesLink() {
	if (sitedoc2SplacesLink == null)
		sitedoc2SplacesLink = new SiteDocToSitedoc2SplacesLink(this);
	return sitedoc2SplacesLink;
}
/**
 * This method was generated for supporting the association named SiteDocFile2SiteDocs.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getSiteDocFiles() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getSiteDocFilesLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named SiteDocFile2SiteDocs.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getSiteDocFilesLink() {
	if (siteDocFilesLink == null)
		siteDocFilesLink = new SiteDocToSiteDocFilesLink(this);
	return siteDocFilesLink;
}
/**
 * This method was generated for supporting the association named SiteDoc2SiteDocType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.SiteDocType getSiteDocType() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.SiteDocType)this.getSiteDocTypeLink().value();
}
/**
 * This method was generated for supporting the association named SiteDoc2SiteDocType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.SiteDocTypeKey getSiteDocTypeKey() {
	com.hps.july.persistence.SiteDocTypeKey temp = null;
	temp = new com.hps.july.persistence.SiteDocTypeKey();
	boolean siteDocType_NULLTEST = true;
	siteDocType_NULLTEST &= (siteDocType_sitedoctype == null);
	temp.sitedoctype = ((siteDocType_sitedoctype == null) ? 0 : siteDocType_sitedoctype.intValue());
	if (siteDocType_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named SiteDoc2SiteDocType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getSiteDocTypeLink() {
	if (siteDocTypeLink == null)
		siteDocTypeLink = new SiteDocToSiteDocTypeLink(this);
	return siteDocTypeLink;
}
/**
 * This method was generated for supporting the association named SiteDoc2People.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetManKey(com.hps.july.persistence.PeopleKey inKey) {
	boolean man_NULLTEST = (inKey == null);
	if (man_NULLTEST) man_man = null; else man_man = (new Integer(inKey.man));
}
/**
 * This method was generated for supporting the association named SiteDoc2ProjectAction.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetProjectActionKey(com.hps.july.persistence.ProjectActionKey inKey) {
	boolean projectAction_NULLTEST = (inKey == null);
	if (projectAction_NULLTEST) projectAction_projectaction = null; else projectAction_projectaction = (new Integer(inKey.projectaction));
}
/**
 * This method was generated for supporting the association named SiteDoc2SiteDocType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetSiteDocTypeKey(com.hps.july.persistence.SiteDocTypeKey inKey) {
	boolean siteDocType_NULLTEST = (inKey == null);
	if (siteDocType_NULLTEST) siteDocType_sitedoctype = null; else siteDocType_sitedoctype = (new Integer(inKey.sitedoctype));
}
/**
 * This method was generated for supporting the association named Sitedoc2Splace2SiteDoc.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddSitedoc2Splaces(com.hps.july.persistence.Sitedoc2Splace aSitedoc2Splaces) {
	this.getSitedoc2SplacesLink().secondaryAddElement(aSitedoc2Splaces);
}
/**
 * This method was generated for supporting the association named SiteDocFile2SiteDocs.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddSiteDocFiles(com.hps.july.persistence.SiteDocFile aSiteDocFiles) {
	this.getSiteDocFilesLink().secondaryAddElement(aSiteDocFiles);
}
/**
 * This method was generated for supporting the association named Sitedoc2Splace2SiteDoc.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveSitedoc2Splaces(com.hps.july.persistence.Sitedoc2Splace aSitedoc2Splaces) {
	this.getSitedoc2SplacesLink().secondaryRemoveElement(aSitedoc2Splaces);
}
/**
 * This method was generated for supporting the association named SiteDocFile2SiteDocs.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveSiteDocFiles(com.hps.july.persistence.SiteDocFile aSiteDocFiles) {
	this.getSiteDocFilesLink().secondaryRemoveElement(aSiteDocFiles);
}
/**
 * This method was generated for supporting the association named SiteDoc2People.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetMan(com.hps.july.persistence.People aMan) throws java.rmi.RemoteException {
	this.getManLink().secondarySet(aMan);
}
/**
 * This method was generated for supporting the association named SiteDoc2ProjectAction.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetProjectAction(com.hps.july.persistence.ProjectAction aProjectAction) throws java.rmi.RemoteException {
	this.getProjectActionLink().secondarySet(aProjectAction);
}
/**
 * This method was generated for supporting the association named SiteDoc2SiteDocType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetSiteDocType(com.hps.july.persistence.SiteDocType aSiteDocType) throws java.rmi.RemoteException {
	this.getSiteDocTypeLink().secondarySet(aSiteDocType);
}
/**
 * Setter method for blankdate
 * @param newValue java.util.Date
 */
public void setBlankdate(java.sql.Date newValue) {
	this.blankdate = newValue;
}
/**
 * Setter method for blanknumber
 * @param newValue java.lang.String
 */
public void setBlanknumber(java.lang.String newValue) {
	this.blanknumber = newValue;
}
/**
 * Setter method for comment
 * @param newValue java.lang.String
 */
public void setComment(java.lang.String newValue) {
	this.comment = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for expiredate
 * @param newValue java.util.Date
 */
public void setExpiredate(java.sql.Date newValue) {
	this.expiredate = newValue;
}
/**
 * This method was generated for supporting the association named SiteDoc2People.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setMan(com.hps.july.persistence.People aMan) throws java.rmi.RemoteException {
	this.getManLink().set(aMan);
}
/**
 * This method was generated for supporting the association named SiteDoc2ProjectAction.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setProjectAction(com.hps.july.persistence.ProjectAction aProjectAction) throws java.rmi.RemoteException {
	this.getProjectActionLink().set(aProjectAction);
}
/**
 * This method was generated for supporting the association named SiteDoc2SiteDocType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setSiteDocType(com.hps.july.persistence.SiteDocType aSiteDocType) throws java.rmi.RemoteException {
	this.getSiteDocTypeLink().set(aSiteDocType);
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
