package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * ѕравила начислений по договорам аренды
 */
public class LeaseChargeRuleBean extends LeaseRuleBean {
	public String chargeDateRule;
	public String chargePeriod;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.math.BigDecimal sum;
	public java.lang.Integer resource_resource;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink resourceLink = null;
	public java.lang.Integer curency_currency;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink curencyLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseChargesLink = null;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("chargePeriod", getChargePeriod());
        h.put("leaseRule", new Integer(getLeaseRule()));
        h.put("leaseDocumentKey", getLeaseDocumentKey());
        h.put("chargeDateRule", getChargeDateRule());
        h.put("curencyKey", getCurencyKey());
        h.put("resourceKey", getResourceKey());
        h.put("sum", getSum());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localChargePeriod = (java.lang.String) h.get("chargePeriod");
        Integer localLeaseRule = (Integer) h.get("leaseRule");
        java.lang.String localChargeDateRule = (java.lang.String) h.get("chargeDateRule");
        java.math.BigDecimal localSum = (java.math.BigDecimal) h.get("sum");

        if ( h.containsKey("chargePeriod") )
            setChargePeriod((localChargePeriod));
        if ( h.containsKey("leaseRule") )
            setLeaseRule((localLeaseRule).intValue());
        if ( h.containsKey("chargeDateRule") )
            setChargeDateRule((localChargeDateRule));
        if ( h.containsKey("sum") )
            setSum((localSum));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = super._getLinks();
	links.addElement(getCurencyLink());
	links.addElement(getResourceLink());
	links.addElement(getLeaseChargesLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	super._initLinks();
	curencyLink = null;
	resourceLink = null;
	leaseChargesLink = null;
}
/**
 * This method was generated for supporting the association named LeaseCharges2LeaseChargeRules.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeaseCharges(com.hps.july.persistence.LeaseCharges aLeaseCharges) throws java.rmi.RemoteException {
	this.getLeaseChargesLink().addElement(aLeaseCharges);
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argLeaseRule int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(Integer argLeaseRule, Integer argLeaseDocument, Integer argResource, 
	Integer argCurrency, java.math.BigDecimal argSum, String argChargePeriod, String argChargeDateRule ) throws javax.ejb.CreateException, java.rmi.RemoteException {
	super.ejbCreate(argLeaseRule, argLeaseDocument);
	_initLinks();
	// All CMP fields should be initialized here.
	resource_resource = argResource;
	curency_currency = argCurrency;
	sum = PersistenceUtil.dec(argSum,2);
	chargePeriod = argChargePeriod;
	chargeDateRule = argChargeDateRule;
}
/**
 * Getter method for chargeDateRule
 * @return java.lang.String
 */
public java.lang.String getChargeDateRule() {
	return chargeDateRule;
}
/**
 * Getter method for chargePeriod
 * @return java.lang.String
 */
public java.lang.String getChargePeriod() {
	return chargePeriod;
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Currency getCurency() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Currency)this.getCurencyLink().value();
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.CurrencyKey getCurencyKey() {
	com.hps.july.persistence.CurrencyKey temp = null;
	temp = new com.hps.july.persistence.CurrencyKey();
	boolean curency_NULLTEST = true;
	curency_NULLTEST &= (curency_currency == null);
	temp.currency = ((curency_currency == null) ? 0 : curency_currency.intValue());
	if (curency_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getCurencyLink() {
	if (curencyLink == null)
		curencyLink = new LeaseChargeRuleToCurencyLink(this);
	return curencyLink;
}
/**
 * This method was generated for supporting the association named LeaseCharges2LeaseChargeRules.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseCharges() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseChargesLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseCharges2LeaseChargeRules.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseChargesLink() {
	if (leaseChargesLink == null)
		leaseChargesLink = new LeaseChargeRuleToLeaseChargesLink(this);
	return leaseChargesLink;
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Resource getResource() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Resource)this.getResourceLink().value();
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ResourceKey getResourceKey() {
	com.hps.july.persistence.ResourceKey temp = null;
	temp = new com.hps.july.persistence.ResourceKey();
	boolean resource_NULLTEST = true;
	resource_NULLTEST &= (resource_resource == null);
	temp.resource = ((resource_resource == null) ? 0 : resource_resource.intValue());
	if (resource_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getResourceLink() {
	if (resourceLink == null)
		resourceLink = new LeaseChargeRuleToResourceLink(this);
	return resourceLink;
}
/**
 * Getter method for sum
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getSum() {
	return sum;
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetCurencyKey(com.hps.july.persistence.CurrencyKey inKey) {
	boolean curency_NULLTEST = (inKey == null);
	if (curency_NULLTEST) curency_currency = null; else curency_currency = (new Integer(inKey.currency));
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetResourceKey(com.hps.july.persistence.ResourceKey inKey) {
	boolean resource_NULLTEST = (inKey == null);
	if (resource_NULLTEST) resource_resource = null; else resource_resource = (new Integer(inKey.resource));
}
/**
 * This method was generated for supporting the association named LeaseCharges2LeaseChargeRules.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseCharges(com.hps.july.persistence.LeaseCharges aLeaseCharges) {
	this.getLeaseChargesLink().secondaryAddElement(aLeaseCharges);
}
/**
 * This method was generated for supporting the association named LeaseCharges2LeaseChargeRules.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseCharges(com.hps.july.persistence.LeaseCharges aLeaseCharges) {
	this.getLeaseChargesLink().secondaryRemoveElement(aLeaseCharges);
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetCurency(com.hps.july.persistence.Currency aCurency) throws java.rmi.RemoteException {
	this.getCurencyLink().secondarySet(aCurency);
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetResource(com.hps.july.persistence.Resource aResource) throws java.rmi.RemoteException {
	this.getResourceLink().secondarySet(aResource);
}
/**
 * Setter method for chargeDateRule
 * @param newValue java.lang.String
 */
public void setChargeDateRule(java.lang.String newValue) {
	this.chargeDateRule = newValue;
}
/**
 * Setter method for chargePeriod
 * @param newValue java.lang.String
 */
public void setChargePeriod(java.lang.String newValue) {
	this.chargePeriod = newValue;
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setCurency(com.hps.july.persistence.Currency aCurency) throws java.rmi.RemoteException {
	this.getCurencyLink().set(aCurency);
}
/**
 * This method was generated for supporting the association named LeaseChargeRule2Resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setResource(com.hps.july.persistence.Resource aResource) throws java.rmi.RemoteException {
	this.getResourceLink().set(aResource);
}
/**
 * Setter method for sum
 * @param newValue java.math.BigDecimal
 */
public void setSum(java.math.BigDecimal newValue) {
	this.sum = PersistenceUtil.dec(newValue,2);
}
}
