package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Буфер переноса платежа в билинг
 */
public class LeasePay2BillBean implements EntityBean {
	private javax.ejb.EntityContext entityContext = null;
	public boolean flagworkpie;
	public int leasecontract;
	public int leasemutualact;
	public String recordstatus;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.math.BigDecimal sumusd;

/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("leasemutualact", new Integer(getLeasemutualact()));
        h.put("flagworkpie", new Boolean(getFlagworkpie()));
        h.put("recordstatus", getRecordstatus());
        h.put("sumusd", getSumusd());
        h.put("leasecontract", new Integer(getLeasecontract()));
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        Boolean localFlagworkpie = (Boolean) h.get("flagworkpie");
        java.lang.String localRecordstatus = (java.lang.String) h.get("recordstatus");
        java.math.BigDecimal localSumusd = (java.math.BigDecimal) h.get("sumusd");

        if ( h.containsKey("flagworkpie") )
            setFlagworkpie((localFlagworkpie).booleanValue());
        if ( h.containsKey("recordstatus") )
            setRecordstatus((localRecordstatus));
        if ( h.containsKey("sumusd") )
            setSumusd((localSumusd));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argLeasemutualact int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argLeasemutualact, int argLeaseContract, java.math.BigDecimal argSumUSD,
		boolean argFlagWorkPIE, String argRecordStatus) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	leasemutualact = argLeasemutualact;
	leasecontract = argLeaseContract;
	sumusd = argSumUSD;
	flagworkpie = argFlagWorkPIE;
	recordstatus = argRecordStatus;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argLeasemutualact int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argLeasemutualact) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for flagworkpie
 * @return boolean
 */
public boolean getFlagworkpie() {
	return flagworkpie;
}
/**
 * Getter method for leasecontract
 * @return int
 */
public int getLeasecontract() {
	return leasecontract;
}
/**
 * Insert the method's description here.
 * Creation date: (30.01.2003 16:45:11)
 * @return int
 */
public int getLeasemutualact() {
	return leasemutualact;
}
/**
 * Getter method for recordstatus
 * @return java.lang.String
 */
public java.lang.String getRecordstatus() {
	return recordstatus;
}
/**
 * Getter method for sumusd
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getSumusd() {
	return sumusd;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for flagworkpie
 * @param newValue boolean
 */
public void setFlagworkpie(boolean newValue) {
	this.flagworkpie = newValue;
}
/**
 * Setter method for recordstatus
 * @param newValue java.lang.String
 */
public void setRecordstatus(java.lang.String newValue) {
	this.recordstatus = newValue;
}
/**
 * Setter method for sumusd
 * @param newValue java.math.BigDecimal
 */
public void setSumusd(java.math.BigDecimal newValue) {
	this.sumusd = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
