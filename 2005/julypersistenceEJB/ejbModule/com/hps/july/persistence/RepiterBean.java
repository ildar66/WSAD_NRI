package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Оборудование типа репитер
 */
public class RepiterBean extends EquipmentSetBean {
	public java.math.BigDecimal bandwidth;
	public String donor_type;
	public Integer numchanals;
	public String repiter_class;
	public java.math.BigDecimal reppower;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.lang.Integer donor_ant_idanten;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink donor_antLink = null;
	public java.lang.Integer donor_sect_idsect;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink donor_sectLink = null;
	public java.lang.Integer resource_resource;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink resourceLink = null;
	public int number;
	public java.sql.Date date_assemb_afs;
	public java.sql.Date date_connect;
	public java.sql.Date date_onair;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("pwrval", getPwrval());
        h.put("datebldbeg", getDatebldbeg());
        h.put("createdby", getCreatedby());
        h.put("storageplace", new Integer(getStorageplace()));
        h.put("datasource", new Integer(getDatasource()));
        h.put("date_onair", getDate_onair());
        h.put("repiter_class", getRepiter_class());
        h.put("address", getAddress());
        h.put("number", new Integer(getNumber()));
        h.put("closedate", getClosedate());
        h.put("dateassemb", getDateassemb());
        h.put("reppower", getReppower());
        h.put("pwrreserve", getPwrreserve());
        h.put("date_assemb_afs", getDate_assemb_afs());
        h.put("created", getCreated());
        h.put("bandwidth", getBandwidth());
        h.put("donor_antKey", getDonor_antKey());
        h.put("modifiedby", getModifiedby());
        h.put("numchanals", getNumchanals());
        h.put("datepr", getDatepr());
        h.put("positionKey", getPositionKey());
        h.put("donor_type", getDonor_type());
        h.put("operator", getOperator());
        h.put("divisionKey", getDivisionKey());
        h.put("datetest", getDatetest());
        h.put("equipcomment", getEquipcomment());
        h.put("pwrrescat", getPwrrescat());
        h.put("pwrcat", getPwrcat());
        h.put("modified", getModified());
        h.put("equipmentState", getEquipmentState());
        h.put("donor_sectKey", getDonor_sectKey());
        h.put("resourceKey", getResourceKey());
        h.put("date_connect", getDate_connect());
        h.put("name", getName());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.math.BigDecimal localPwrval = (java.math.BigDecimal) h.get("pwrval");
        java.sql.Date localDatebldbeg = (java.sql.Date) h.get("datebldbeg");
        java.lang.Integer localCreatedby = (java.lang.Integer) h.get("createdby");
        Integer localStorageplace = (Integer) h.get("storageplace");
        Integer localDatasource = (Integer) h.get("datasource");
        java.sql.Date localDate_onair = (java.sql.Date) h.get("date_onair");
        java.lang.String localRepiter_class = (java.lang.String) h.get("repiter_class");
        java.lang.String localAddress = (java.lang.String) h.get("address");
        Integer localNumber = (Integer) h.get("number");
        java.sql.Date localClosedate = (java.sql.Date) h.get("closedate");
        java.sql.Date localDateassemb = (java.sql.Date) h.get("dateassemb");
        java.math.BigDecimal localReppower = (java.math.BigDecimal) h.get("reppower");
        java.lang.Boolean localPwrreserve = (java.lang.Boolean) h.get("pwrreserve");
        java.sql.Date localDate_assemb_afs = (java.sql.Date) h.get("date_assemb_afs");
        java.sql.Timestamp localCreated = (java.sql.Timestamp) h.get("created");
        java.math.BigDecimal localBandwidth = (java.math.BigDecimal) h.get("bandwidth");
        java.lang.Integer localModifiedby = (java.lang.Integer) h.get("modifiedby");
        java.lang.Integer localNumchanals = (java.lang.Integer) h.get("numchanals");
        java.sql.Date localDatepr = (java.sql.Date) h.get("datepr");
        java.lang.String localDonor_type = (java.lang.String) h.get("donor_type");
        java.lang.Integer localOperator = (java.lang.Integer) h.get("operator");
        java.sql.Date localDatetest = (java.sql.Date) h.get("datetest");
        java.lang.String localEquipcomment = (java.lang.String) h.get("equipcomment");
        java.lang.String localPwrrescat = (java.lang.String) h.get("pwrrescat");
        java.lang.String localPwrcat = (java.lang.String) h.get("pwrcat");
        java.sql.Timestamp localModified = (java.sql.Timestamp) h.get("modified");
        java.lang.String localEquipmentState = (java.lang.String) h.get("equipmentState");
        java.sql.Date localDate_connect = (java.sql.Date) h.get("date_connect");
        java.lang.String localName = (java.lang.String) h.get("name");

        if ( h.containsKey("pwrval") )
            setPwrval((localPwrval));
        if ( h.containsKey("datebldbeg") )
            setDatebldbeg((localDatebldbeg));
        if ( h.containsKey("createdby") )
            setCreatedby((localCreatedby));
        if ( h.containsKey("storageplace") )
            setStorageplace((localStorageplace).intValue());
        if ( h.containsKey("datasource") )
            setDatasource((localDatasource).intValue());
        if ( h.containsKey("date_onair") )
            setDate_onair((localDate_onair));
        if ( h.containsKey("repiter_class") )
            setRepiter_class((localRepiter_class));
        if ( h.containsKey("address") )
            setAddress((localAddress));
        if ( h.containsKey("number") )
            setNumber((localNumber).intValue());
        if ( h.containsKey("closedate") )
            setClosedate((localClosedate));
        if ( h.containsKey("dateassemb") )
            setDateassemb((localDateassemb));
        if ( h.containsKey("reppower") )
            setReppower((localReppower));
        if ( h.containsKey("pwrreserve") )
            setPwrreserve((localPwrreserve));
        if ( h.containsKey("date_assemb_afs") )
            setDate_assemb_afs((localDate_assemb_afs));
        if ( h.containsKey("created") )
            setCreated((localCreated));
        if ( h.containsKey("bandwidth") )
            setBandwidth((localBandwidth));
        if ( h.containsKey("modifiedby") )
            setModifiedby((localModifiedby));
        if ( h.containsKey("numchanals") )
            setNumchanals((localNumchanals));
        if ( h.containsKey("datepr") )
            setDatepr((localDatepr));
        if ( h.containsKey("donor_type") )
            setDonor_type((localDonor_type));
        if ( h.containsKey("operator") )
            setOperator((localOperator));
        if ( h.containsKey("datetest") )
            setDatetest((localDatetest));
        if ( h.containsKey("equipcomment") )
            setEquipcomment((localEquipcomment));
        if ( h.containsKey("pwrrescat") )
            setPwrrescat((localPwrrescat));
        if ( h.containsKey("pwrcat") )
            setPwrcat((localPwrcat));
        if ( h.containsKey("modified") )
            setModified((localModified));
        if ( h.containsKey("equipmentState") )
            setEquipmentState((localEquipmentState));
        if ( h.containsKey("date_connect") )
            setDate_connect((localDate_connect));
        if ( h.containsKey("name") )
            setName((localName));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = super._getLinks();
	links.addElement(getDonor_sectLink());
	links.addElement(getDonor_antLink());
	links.addElement(getResourceLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	super._initLinks();
	donor_sectLink = null;
	donor_antLink = null;
	resourceLink = null;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argStorageplace int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(
		int argStorageplace, Integer argDivision, String argName, 
		String argAddress, Integer argPosition,
		
		Integer argDonor_sect, String argDonor_type, String argRepiter_class, 
		Integer argResource, java.math.BigDecimal argReppower
	) throws javax.ejb.CreateException, java.rmi.RemoteException {
		
	super.ejbCreate( argStorageplace, argDivision, argName, argAddress, argPosition );
	_initLinks();
	
	// All CMP fields should be initialized here.
	donor_sect_idsect = argDonor_sect;
	donor_type = argDonor_type;
	repiter_class = argRepiter_class;
	resource_resource = argResource;
	reppower = argReppower;
	donor_ant_idanten = null;
	bandwidth = null;
	numchanals = null;
	number = 0;
	date_assemb_afs = null;
	date_connect = null;
	date_onair = null;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argStorageplace int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(
		int argStorageplace, Integer argDivision, String argName, 
		String argAddress, Integer argPosition,
		
		Integer argDonor_sect, String argDonor_type, String argRepiter_class, 
		Integer argResource, java.math.BigDecimal argReppower, int argNumber
	) throws javax.ejb.CreateException, java.rmi.RemoteException {
		
	super.ejbCreate( argStorageplace, argDivision, argName, argAddress, argPosition );
	_initLinks();
	
	// All CMP fields should be initialized here.
	donor_sect_idsect = argDonor_sect;
	donor_type = argDonor_type;
	repiter_class = argRepiter_class;
	resource_resource = argResource;
	reppower = argReppower;
	donor_ant_idanten = null;
	bandwidth = null;
	numchanals = null;
	number = argNumber;
	date_assemb_afs = null;
	date_connect = null;
	date_onair = null;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argStorageplace int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(
		int argStorageplace, Integer argDivision, String argName, 
		String argAddress, Integer argPosition,
		
		Integer argDonor_sect, String argDonor_type, String argRepiter_class, 
		java.math.BigDecimal argReppower, int argNumber
	) throws javax.ejb.CreateException, java.rmi.RemoteException {
		
	super.ejbCreate( argStorageplace, argDivision, argName, argAddress, argPosition );
	_initLinks();
	
	// All CMP fields should be initialized here.
	donor_sect_idsect = argDonor_sect;
	donor_type = argDonor_type;
	repiter_class = argRepiter_class;
	resource_resource = null;
	reppower = argReppower;
	donor_ant_idanten = null;
	bandwidth = null;
	numchanals = null;
	number = argNumber;
	date_assemb_afs = null;
	date_connect = null;
	date_onair = null;
}
/**
 * Getter method for bandwidth
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getBandwidth() {
	return bandwidth;
}
/**
 * Getter method for date_assemb_afs
 */
public java.sql.Date getDate_assemb_afs() {
	return date_assemb_afs;
}
/**
 * Getter method for date_connect
 */
public java.sql.Date getDate_connect() {
	return date_connect;
}
/**
 * Getter method for date_onair
 */
public java.sql.Date getDate_onair() {
	return date_onair;
}
/**
 * This method was generated for supporting the association named Repiter2Antenna.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Antenna getDonor_ant() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Antenna)this.getDonor_antLink().value();
}
/**
 * This method was generated for supporting the association named Repiter2Antenna.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.AntennaKey getDonor_antKey() {
	com.hps.july.persistence.AntennaKey temp = null;
	temp = new com.hps.july.persistence.AntennaKey();
	boolean donor_ant_NULLTEST = true;
	donor_ant_NULLTEST &= (donor_ant_idanten == null);
	temp.idanten = ((donor_ant_idanten == null) ? 0 : donor_ant_idanten.intValue());
	if (donor_ant_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named Repiter2Antenna.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getDonor_antLink() {
	if (donor_antLink == null)
		donor_antLink = new RepiterToDonor_antLink(this);
	return donor_antLink;
}
/**
 * This method was generated for supporting the association named Repiter2Sector.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Sector getDonor_sect() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Sector)this.getDonor_sectLink().value();
}
/**
 * This method was generated for supporting the association named Repiter2Sector.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.SectorKey getDonor_sectKey() {
	com.hps.july.persistence.SectorKey temp = null;
	temp = new com.hps.july.persistence.SectorKey();
	boolean donor_sect_NULLTEST = true;
	donor_sect_NULLTEST &= (donor_sect_idsect == null);
	temp.idsect = ((donor_sect_idsect == null) ? 0 : donor_sect_idsect.intValue());
	if (donor_sect_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named Repiter2Sector.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getDonor_sectLink() {
	if (donor_sectLink == null)
		donor_sectLink = new RepiterToDonor_sectLink(this);
	return donor_sectLink;
}
/**
 * Getter method for donor_type
 * @return java.lang.String
 */
public java.lang.String getDonor_type() {
	return donor_type;
}
/**
 * Getter method for number
 */
public int getNumber() {
	return number;
}
/**
 * Getter method for numchanals
 * @return java.lang.Integer
 */
public java.lang.Integer getNumchanals() {
	return numchanals;
}
/**
 * Getter method for repiter_class
 * @return java.lang.String
 */
public java.lang.String getRepiter_class() {
	return repiter_class;
}
/**
 * Getter method for reppower
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getReppower() {
	return reppower;
}
/**
 * This method was generated for supporting the association named Repiter2RepiterRes.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.RepiterRes getResource() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.RepiterRes)this.getResourceLink().value();
}
/**
 * This method was generated for supporting the association named Repiter2RepiterRes.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ResourceKey getResourceKey() {
	com.hps.july.persistence.ResourceKey temp = null;
	temp = new com.hps.july.persistence.ResourceKey();
	boolean resource_NULLTEST = true;
	resource_NULLTEST &= (resource_resource == null);
	temp.resource = ((resource_resource == null) ? 0 : resource_resource.intValue());
	if (resource_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named Repiter2RepiterRes.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getResourceLink() {
	if (resourceLink == null)
		resourceLink = new RepiterToResourceLink(this);
	return resourceLink;
}
/**
 * This method was generated for supporting the association named Repiter2Antenna.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetDonor_antKey(com.hps.july.persistence.AntennaKey inKey) {
	boolean donor_ant_NULLTEST = (inKey == null);
	if (donor_ant_NULLTEST) donor_ant_idanten = null; else donor_ant_idanten = (new Integer(inKey.idanten));
}
/**
 * This method was generated for supporting the association named Repiter2Sector.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetDonor_sectKey(com.hps.july.persistence.SectorKey inKey) {
	boolean donor_sect_NULLTEST = (inKey == null);
	if (donor_sect_NULLTEST) donor_sect_idsect = null; else donor_sect_idsect = (new Integer(inKey.idsect));
}
/**
 * This method was generated for supporting the association named Repiter2RepiterRes.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetResourceKey(com.hps.july.persistence.ResourceKey inKey) {
	boolean resource_NULLTEST = (inKey == null);
	if (resource_NULLTEST) resource_resource = null; else resource_resource = (new Integer(inKey.resource));
}
/**
 * This method was generated for supporting the association named Repiter2Antenna.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetDonor_ant(com.hps.july.persistence.Antenna aDonor_ant) throws java.rmi.RemoteException {
	this.getDonor_antLink().secondarySet(aDonor_ant);
}
/**
 * This method was generated for supporting the association named Repiter2Sector.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetDonor_sect(com.hps.july.persistence.Sector aDonor_sect) throws java.rmi.RemoteException {
	this.getDonor_sectLink().secondarySet(aDonor_sect);
}
/**
 * This method was generated for supporting the association named Repiter2RepiterRes.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetResource(com.hps.july.persistence.RepiterRes aResource) throws java.rmi.RemoteException {
	this.getResourceLink().secondarySet(aResource);
}
/**
 * Setter method for bandwidth
 * @param newValue java.math.BigDecimal
 */
public void setBandwidth(java.math.BigDecimal newValue) {
	this.bandwidth = newValue;
}
/**
 * Setter method for date_assemb_afs
 */
public void setDate_assemb_afs(java.sql.Date newValue) {
	this.date_assemb_afs = newValue;
}
/**
 * Setter method for date_connect
 */
public void setDate_connect(java.sql.Date newValue) {
	this.date_connect = newValue;
}
/**
 * Setter method for date_onair
 */
public void setDate_onair(java.sql.Date newValue) {
	this.date_onair = newValue;
}
/**
 * This method was generated for supporting the association named Repiter2Antenna.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setDonor_ant(com.hps.july.persistence.Antenna aDonor_ant) throws java.rmi.RemoteException {
	this.getDonor_antLink().set(aDonor_ant);
}
/**
 * This method was generated for supporting the association named Repiter2Sector.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setDonor_sect(com.hps.july.persistence.Sector aDonor_sect) throws java.rmi.RemoteException {
	this.getDonor_sectLink().set(aDonor_sect);
}
/**
 * Setter method for donor_type
 * @param newValue java.lang.String
 */
public void setDonor_type(java.lang.String newValue) {
	this.donor_type = newValue;
}
/**
 * Setter method for number
 */
public void setNumber(int newValue) {
	this.number = newValue;
}
/**
 * Setter method for numchanals
 * @param newValue java.lang.Integer
 */
public void setNumchanals(java.lang.Integer newValue) {
	this.numchanals = newValue;
}
/**
 * Setter method for repiter_class
 * @param newValue java.lang.String
 */
public void setRepiter_class(java.lang.String newValue) {
	this.repiter_class = newValue;
}
/**
 * Setter method for reppower
 * @param newValue java.math.BigDecimal
 */
public void setReppower(java.math.BigDecimal newValue) {
	this.reppower = newValue;
}
/**
 * This method was generated for supporting the association named Repiter2RepiterRes.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setResource(com.hps.july.persistence.RepiterRes aResource) throws java.rmi.RemoteException {
	this.getResourceLink().set(aResource);
}
}
