package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Данные PIE - статьи затрат из Platinum
 */
public class PIEExpenceBean implements EntityBean {
	private javax.ejb.EntityContext entityContext = null;
	public String idexpence;
	public int idexpencenri;
	public String idgrpexpence;
	public String iditem;
	public String nameexpence;
	public String namegrpexpence;
	public String nameitem;
	public int owner;
	public String recordstatus;
	private final static long serialVersionUID = 3206093459760846163L;

/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("nameexpence", getNameexpence());
        h.put("idgrpexpence", getIdgrpexpence());
        h.put("owner", new Integer(getOwner()));
        h.put("idexpencenri", new Integer(getIdexpencenri()));
        h.put("nameitem", getNameitem());
        h.put("recordstatus", getRecordstatus());
        h.put("idexpence", getIdexpence());
        h.put("iditem", getIditem());
        h.put("namegrpexpence", getNamegrpexpence());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localNameexpence = (java.lang.String) h.get("nameexpence");
        java.lang.String localIdgrpexpence = (java.lang.String) h.get("idgrpexpence");
        Integer localOwner = (Integer) h.get("owner");
        java.lang.String localNameitem = (java.lang.String) h.get("nameitem");
        java.lang.String localRecordstatus = (java.lang.String) h.get("recordstatus");
        java.lang.String localIdexpence = (java.lang.String) h.get("idexpence");
        java.lang.String localIditem = (java.lang.String) h.get("iditem");
        java.lang.String localNamegrpexpence = (java.lang.String) h.get("namegrpexpence");

        if ( h.containsKey("nameexpence") )
            setNameexpence((localNameexpence));
        if ( h.containsKey("idgrpexpence") )
            setIdgrpexpence((localIdgrpexpence));
        if ( h.containsKey("owner") )
            setOwner((localOwner).intValue());
        if ( h.containsKey("nameitem") )
            setNameitem((localNameitem));
        if ( h.containsKey("recordstatus") )
            setRecordstatus((localRecordstatus));
        if ( h.containsKey("idexpence") )
            setIdexpence((localIdexpence));
        if ( h.containsKey("iditem") )
            setIditem((localIditem));
        if ( h.containsKey("namegrpexpence") )
            setNamegrpexpence((localNamegrpexpence));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argIdexpencenri int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argIdexpencenri, int argOwner, 
		String argIdItem, String argNameItem, String argRecordStatus) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	idexpencenri = argIdexpencenri;
	owner = argOwner;
	iditem = argIdItem;
	nameitem = argNameItem;
	recordstatus = argRecordStatus;
	idexpence = null;
	nameexpence = null;
	idgrpexpence = null;
	namegrpexpence = null;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argIdexpencenri int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argIdexpencenri) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for idexpence
 * @return java.lang.String
 */
public java.lang.String getIdexpence() {
	return idexpence;
}
/**
 * Insert the method's description here.
 * Creation date: (31.03.2003 16:39:27)
 * @return int
 */
public int getIdexpencenri() {
	return idexpencenri;
}
/**
 * Getter method for idgrpexpence
 * @return java.lang.String
 */
public java.lang.String getIdgrpexpence() {
	return idgrpexpence;
}
/**
 * Getter method for iditem
 * @return java.lang.String
 */
public java.lang.String getIditem() {
	return iditem;
}
/**
 * Getter method for nameexpence
 * @return java.lang.String
 */
public java.lang.String getNameexpence() {
	return nameexpence;
}
/**
 * Getter method for namegrpexpence
 * @return java.lang.String
 */
public java.lang.String getNamegrpexpence() {
	return namegrpexpence;
}
/**
 * Getter method for nameitem
 * @return java.lang.String
 */
public java.lang.String getNameitem() {
	return nameitem;
}
/**
 * Getter method for owner
 * @return int
 */
public int getOwner() {
	return owner;
}
/**
 * Getter method for recordstatus
 * @return java.lang.String
 */
public java.lang.String getRecordstatus() {
	return recordstatus;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for idexpence
 * @param newValue java.lang.String
 */
public void setIdexpence(java.lang.String newValue) {
	this.idexpence = newValue;
}
/**
 * Setter method for idgrpexpence
 * @param newValue java.lang.String
 */
public void setIdgrpexpence(java.lang.String newValue) {
	this.idgrpexpence = newValue;
}
/**
 * Setter method for iditem
 * @param newValue java.lang.String
 */
public void setIditem(java.lang.String newValue) {
	this.iditem = newValue;
}
/**
 * Setter method for nameexpence
 * @param newValue java.lang.String
 */
public void setNameexpence(java.lang.String newValue) {
	this.nameexpence = newValue;
}
/**
 * Setter method for namegrpexpence
 * @param newValue java.lang.String
 */
public void setNamegrpexpence(java.lang.String newValue) {
	this.namegrpexpence = newValue;
}
/**
 * Setter method for nameitem
 * @param newValue java.lang.String
 */
public void setNameitem(java.lang.String newValue) {
	this.nameitem = newValue;
}
/**
 * Setter method for owner
 * @param newValue int
 */
public void setOwner(int newValue) {
	this.owner = newValue;
}
/**
 * Setter method for recordstatus
 * @param newValue java.lang.String
 */
public void setRecordstatus(java.lang.String newValue) {
	this.recordstatus = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
