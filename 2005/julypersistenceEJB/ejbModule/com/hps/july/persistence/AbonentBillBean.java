package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Абонентский счет
 */
public class AbonentBillBean implements EntityBean {
	public java.sql.Date billdate;
	public String billnumber;
	public java.sql.Date billperiodend;
	public java.sql.Date billperiodstart;
	public String billstatus;
	public String billtype;
	private javax.ejb.EntityContext entityContext = null;
	public int leasebill;
	private final static long serialVersionUID = 3206093459760846163L;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink abonentBillPosesLink = null;
	public Short ben;
	public Boolean useinnri;
	public String bensource;
	public boolean flagworknri;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseAbonentDNOPsLink = null;
	public java.lang.Integer leaseabonentban_leaseDocument;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink leaseabonentbanLink = null;
	public String changeuseinnri;
	public String recordstatus;
	public java.math.BigDecimal summopl;
	public String notessummopl;
	public String sumchangereason;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("leasebill", new Integer(getLeasebill()));
        h.put("sumchangereason", getSumchangereason());
        h.put("billperiodend", getBillperiodend());
        h.put("changeuseinnri", getChangeuseinnri());
        h.put("billdate", getBilldate());
        h.put("leaseabonentbanKey", getLeaseabonentbanKey());
        h.put("notessummopl", getNotessummopl());
        h.put("billstatus", getBillstatus());
        h.put("ben", getBen());
        h.put("recordstatus", getRecordstatus());
        h.put("bensource", getBensource());
        h.put("flagworknri", new Boolean(getFlagworknri()));
        h.put("useinnri", getUseinnri());
        h.put("billtype", getBilltype());
        h.put("billperiodstart", getBillperiodstart());
        h.put("summopl", getSummopl());
        h.put("billnumber", getBillnumber());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localSumchangereason = (java.lang.String) h.get("sumchangereason");
        java.sql.Date localBillperiodend = (java.sql.Date) h.get("billperiodend");
        java.lang.String localChangeuseinnri = (java.lang.String) h.get("changeuseinnri");
        java.sql.Date localBilldate = (java.sql.Date) h.get("billdate");
        java.lang.String localNotessummopl = (java.lang.String) h.get("notessummopl");
        java.lang.String localBillstatus = (java.lang.String) h.get("billstatus");
        java.lang.Short localBen = (java.lang.Short) h.get("ben");
        java.lang.String localRecordstatus = (java.lang.String) h.get("recordstatus");
        java.lang.String localBensource = (java.lang.String) h.get("bensource");
        Boolean localFlagworknri = (Boolean) h.get("flagworknri");
        java.lang.Boolean localUseinnri = (java.lang.Boolean) h.get("useinnri");
        java.lang.String localBilltype = (java.lang.String) h.get("billtype");
        java.sql.Date localBillperiodstart = (java.sql.Date) h.get("billperiodstart");
        java.math.BigDecimal localSummopl = (java.math.BigDecimal) h.get("summopl");
        java.lang.String localBillnumber = (java.lang.String) h.get("billnumber");

        if ( h.containsKey("sumchangereason") )
            setSumchangereason((localSumchangereason));
        if ( h.containsKey("billperiodend") )
            setBillperiodend((localBillperiodend));
        if ( h.containsKey("changeuseinnri") )
            setChangeuseinnri((localChangeuseinnri));
        if ( h.containsKey("billdate") )
            setBilldate((localBilldate));
        if ( h.containsKey("notessummopl") )
            setNotessummopl((localNotessummopl));
        if ( h.containsKey("billstatus") )
            setBillstatus((localBillstatus));
        if ( h.containsKey("ben") )
            setBen((localBen));
        if ( h.containsKey("recordstatus") )
            setRecordstatus((localRecordstatus));
        if ( h.containsKey("bensource") )
            setBensource((localBensource));
        if ( h.containsKey("flagworknri") )
            setFlagworknri((localFlagworknri).booleanValue());
        if ( h.containsKey("useinnri") )
            setUseinnri((localUseinnri));
        if ( h.containsKey("billtype") )
            setBilltype((localBilltype));
        if ( h.containsKey("billperiodstart") )
            setBillperiodstart((localBillperiodstart));
        if ( h.containsKey("summopl") )
            setSummopl((localSummopl));
        if ( h.containsKey("billnumber") )
            setBillnumber((localBillnumber));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getAbonentBillPosesLink());
	links.addElement(getLeaseAbonentDNOPsLink());
	links.addElement(getLeaseabonentbanLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	abonentBillPosesLink = null;
	leaseAbonentDNOPsLink = null;
	leaseabonentbanLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * This method was generated for supporting the association named AbonentBillPos2bill.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addAbonentBillPoses(com.hps.july.persistence.AbonentBillPos anAbonentBillPoses) throws java.rmi.RemoteException {
	this.getAbonentBillPosesLink().addElement(anAbonentBillPoses);
}
/**
 * This method was generated for supporting the association named LeaseAbonentDNOP2bill.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addLeaseAbonentDNOPs(com.hps.july.persistence.LeaseAbonentDNOP aLeaseAbonentDNOPs) throws java.rmi.RemoteException {
	this.getLeaseAbonentDNOPsLink().addElement(aLeaseAbonentDNOPs);
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argLeasebill int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argLeasebill) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	leasebill = argLeasebill;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argLeasebill int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argLeaseBill, int argLeaseDocument, String argBenSource, boolean argFlagWorkNRI) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	leasebill = argLeaseBill;
	leaseabonentban_leaseDocument = new Integer(argLeaseDocument);
	bensource = argBenSource;
	flagworknri = argFlagWorkNRI;
	billdate = null;
	billnumber = null;
	billperiodend = null;
	billperiodstart = null;
	billstatus = null;
	billtype = null;
	ben = null;
	useinnri = Boolean.FALSE;
	changeuseinnri = null;
	recordstatus = "A";
	sumchangereason = null;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argLeasebill int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argLeaseBill, int argLeaseDocument, String argBenSource, 
		boolean argFlagWorkNRI, String argRecordStatus) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	leasebill = argLeaseBill;
	leaseabonentban_leaseDocument = new Integer(argLeaseDocument);
	bensource = argBenSource;
	flagworknri = argFlagWorkNRI;
	billdate = null;
	billnumber = null;
	billperiodend = null;
	billperiodstart = null;
	billstatus = null;
	billtype = null;
	ben = null;
	useinnri = Boolean.FALSE;
	changeuseinnri = null;
	recordstatus = argRecordStatus;
	summopl = null;
	notessummopl = null;
	sumchangereason = null;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argLeasebill int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argLeasebill) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * This method was generated for supporting the association named AbonentBillPos2bill.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getAbonentBillPoses() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getAbonentBillPosesLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named AbonentBillPos2bill.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getAbonentBillPosesLink() {
	if (abonentBillPosesLink == null)
		abonentBillPosesLink = new AbonentBillToAbonentBillPosesLink(this);
	return abonentBillPosesLink;
}
/**
 * Getter method for ben
 */
public java.lang.Short getBen() {
	return ben;
}
/**
 * Getter method for bensource
 */
public java.lang.String getBensource() {
	return bensource;
}
/**
 * Getter method for billdate
 * @return java.sql.Date
 */
public java.sql.Date getBilldate() {
	return billdate;
}
/**
 * Getter method for billnumber
 * @return java.lang.String
 */
public java.lang.String getBillnumber() {
	return billnumber;
}
/**
 * Getter method for billperiodend
 * @return java.sql.Date
 */
public java.sql.Date getBillperiodend() {
	return billperiodend;
}
/**
 * Getter method for billperiodstart
 * @return java.sql.Date
 */
public java.sql.Date getBillperiodstart() {
	return billperiodstart;
}
/**
 * Getter method for billstatus
 * @return java.lang.String
 */
public java.lang.String getBillstatus() {
	return billstatus;
}
/**
 * Getter method for billtype
 * @return java.lang.String
 */
public java.lang.String getBilltype() {
	return billtype;
}
/**
 * Getter method for changeuseinnri
 */
public java.lang.String getChangeuseinnri() {
	return changeuseinnri;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for flagworknri
 */
public boolean getFlagworknri() {
	return flagworknri;
}
/**
 * This method was generated for supporting the association named AbonentBill2ban.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseAbonentBAN getLeaseabonentban() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.LeaseAbonentBAN)this.getLeaseabonentbanLink().value();
}
/**
 * This method was generated for supporting the association named AbonentBill2ban.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseDocumentKey getLeaseabonentbanKey() {
	com.hps.july.persistence.LeaseDocumentKey temp = null;
	temp = new com.hps.july.persistence.LeaseDocumentKey();
	boolean leaseabonentban_NULLTEST = true;
	leaseabonentban_NULLTEST &= (leaseabonentban_leaseDocument == null);
	temp.leaseDocument = ((leaseabonentban_leaseDocument == null) ? 0 : leaseabonentban_leaseDocument.intValue());
	if (leaseabonentban_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named AbonentBill2ban.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getLeaseabonentbanLink() {
	if (leaseabonentbanLink == null)
		leaseabonentbanLink = new AbonentBillToLeaseabonentbanLink(this);
	return leaseabonentbanLink;
}
/**
 * This method was generated for supporting the association named LeaseAbonentDNOP2bill.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseAbonentDNOPs() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseAbonentDNOPsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseAbonentDNOP2bill.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseAbonentDNOPsLink() {
	if (leaseAbonentDNOPsLink == null)
		leaseAbonentDNOPsLink = new AbonentBillToLeaseAbonentDNOPsLink(this);
	return leaseAbonentDNOPsLink;
}
/**
 * Insert the method's description here.
 * Creation date: (26.09.2002 15:46:15)
 * @return int
 */
public int getLeasebill() {
	return leasebill;
}
/**
 * Getter method for notessummopl
 */
public java.lang.String getNotessummopl() {
	return notessummopl;
}
/**
 * Getter method for recordstatus
 */
public java.lang.String getRecordstatus() {
	return recordstatus;
}
/**
 * Getter method for sumchangereason
 */
public java.lang.String getSumchangereason() {
	return sumchangereason;
}
/**
 * Getter method for summopl
 */
public java.math.BigDecimal getSummopl() {
	return summopl;
}
/**
 * Getter method for useinnri
 */
public java.lang.Boolean getUseinnri() {
	return useinnri;
}
/**
 * This method was generated for supporting the association named AbonentBill2ban.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetLeaseabonentbanKey(com.hps.july.persistence.LeaseDocumentKey inKey) {
	boolean leaseabonentban_NULLTEST = (inKey == null);
	if (leaseabonentban_NULLTEST) leaseabonentban_leaseDocument = null; else leaseabonentban_leaseDocument = (new Integer(inKey.leaseDocument));
}
/**
 * This method was generated for supporting the association named AbonentBillPos2bill.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddAbonentBillPoses(com.hps.july.persistence.AbonentBillPos anAbonentBillPoses) {
	this.getAbonentBillPosesLink().secondaryAddElement(anAbonentBillPoses);
}
/**
 * This method was generated for supporting the association named LeaseAbonentDNOP2bill.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseAbonentDNOPs(com.hps.july.persistence.LeaseAbonentDNOP aLeaseAbonentDNOPs) {
	this.getLeaseAbonentDNOPsLink().secondaryAddElement(aLeaseAbonentDNOPs);
}
/**
 * This method was generated for supporting the association named AbonentBillPos2bill.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveAbonentBillPoses(com.hps.july.persistence.AbonentBillPos anAbonentBillPoses) {
	this.getAbonentBillPosesLink().secondaryRemoveElement(anAbonentBillPoses);
}
/**
 * This method was generated for supporting the association named LeaseAbonentDNOP2bill.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseAbonentDNOPs(com.hps.july.persistence.LeaseAbonentDNOP aLeaseAbonentDNOPs) {
	this.getLeaseAbonentDNOPsLink().secondaryRemoveElement(aLeaseAbonentDNOPs);
}
/**
 * This method was generated for supporting the association named AbonentBill2ban.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetLeaseabonentban(com.hps.july.persistence.LeaseAbonentBAN aLeaseabonentban) throws java.rmi.RemoteException {
	this.getLeaseabonentbanLink().secondarySet(aLeaseabonentban);
}
/**
 * Setter method for ben
 */
public void setBen(java.lang.Short newValue) {
	this.ben = newValue;
}
/**
 * Setter method for bensource
 */
public void setBensource(java.lang.String newValue) {
	this.bensource = newValue;
}
/**
 * Setter method for billdate
 * @param newValue java.sql.Date
 */
public void setBilldate(java.sql.Date newValue) {
	this.billdate = newValue;
}
/**
 * Setter method for billnumber
 * @param newValue java.lang.String
 */
public void setBillnumber(java.lang.String newValue) {
	this.billnumber = newValue;
}
/**
 * Setter method for billperiodend
 * @param newValue java.sql.Date
 */
public void setBillperiodend(java.sql.Date newValue) {
	this.billperiodend = newValue;
}
/**
 * Setter method for billperiodstart
 * @param newValue java.sql.Date
 */
public void setBillperiodstart(java.sql.Date newValue) {
	this.billperiodstart = newValue;
}
/**
 * Setter method for billstatus
 * @param newValue java.lang.String
 */
public void setBillstatus(java.lang.String newValue) {
	this.billstatus = newValue;
}
/**
 * Setter method for billtype
 * @param newValue java.lang.String
 */
public void setBilltype(java.lang.String newValue) {
	this.billtype = newValue;
}
/**
 * Setter method for changeuseinnri
 */
public void setChangeuseinnri(java.lang.String newValue) {
	this.changeuseinnri = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for flagworknri
 */
public void setFlagworknri(boolean newValue) {
	this.flagworknri = newValue;
}
/**
 * This method was generated for supporting the association named AbonentBill2ban.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setLeaseabonentban(com.hps.july.persistence.LeaseAbonentBAN aLeaseabonentban) throws java.rmi.RemoteException {
	this.getLeaseabonentbanLink().set(aLeaseabonentban);
}
/**
 * Setter method for notessummopl
 */
public void setNotessummopl(java.lang.String newValue) {
	this.notessummopl = newValue;
}
/**
 * Setter method for recordstatus
 */
public void setRecordstatus(java.lang.String newValue) {
	this.recordstatus = newValue;
}
/**
 * Setter method for sumchangereason
 */
public void setSumchangereason(java.lang.String newValue) {
	this.sumchangereason = newValue;
}
/**
 * Setter method for summopl
 */
public void setSummopl(java.math.BigDecimal newValue) {
	this.summopl = newValue;
}
/**
 * Setter method for useinnri
 */
public void setUseinnri(java.lang.Boolean newValue) {
	this.useinnri = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
