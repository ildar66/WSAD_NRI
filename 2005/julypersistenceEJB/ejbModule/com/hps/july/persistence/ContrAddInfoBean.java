package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Доп. информация по контроллеру
 */
public class ContrAddInfoBean implements EntityBean {
	public Integer acc_load;
	public java.sql.Date act_date;
	public java.math.BigDecimal bad_cunsr_percent;
	public java.math.BigDecimal bad_cunssr_percent;
	public java.math.BigDecimal cap_use_percent;
	public Integer conn_lost_avg;
	private javax.ejb.EntityContext entityContext = null;
	public java.math.BigDecimal koef_kk;
	public java.math.BigDecimal load_aint_percent;
	public String load_max_day;
	public String load_max_hour;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.math.BigDecimal ss7_load_avg;
	public Integer traf_aint;
	public java.lang.Integer controller_storageplace;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink controllerLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink contrParamsLink = null;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("koef_kk", getKoef_kk());
        h.put("bad_cunssr_percent", getBad_cunssr_percent());
        h.put("acc_load", getAcc_load());
        h.put("traf_aint", getTraf_aint());
        h.put("controllerKey", getControllerKey());
        h.put("load_max_hour", getLoad_max_hour());
        h.put("act_date", getAct_date());
        h.put("load_aint_percent", getLoad_aint_percent());
        h.put("bad_cunsr_percent", getBad_cunsr_percent());
        h.put("conn_lost_avg", getConn_lost_avg());
        h.put("ss7_load_avg", getSs7_load_avg());
        h.put("load_max_day", getLoad_max_day());
        h.put("cap_use_percent", getCap_use_percent());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.math.BigDecimal localKoef_kk = (java.math.BigDecimal) h.get("koef_kk");
        java.math.BigDecimal localBad_cunssr_percent = (java.math.BigDecimal) h.get("bad_cunssr_percent");
        java.lang.Integer localAcc_load = (java.lang.Integer) h.get("acc_load");
        java.lang.Integer localTraf_aint = (java.lang.Integer) h.get("traf_aint");
        java.lang.String localLoad_max_hour = (java.lang.String) h.get("load_max_hour");
        java.math.BigDecimal localLoad_aint_percent = (java.math.BigDecimal) h.get("load_aint_percent");
        java.math.BigDecimal localBad_cunsr_percent = (java.math.BigDecimal) h.get("bad_cunsr_percent");
        java.lang.Integer localConn_lost_avg = (java.lang.Integer) h.get("conn_lost_avg");
        java.math.BigDecimal localSs7_load_avg = (java.math.BigDecimal) h.get("ss7_load_avg");
        java.lang.String localLoad_max_day = (java.lang.String) h.get("load_max_day");
        java.math.BigDecimal localCap_use_percent = (java.math.BigDecimal) h.get("cap_use_percent");

        if ( h.containsKey("koef_kk") )
            setKoef_kk((localKoef_kk));
        if ( h.containsKey("bad_cunssr_percent") )
            setBad_cunssr_percent((localBad_cunssr_percent));
        if ( h.containsKey("acc_load") )
            setAcc_load((localAcc_load));
        if ( h.containsKey("traf_aint") )
            setTraf_aint((localTraf_aint));
        if ( h.containsKey("load_max_hour") )
            setLoad_max_hour((localLoad_max_hour));
        if ( h.containsKey("load_aint_percent") )
            setLoad_aint_percent((localLoad_aint_percent));
        if ( h.containsKey("bad_cunsr_percent") )
            setBad_cunsr_percent((localBad_cunsr_percent));
        if ( h.containsKey("conn_lost_avg") )
            setConn_lost_avg((localConn_lost_avg));
        if ( h.containsKey("ss7_load_avg") )
            setSs7_load_avg((localSs7_load_avg));
        if ( h.containsKey("load_max_day") )
            setLoad_max_day((localLoad_max_day));
        if ( h.containsKey("cap_use_percent") )
            setCap_use_percent((localCap_use_percent));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getControllerLink());
	links.addElement(getContrParamsLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	controllerLink = null;
	contrParamsLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * This method was generated for supporting the association named ContrParams2contradd.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addContrParams(com.hps.july.persistence.ContrParams aContrParams) throws java.rmi.RemoteException {
	this.getContrParamsLink().addElement(aContrParams);
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argAct_date java.sql.Date
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(Integer argEquipment, java.sql.Date argAct_date) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	act_date = argAct_date;
	controller_storageplace = argEquipment;

	load_max_day = null;
	load_max_hour = null;
	koef_kk = null;
	traf_aint = null;
	load_aint_percent = null;
	ss7_load_avg = null;
	acc_load = null;
	cap_use_percent = null;
	bad_cunsr_percent = null;
	bad_cunssr_percent = null;
	conn_lost_avg = null;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argAct_date java.sql.Date
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(java.sql.Date argAct_date) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for acc_load
 * @return java.lang.Integer
 */
public java.lang.Integer getAcc_load() {
	return acc_load;
}
/**
 * Insert the method's description here.
 * Creation date: (06.08.2003 16:55:15)
 * @return java.sql.Date
 */
public java.sql.Date getAct_date() {
	return act_date;
}
/**
 * Getter method for bad_cunsr_percent
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getBad_cunsr_percent() {
	return bad_cunsr_percent;
}
/**
 * Getter method for bad_cunssr_percent
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getBad_cunssr_percent() {
	return bad_cunssr_percent;
}
/**
 * Getter method for cap_use_percent
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getCap_use_percent() {
	return cap_use_percent;
}
/**
 * Getter method for conn_lost_avg
 * @return java.lang.Integer
 */
public java.lang.Integer getConn_lost_avg() {
	return conn_lost_avg;
}
/**
 * This method was generated for supporting the association named ContrAddInfo2controllers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Controller getController() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Controller)this.getControllerLink().value();
}
/**
 * This method was generated for supporting the association named ContrAddInfo2controllers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.StoragePlaceKey getControllerKey() {
	com.hps.july.persistence.StoragePlaceKey temp = null;
	temp = new com.hps.july.persistence.StoragePlaceKey();
	boolean controller_NULLTEST = true;
	controller_NULLTEST &= (controller_storageplace == null);
	temp.storageplace = ((controller_storageplace == null) ? 0 : controller_storageplace.intValue());
	if (controller_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named ContrAddInfo2controllers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getControllerLink() {
	if (controllerLink == null)
		controllerLink = new ContrAddInfoToControllerLink(this);
	return controllerLink;
}
/**
 * This method was generated for supporting the association named ContrParams2contradd.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getContrParams() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getContrParamsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named ContrParams2contradd.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getContrParamsLink() {
	if (contrParamsLink == null)
		contrParamsLink = new ContrAddInfoToContrParamsLink(this);
	return contrParamsLink;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for koef_kk
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getKoef_kk() {
	return koef_kk;
}
/**
 * Getter method for load_aint_percent
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getLoad_aint_percent() {
	return load_aint_percent;
}
/**
 * Getter method for load_max_day
 * @return java.lang.String
 */
public java.lang.String getLoad_max_day() {
	return load_max_day;
}
/**
 * Getter method for load_max_hour
 * @return java.lang.String
 */
public java.lang.String getLoad_max_hour() {
	return load_max_hour;
}
/**
 * Getter method for ss7_load_avg
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getSs7_load_avg() {
	return ss7_load_avg;
}
/**
 * Getter method for traf_aint
 * @return java.lang.Integer
 */
public java.lang.Integer getTraf_aint() {
	return traf_aint;
}
/**
 * This method was generated for supporting the association named ContrAddInfo2controllers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetControllerKey(com.hps.july.persistence.StoragePlaceKey inKey) {
	boolean controller_NULLTEST = (inKey == null);
	if (controller_NULLTEST) controller_storageplace = null; else controller_storageplace = (new Integer(inKey.storageplace));
}
/**
 * This method was generated for supporting the association named ContrParams2contradd.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddContrParams(com.hps.july.persistence.ContrParams aContrParams) {
	this.getContrParamsLink().secondaryAddElement(aContrParams);
}
/**
 * This method was generated for supporting the association named ContrParams2contradd.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveContrParams(com.hps.july.persistence.ContrParams aContrParams) {
	this.getContrParamsLink().secondaryRemoveElement(aContrParams);
}
/**
 * Setter method for acc_load
 * @param newValue java.lang.Integer
 */
public void setAcc_load(java.lang.Integer newValue) {
	this.acc_load = newValue;
}
/**
 * Setter method for bad_cunsr_percent
 * @param newValue java.math.BigDecimal
 */
public void setBad_cunsr_percent(java.math.BigDecimal newValue) {
	this.bad_cunsr_percent = newValue;
}
/**
 * Setter method for bad_cunssr_percent
 * @param newValue java.math.BigDecimal
 */
public void setBad_cunssr_percent(java.math.BigDecimal newValue) {
	this.bad_cunssr_percent = newValue;
}
/**
 * Setter method for cap_use_percent
 * @param newValue java.math.BigDecimal
 */
public void setCap_use_percent(java.math.BigDecimal newValue) {
	this.cap_use_percent = newValue;
}
/**
 * Setter method for conn_lost_avg
 * @param newValue java.lang.Integer
 */
public void setConn_lost_avg(java.lang.Integer newValue) {
	this.conn_lost_avg = newValue;
}
/**
 * This method was generated for supporting the association named ContrAddInfo2controllers.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setController(com.hps.july.persistence.Controller aController) throws java.rmi.RemoteException {
	this.getControllerLink().set(aController);
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for koef_kk
 * @param newValue java.math.BigDecimal
 */
public void setKoef_kk(java.math.BigDecimal newValue) {
	this.koef_kk = newValue;
}
/**
 * Setter method for load_aint_percent
 * @param newValue java.math.BigDecimal
 */
public void setLoad_aint_percent(java.math.BigDecimal newValue) {
	this.load_aint_percent = newValue;
}
/**
 * Setter method for load_max_day
 * @param newValue java.lang.String
 */
public void setLoad_max_day(java.lang.String newValue) {
	this.load_max_day = newValue;
}
/**
 * Setter method for load_max_hour
 * @param newValue java.lang.String
 */
public void setLoad_max_hour(java.lang.String newValue) {
	this.load_max_hour = newValue;
}
/**
 * Setter method for ss7_load_avg
 * @param newValue java.math.BigDecimal
 */
public void setSs7_load_avg(java.math.BigDecimal newValue) {
	this.ss7_load_avg = newValue;
}
/**
 * Setter method for traf_aint
 * @param newValue java.lang.Integer
 */
public void setTraf_aint(java.lang.Integer newValue) {
	this.traf_aint = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
