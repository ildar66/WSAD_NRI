package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Данные PIE - бюджеты из Platinum
 */
public class PIEBudjetBean implements EntityBean {
	private javax.ejb.EntityContext entityContext = null;
	public String idbudjet;
	public int idbudjetnri;
	public String iddirect;
	public String idproject;
	public String namebudjet;
	public String namedirect;
	public String nameproject;
	public int owner;
	public String recordstatus;
	private final static long serialVersionUID = 3206093459760846163L;

/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("idbudjet", getIdbudjet());
        h.put("nameproject", getNameproject());
        h.put("owner", new Integer(getOwner()));
        h.put("iddirect", getIddirect());
        h.put("idbudjetnri", new Integer(getIdbudjetnri()));
        h.put("idproject", getIdproject());
        h.put("namebudjet", getNamebudjet());
        h.put("namedirect", getNamedirect());
        h.put("recordstatus", getRecordstatus());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localIdbudjet = (java.lang.String) h.get("idbudjet");
        java.lang.String localNameproject = (java.lang.String) h.get("nameproject");
        Integer localOwner = (Integer) h.get("owner");
        java.lang.String localIddirect = (java.lang.String) h.get("iddirect");
        java.lang.String localIdproject = (java.lang.String) h.get("idproject");
        java.lang.String localNamebudjet = (java.lang.String) h.get("namebudjet");
        java.lang.String localNamedirect = (java.lang.String) h.get("namedirect");
        java.lang.String localRecordstatus = (java.lang.String) h.get("recordstatus");

        if ( h.containsKey("idbudjet") )
            setIdbudjet((localIdbudjet));
        if ( h.containsKey("nameproject") )
            setNameproject((localNameproject));
        if ( h.containsKey("owner") )
            setOwner((localOwner).intValue());
        if ( h.containsKey("iddirect") )
            setIddirect((localIddirect));
        if ( h.containsKey("idproject") )
            setIdproject((localIdproject));
        if ( h.containsKey("namebudjet") )
            setNamebudjet((localNamebudjet));
        if ( h.containsKey("namedirect") )
            setNamedirect((localNamedirect));
        if ( h.containsKey("recordstatus") )
            setRecordstatus((localRecordstatus));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argIdbudjetnri int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argIdbudjetnri, int argOwner, 
		String argIdBudjet, String argNameBudjet, String argRecordStatus) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	idbudjetnri = argIdbudjetnri;
	owner = argOwner;
	idbudjet = argIdBudjet;
	namebudjet = argNameBudjet;
	recordstatus = argRecordStatus;
	iddirect = null;
	namedirect = null;
	idproject = null;
	nameproject = null;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argIdbudjetnri int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argIdbudjetnri) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for idbudjet
 * @return java.lang.String
 */
public java.lang.String getIdbudjet() {
	return idbudjet;
}
/**
 * Insert the method's description here.
 * Creation date: (31.03.2003 16:46:47)
 * @return int
 */
public int getIdbudjetnri() {
	return idbudjetnri;
}
/**
 * Getter method for iddirect
 * @return java.lang.String
 */
public java.lang.String getIddirect() {
	return iddirect;
}
/**
 * Getter method for idproject
 * @return java.lang.String
 */
public java.lang.String getIdproject() {
	return idproject;
}
/**
 * Getter method for namebudjet
 * @return java.lang.String
 */
public java.lang.String getNamebudjet() {
	return namebudjet;
}
/**
 * Getter method for namedirect
 * @return java.lang.String
 */
public java.lang.String getNamedirect() {
	return namedirect;
}
/**
 * Getter method for nameproject
 * @return java.lang.String
 */
public java.lang.String getNameproject() {
	return nameproject;
}
/**
 * Getter method for owner
 * @return int
 */
public int getOwner() {
	return owner;
}
/**
 * Getter method for recordstatus
 * @return java.lang.String
 */
public java.lang.String getRecordstatus() {
	return recordstatus;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for idbudjet
 * @param newValue java.lang.String
 */
public void setIdbudjet(java.lang.String newValue) {
	this.idbudjet = newValue;
}
/**
 * Setter method for iddirect
 * @param newValue java.lang.String
 */
public void setIddirect(java.lang.String newValue) {
	this.iddirect = newValue;
}
/**
 * Setter method for idproject
 * @param newValue java.lang.String
 */
public void setIdproject(java.lang.String newValue) {
	this.idproject = newValue;
}
/**
 * Setter method for namebudjet
 * @param newValue java.lang.String
 */
public void setNamebudjet(java.lang.String newValue) {
	this.namebudjet = newValue;
}
/**
 * Setter method for namedirect
 * @param newValue java.lang.String
 */
public void setNamedirect(java.lang.String newValue) {
	this.namedirect = newValue;
}
/**
 * Setter method for nameproject
 * @param newValue java.lang.String
 */
public void setNameproject(java.lang.String newValue) {
	this.nameproject = newValue;
}
/**
 * Setter method for owner
 * @param newValue int
 */
public void setOwner(int newValue) {
	this.owner = newValue;
}
/**
 * Setter method for recordstatus
 * @param newValue java.lang.String
 */
public void setRecordstatus(java.lang.String newValue) {
	this.recordstatus = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
