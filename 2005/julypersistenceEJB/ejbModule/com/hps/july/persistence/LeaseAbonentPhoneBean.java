package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Телефон абонентского счета
 */
public class LeaseAbonentPhoneBean implements EntityBean {
	private javax.ejb.EntityContext entityContext = null;
	public String imsi;
	public String netstandard;
	public String phonenumber;
	public String phonestatus;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.lang.Integer phone2ban_leaseDocument;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink phone2banLink = null;
	public Short ben;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("phonenumber", getPhonenumber());
        h.put("ben", getBen());
        h.put("phonestatus", getPhonestatus());
        h.put("imsi", getImsi());
        h.put("netstandard", getNetstandard());
        h.put("phone2banKey", getPhone2banKey());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.Short localBen = (java.lang.Short) h.get("ben");
        java.lang.String localPhonestatus = (java.lang.String) h.get("phonestatus");
        java.lang.String localImsi = (java.lang.String) h.get("imsi");
        java.lang.String localNetstandard = (java.lang.String) h.get("netstandard");

        if ( h.containsKey("ben") )
            setBen((localBen));
        if ( h.containsKey("phonestatus") )
            setPhonestatus((localPhonestatus));
        if ( h.containsKey("imsi") )
            setImsi((localImsi));
        if ( h.containsKey("netstandard") )
            setNetstandard((localNetstandard));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getPhone2banLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	phone2banLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argLeasedocument int
 * @param argPhonenumber java.lang.String
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argLeasedocument, java.lang.String argPhonenumber) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	phone2ban_leaseDocument = new Integer(argLeasedocument);
	phonenumber = argPhonenumber;
	phonestatus = null;
	netstandard = null;
	imsi = null;
	ben = null;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argLeasedocument int
 * @param argPhonenumber java.lang.String
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argLeasedocument, java.lang.String argPhonenumber) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for ben
 */
public java.lang.Short getBen() {
	return ben;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for imsi
 * @return java.lang.String
 */
public java.lang.String getImsi() {
	return imsi;
}
/**
 * Getter method for netstandard
 * @return java.lang.String
 */
public java.lang.String getNetstandard() {
	return netstandard;
}
/**
 * This method was generated for supporting the association named LeaseAbonentPhone2BAN.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseAbonentBAN getPhone2ban() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.LeaseAbonentBAN)this.getPhone2banLink().value();
}
/**
 * This method was generated for supporting the association named LeaseAbonentPhone2BAN.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseDocumentKey getPhone2banKey() {
	com.hps.july.persistence.LeaseDocumentKey temp = null;
	temp = new com.hps.july.persistence.LeaseDocumentKey();
	boolean phone2ban_NULLTEST = true;
	phone2ban_NULLTEST &= (phone2ban_leaseDocument == null);
	temp.leaseDocument = ((phone2ban_leaseDocument == null) ? 0 : phone2ban_leaseDocument.intValue());
	if (phone2ban_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeaseAbonentPhone2BAN.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getPhone2banLink() {
	if (phone2banLink == null)
		phone2banLink = new LeaseAbonentPhoneToPhone2banLink(this);
	return phone2banLink;
}
/**
 * Insert the method's description here.
 * Creation date: (26.09.2002 15:50:16)
 * @return java.lang.String
 */
public java.lang.String getPhonenumber() {
	return phonenumber;
}
/**
 * Getter method for phonestatus
 * @return java.lang.String
 */
public java.lang.String getPhonestatus() {
	return phonestatus;
}
/**
 * This method was generated for supporting the association named LeaseAbonentPhone2BAN.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetPhone2banKey(com.hps.july.persistence.LeaseDocumentKey inKey) {
	boolean phone2ban_NULLTEST = (inKey == null);
	if (phone2ban_NULLTEST) phone2ban_leaseDocument = null; else phone2ban_leaseDocument = (new Integer(inKey.leaseDocument));
}
/**
 * Setter method for ben
 */
public void setBen(java.lang.Short newValue) {
	this.ben = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for imsi
 * @param newValue java.lang.String
 */
public void setImsi(java.lang.String newValue) {
	this.imsi = newValue;
}
/**
 * Setter method for netstandard
 * @param newValue java.lang.String
 */
public void setNetstandard(java.lang.String newValue) {
	this.netstandard = newValue;
}
/**
 * This method was generated for supporting the association named LeaseAbonentPhone2BAN.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setPhone2ban(com.hps.july.persistence.LeaseAbonentBAN aPhone2ban) throws java.rmi.RemoteException {
	this.getPhone2banLink().set(aPhone2ban);
}
/**
 * Setter method for phonestatus
 * @param newValue java.lang.String
 */
public void setPhonestatus(java.lang.String newValue) {
	this.phonestatus = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
