package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Именованное значение (константа) для управления поведением системы NRI
 */
public class NamedValueBean implements EntityBean {
	public String charvalue;
	public java.math.BigDecimal decimalvalue;
	private javax.ejb.EntityContext entityContext = null;
	public String id;
	public int intvalue;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.sql.Timestamp datevalue;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("datevalue", getDatevalue());
        h.put("intvalue", new Integer(getIntvalue()));
        h.put("charvalue", getCharvalue());
        h.put("id", getId());
        h.put("decimalvalue", getDecimalvalue());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.sql.Timestamp localDatevalue = (java.sql.Timestamp) h.get("datevalue");
        Integer localIntvalue = (Integer) h.get("intvalue");
        java.lang.String localCharvalue = (java.lang.String) h.get("charvalue");
        java.lang.String localId = (java.lang.String) h.get("id");
        java.math.BigDecimal localDecimalvalue = (java.math.BigDecimal) h.get("decimalvalue");

        if ( h.containsKey("datevalue") )
            setDatevalue((localDatevalue));
        if ( h.containsKey("intvalue") )
            setIntvalue((localIntvalue).intValue());
        if ( h.containsKey("charvalue") )
            setCharvalue((localCharvalue));
        if ( h.containsKey("id") )
            setId((localId));
        if ( h.containsKey("decimalvalue") )
            setDecimalvalue((localDecimalvalue));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argId java.lang.String
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(java.lang.String argId) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	charvalue = null;
	decimalvalue = null;
	id = null;
	intvalue = 0;
	datevalue = null;

	id = argId;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argId java.lang.String
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(java.lang.String argId) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for charvalue
 * @return java.lang.String
 */
public java.lang.String getCharvalue() {
	return charvalue;
}
/**
 * Getter method for datevalue
 */
public java.sql.Timestamp getDatevalue() {
	return datevalue;
}
/**
 * Getter method for decimalvalue
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getDecimalvalue() {
	return decimalvalue;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Insert the method's description here.
 * Creation date: (18.04.2002 11:14:53)
 * @return java.lang.String
 */
public java.lang.String getId() {
	return id;
}
/**
 * Getter method for intvalue
 * @return int
 */
public int getIntvalue() {
	return intvalue;
}
/**
 * Setter method for charvalue
 * @param newValue java.lang.String
 */
public void setCharvalue(java.lang.String newValue) {
	this.charvalue = newValue;
}
/**
 * Setter method for datevalue
 */
public void setDatevalue(java.sql.Timestamp newValue) {
	this.datevalue = newValue;
}
/**
 * Setter method for decimalvalue
 * @param newValue java.math.BigDecimal
 */
public void setDecimalvalue(java.math.BigDecimal newValue) {
	this.decimalvalue = (newValue==null)? newValue: newValue.setScale( 3, java.math.BigDecimal.ROUND_HALF_UP );
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Insert the method's description here.
 * Creation date: (18.04.2002 11:14:53)
 * @param newId java.lang.String
 */
public void setId(java.lang.String newId) {
	id = newId;
}
/**
 * Setter method for intvalue
 * @param newValue int
 */
public void setIntvalue(int newValue) {
	this.intvalue = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
