package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Подразделение
 */
public class DivisionBean implements EntityBean {
	public int division;
	private javax.ejb.EntityContext entityContext = null;
	public String name;
	private final static long serialVersionUID = 3206093459760846163L;
	public String shortname;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink childsLink = null;
	public java.lang.Integer company_company;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink companyLink = null;
	public java.lang.Integer parent_division;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink parentLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink workersLink = null;
	public java.lang.Integer boss_worker;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink bossLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink storagePlaceLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink requestLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink faultReportLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink projectActionTypesLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink projectActionCommentsLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink projectDivColumnsLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink carsLink = null;
	public Boolean isactive;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("isactive", getIsactive());
        h.put("companyKey", getCompanyKey());
        h.put("shortname", getShortname());
        h.put("bossKey", getBossKey());
        h.put("parentKey", getParentKey());
        h.put("division", new Integer(getDivision()));
        h.put("name", getName());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.Boolean localIsactive = (java.lang.Boolean) h.get("isactive");
        java.lang.String localShortname = (java.lang.String) h.get("shortname");
        Integer localDivision = (Integer) h.get("division");
        java.lang.String localName = (java.lang.String) h.get("name");

        if ( h.containsKey("isactive") )
            setIsactive((localIsactive));
        if ( h.containsKey("shortname") )
            setShortname((localShortname));
        if ( h.containsKey("division") )
            setDivision((localDivision).intValue());
        if ( h.containsKey("name") )
            setName((localName));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getStoragePlaceLink());
	links.addElement(getRequestLink());
	links.addElement(getProjectActionTypesLink());
	links.addElement(getBossLink());
	links.addElement(getCompanyLink());
	links.addElement(getFaultReportLink());
	links.addElement(getWorkersLink());
	links.addElement(getProjectDivColumnsLink());
	links.addElement(getProjectActionCommentsLink());
	links.addElement(getCarsLink());
	links.addElement(getParentLink());
	links.addElement(getChildsLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	storagePlaceLink = null;
	requestLink = null;
	projectActionTypesLink = null;
	bossLink = null;
	companyLink = null;
	faultReportLink = null;
	workersLink = null;
	projectDivColumnsLink = null;
	projectActionCommentsLink = null;
	carsLink = null;
	parentLink = null;
	childsLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * This method was generated for supporting the association named Car2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addCars(com.hps.july.persistence.Car aCars) throws java.rmi.RemoteException {
	this.getCarsLink().addElement(aCars);
}
/**
 * This method was generated for supporting the association named division2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addChilds(com.hps.july.persistence.Division aChilds) throws java.rmi.RemoteException {
	this.getChildsLink().addElement(aChilds);
}
/**
 * This method was generated for supporting the association named FaultReport2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addFaultReport(com.hps.july.persistence.FaultReport aFaultReport) throws java.rmi.RemoteException {
	this.getFaultReportLink().addElement(aFaultReport);
}
/**
 * This method was generated for supporting the association named ProjectActionType2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addProjectActionTypes(com.hps.july.persistence.ProjectActionType aProjectActionTypes) throws java.rmi.RemoteException {
	this.getProjectActionTypesLink().addElement(aProjectActionTypes);
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addProjectDivColumns(com.hps.july.persistence.ProjectDivColumns aProjectDivColumns) throws java.rmi.RemoteException {
	this.getProjectDivColumnsLink().addElement(aProjectDivColumns);
}
/**
 * This method was generated for supporting the association named Request2DivisionRequester.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addRequest(com.hps.july.persistence.Request aRequest) throws java.rmi.RemoteException {
	this.getRequestLink().addElement(aRequest);
}
/**
 * This method was generated for supporting the association named StoragePlace2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addStoragePlace(com.hps.july.persistence.StoragePlace aStoragePlace) throws java.rmi.RemoteException {
	this.getStoragePlaceLink().addElement(aStoragePlace);
}
/**
 * This method was generated for supporting the association named workers2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addWorkers(com.hps.july.persistence.Worker aWorkers) throws java.rmi.RemoteException {
	this.getWorkersLink().addElement(aWorkers);
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
public void ejbCreate(int argDivision, String argName, Boolean argIsactive) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	division = argDivision;
	name = argName;
	isactive = argIsactive;

	shortname = null;
	company_company = null;
	parent_division = null;
	boss_worker = null;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argDivision int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argDivision, String argName, String argShortName, Integer argParent ) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	division = argDivision;
	name = argName;
	shortname = argShortName;
	parent_division = argParent;
	isactive = Boolean.TRUE;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argDivision int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argDivision, String argName, String argShortName, Integer argCompany, char dummy ) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	name = null;
	shortname = null;
	company_company = null;
	parent_division = null;
	boss_worker = null;

	division = argDivision;
	name = argName;
	shortname = argShortName;
	company_company = argCompany;
	isactive = Boolean.TRUE;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argDivision int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argDivision) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	//_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * This method was generated for supporting the association named divisions2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Worker getBoss() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Worker)this.getBossLink().value();
}
/**
 * This method was generated for supporting the association named divisions2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.WorkerKey getBossKey() {
	com.hps.july.persistence.WorkerKey temp = null;
	temp = new com.hps.july.persistence.WorkerKey();
	boolean boss_NULLTEST = true;
	boss_NULLTEST &= (boss_worker == null);
	temp.worker = ((boss_worker == null) ? 0 : boss_worker.intValue());
	if (boss_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named divisions2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getBossLink() {
	if (bossLink == null)
		bossLink = new DivisionToBossLink(this);
	return bossLink;
}
/**
 * This method was generated for supporting the association named Car2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getCars() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getCarsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named Car2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getCarsLink() {
	if (carsLink == null)
		carsLink = new DivisionToCarsLink(this);
	return carsLink;
}
/**
 * This method was generated for supporting the association named division2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getChilds() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getChildsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named division2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getChildsLink() {
	if (childsLink == null)
		childsLink = new DivisionToChildsLink(this);
	return childsLink;
}
/**
 * This method was generated for supporting the association named division2company.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Company getCompany() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Company)this.getCompanyLink().value();
}
/**
 * This method was generated for supporting the association named division2company.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.CompanyKey getCompanyKey() {
	com.hps.july.persistence.CompanyKey temp = null;
	temp = new com.hps.july.persistence.CompanyKey();
	boolean company_NULLTEST = true;
	company_NULLTEST &= (company_company == null);
	temp.company = ((company_company == null) ? 0 : company_company.intValue());
	if (company_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named division2company.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getCompanyLink() {
	if (companyLink == null)
		companyLink = new DivisionToCompanyLink(this);
	return companyLink;
}
/**
 * Insert the method's description here.
 * Creation date: (11.04.2002 17:43:16)
 * @return int
 */
public int getDivision() {
	return division;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * This method was generated for supporting the association named FaultReport2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getFaultReport() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getFaultReportLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named FaultReport2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getFaultReportLink() {
	if (faultReportLink == null)
		faultReportLink = new DivisionToFaultReportLink(this);
	return faultReportLink;
}
/**
 * Getter method for isactive
 */
public java.lang.Boolean getIsactive() {
	return isactive;
}
/**
 * Getter method for name
 * @return java.lang.String
 */
public java.lang.String getName() {
	return name;
}
/**
 * This method was generated for supporting the association named division2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Division getParent() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Division)this.getParentLink().value();
}
/**
 * This method was generated for supporting the association named division2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.DivisionKey getParentKey() {
	com.hps.july.persistence.DivisionKey temp = null;
	temp = new com.hps.july.persistence.DivisionKey();
	boolean parent_NULLTEST = true;
	parent_NULLTEST &= (parent_division == null);
	temp.division = ((parent_division == null) ? 0 : parent_division.intValue());
	if (parent_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named division2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getParentLink() {
	if (parentLink == null)
		parentLink = new DivisionToParentLink(this);
	return parentLink;
}
/**
 * This method was generated for supporting the association named ProjectActionComments2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getProjectActionComments() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getProjectActionCommentsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named ProjectActionComments2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getProjectActionCommentsLink() {
	if (projectActionCommentsLink == null)
		projectActionCommentsLink = new DivisionToProjectActionCommentsLink(this);
	return projectActionCommentsLink;
}
/**
 * This method was generated for supporting the association named ProjectActionType2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getProjectActionTypes() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getProjectActionTypesLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named ProjectActionType2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getProjectActionTypesLink() {
	if (projectActionTypesLink == null)
		projectActionTypesLink = new DivisionToProjectActionTypesLink(this);
	return projectActionTypesLink;
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getProjectDivColumns() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getProjectDivColumnsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getProjectDivColumnsLink() {
	if (projectDivColumnsLink == null)
		projectDivColumnsLink = new DivisionToProjectDivColumnsLink(this);
	return projectDivColumnsLink;
}
/**
 * This method was generated for supporting the association named Request2DivisionRequester.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getRequest() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getRequestLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named Request2DivisionRequester.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getRequestLink() {
	if (requestLink == null)
		requestLink = new DivisionToRequestLink(this);
	return requestLink;
}
/**
 * Getter method for shortname
 * @return java.lang.String
 */
public java.lang.String getShortname() {
	return shortname;
}
/**
 * This method was generated for supporting the association named StoragePlace2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getStoragePlace() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getStoragePlaceLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named StoragePlace2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getStoragePlaceLink() {
	if (storagePlaceLink == null)
		storagePlaceLink = new DivisionToStoragePlaceLink(this);
	return storagePlaceLink;
}
/**
 * This method was generated for supporting the association named workers2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getWorkers() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getWorkersLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named workers2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getWorkersLink() {
	if (workersLink == null)
		workersLink = new DivisionToWorkersLink(this);
	return workersLink;
}
/**
 * This method was generated for supporting the association named divisions2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetBossKey(com.hps.july.persistence.WorkerKey inKey) {
	boolean boss_NULLTEST = (inKey == null);
	if (boss_NULLTEST) boss_worker = null; else boss_worker = (new Integer(inKey.worker));
}
/**
 * This method was generated for supporting the association named division2company.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetCompanyKey(com.hps.july.persistence.CompanyKey inKey) {
	boolean company_NULLTEST = (inKey == null);
	if (company_NULLTEST) company_company = null; else company_company = (new Integer(inKey.company));
}
/**
 * This method was generated for supporting the association named division2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetParentKey(com.hps.july.persistence.DivisionKey inKey) {
	boolean parent_NULLTEST = (inKey == null);
	if (parent_NULLTEST) parent_division = null; else parent_division = (new Integer(inKey.division));
}
/**
 * This method was generated for supporting the association named Car2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void removeCars(com.hps.july.persistence.Car aCars) throws java.rmi.RemoteException {
	this.getCarsLink().removeElement(aCars);
}
/**
 * This method was generated for supporting the association named division2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void removeChilds(com.hps.july.persistence.Division aChilds) throws java.rmi.RemoteException {
	this.getChildsLink().removeElement(aChilds);
}
/**
 * This method was generated for supporting the association named Car2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddCars(com.hps.july.persistence.Car aCars) {
	this.getCarsLink().secondaryAddElement(aCars);
}
/**
 * This method was generated for supporting the association named division2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddChilds(com.hps.july.persistence.Division aChilds) {
	this.getChildsLink().secondaryAddElement(aChilds);
}
/**
 * This method was generated for supporting the association named FaultReport2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddFaultReport(com.hps.july.persistence.FaultReport aFaultReport) {
	this.getFaultReportLink().secondaryAddElement(aFaultReport);
}
/**
 * This method was generated for supporting the association named ProjectActionComments2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddProjectActionComments(com.hps.july.persistence.ProjectActionComments aProjectActionComments) {
	this.getProjectActionCommentsLink().secondaryAddElement(aProjectActionComments);
}
/**
 * This method was generated for supporting the association named ProjectActionType2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddProjectActionTypes(com.hps.july.persistence.ProjectActionType aProjectActionTypes) {
	this.getProjectActionTypesLink().secondaryAddElement(aProjectActionTypes);
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddProjectDivColumns(com.hps.july.persistence.ProjectDivColumns aProjectDivColumns) {
	this.getProjectDivColumnsLink().secondaryAddElement(aProjectDivColumns);
}
/**
 * This method was generated for supporting the association named Request2DivisionRequester.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddRequest(com.hps.july.persistence.Request aRequest) {
	this.getRequestLink().secondaryAddElement(aRequest);
}
/**
 * This method was generated for supporting the association named StoragePlace2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddStoragePlace(com.hps.july.persistence.StoragePlace aStoragePlace) {
	this.getStoragePlaceLink().secondaryAddElement(aStoragePlace);
}
/**
 * This method was generated for supporting the association named workers2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddWorkers(com.hps.july.persistence.Worker aWorkers) {
	this.getWorkersLink().secondaryAddElement(aWorkers);
}
/**
 * This method was generated for supporting the association named Car2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveCars(com.hps.july.persistence.Car aCars) {
	this.getCarsLink().secondaryRemoveElement(aCars);
}
/**
 * This method was generated for supporting the association named division2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveChilds(com.hps.july.persistence.Division aChilds) {
	this.getChildsLink().secondaryRemoveElement(aChilds);
}
/**
 * This method was generated for supporting the association named FaultReport2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveFaultReport(com.hps.july.persistence.FaultReport aFaultReport) {
	this.getFaultReportLink().secondaryRemoveElement(aFaultReport);
}
/**
 * This method was generated for supporting the association named ProjectActionComments2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveProjectActionComments(com.hps.july.persistence.ProjectActionComments aProjectActionComments) {
	this.getProjectActionCommentsLink().secondaryRemoveElement(aProjectActionComments);
}
/**
 * This method was generated for supporting the association named ProjectActionType2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveProjectActionTypes(com.hps.july.persistence.ProjectActionType aProjectActionTypes) {
	this.getProjectActionTypesLink().secondaryRemoveElement(aProjectActionTypes);
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveProjectDivColumns(com.hps.july.persistence.ProjectDivColumns aProjectDivColumns) {
	this.getProjectDivColumnsLink().secondaryRemoveElement(aProjectDivColumns);
}
/**
 * This method was generated for supporting the association named Request2DivisionRequester.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveRequest(com.hps.july.persistence.Request aRequest) {
	this.getRequestLink().secondaryRemoveElement(aRequest);
}
/**
 * This method was generated for supporting the association named StoragePlace2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveStoragePlace(com.hps.july.persistence.StoragePlace aStoragePlace) {
	this.getStoragePlaceLink().secondaryRemoveElement(aStoragePlace);
}
/**
 * This method was generated for supporting the association named workers2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveWorkers(com.hps.july.persistence.Worker aWorkers) {
	this.getWorkersLink().secondaryRemoveElement(aWorkers);
}
/**
 * This method was generated for supporting the association named divisions2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetBoss(com.hps.july.persistence.Worker aBoss) throws java.rmi.RemoteException {
	this.getBossLink().secondarySet(aBoss);
}
/**
 * This method was generated for supporting the association named division2company.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetCompany(com.hps.july.persistence.Company aCompany) throws java.rmi.RemoteException {
	this.getCompanyLink().secondarySet(aCompany);
}
/**
 * This method was generated for supporting the association named division2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetParent(com.hps.july.persistence.Division aParent) throws java.rmi.RemoteException {
	this.getParentLink().secondarySet(aParent);
}
/**
 * This method was generated for supporting the association named divisions2worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setBoss(com.hps.july.persistence.Worker aBoss) throws java.rmi.RemoteException {
	this.getBossLink().set(aBoss);
}
/**
 * This method was generated for supporting the association named division2company.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setCompany(com.hps.july.persistence.Company aCompany) throws java.rmi.RemoteException {
	this.getCompanyLink().set(aCompany);
}
/**
 * Insert the method's description here.
 * Creation date: (11.04.2002 17:43:16)
 * @param newDivision int
 */
public void setDivision(int newDivision) {
	division = newDivision;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for isactive
 */
public void setIsactive(java.lang.Boolean newValue) {
	this.isactive = newValue;
}
/**
 * Setter method for name
 * @param newValue java.lang.String
 */
public void setName(java.lang.String newValue) {
	this.name = newValue;
}
/**
 * This method was generated for supporting the association named division2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setParent(com.hps.july.persistence.Division aParent) throws java.rmi.RemoteException {
	this.getParentLink().set(aParent);
}
/**
 * Setter method for shortname
 * @param newValue java.lang.String
 */
public void setShortname(java.lang.String newValue) {
	this.shortname = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
