package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * “ип документа позиции опорной сети (справочник)
 */
public class SiteDocTypeBean implements EntityBean {
	private javax.ejb.EntityContext entityContext = null;
	private final static long serialVersionUID = 3206093459760846163L;
	public int sitedoctype;
	public String sitedoctypename;
	public String sitedoctypetxt;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink siteDocsLink = null;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("sitedoctype", new Integer(getSitedoctype()));
        h.put("sitedoctypetxt", getSitedoctypetxt());
        h.put("sitedoctypename", getSitedoctypename());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localSitedoctypetxt = (java.lang.String) h.get("sitedoctypetxt");
        java.lang.String localSitedoctypename = (java.lang.String) h.get("sitedoctypename");

        if ( h.containsKey("sitedoctypetxt") )
            setSitedoctypetxt((localSitedoctypetxt));
        if ( h.containsKey("sitedoctypename") )
            setSitedoctypename((localSitedoctypename));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getSiteDocsLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	siteDocsLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * This method was generated for supporting the association named SiteDoc2SiteDocType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addSiteDocs(com.hps.july.persistence.SiteDoc aSiteDocs) throws java.rmi.RemoteException {
	this.getSiteDocsLink().addElement(aSiteDocs);
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
public void ejbCreate(int argSitedoctype, String argSitedoctypename) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	sitedoctype = argSitedoctype;
	sitedoctypename = argSitedoctypename;
	sitedoctypetxt = null;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argSitedoctype int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argSitedoctype) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * This method was generated for supporting the association named SiteDoc2SiteDocType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getSiteDocs() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getSiteDocsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named SiteDoc2SiteDocType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getSiteDocsLink() {
	if (siteDocsLink == null)
		siteDocsLink = new SiteDocTypeToSiteDocsLink(this);
	return siteDocsLink;
}
/**
 * Insert the method's description here.
 * Creation date: (14.05.2003 13:31:05)
 * @return int
 */
public int getSitedoctype() {
	return sitedoctype;
}
/**
 * Getter method for sitedoctypename
 * @return java.lang.String
 */
public java.lang.String getSitedoctypename() {
	return sitedoctypename;
}
/**
 * Getter method for sitedoctypetxt
 * @return java.lang.String
 */
public java.lang.String getSitedoctypetxt() {
	return sitedoctypetxt;
}
/**
 * This method was generated for supporting the association named SiteDoc2SiteDocType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddSiteDocs(com.hps.july.persistence.SiteDoc aSiteDocs) {
	this.getSiteDocsLink().secondaryAddElement(aSiteDocs);
}
/**
 * This method was generated for supporting the association named SiteDoc2SiteDocType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveSiteDocs(com.hps.july.persistence.SiteDoc aSiteDocs) {
	this.getSiteDocsLink().secondaryRemoveElement(aSiteDocs);
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for sitedoctypename
 * @param newValue java.lang.String
 */
public void setSitedoctypename(java.lang.String newValue) {
	this.sitedoctypename = newValue;
}
/**
 * Setter method for sitedoctypetxt
 * @param newValue java.lang.String
 */
public void setSitedoctypetxt(java.lang.String newValue) {
	this.sitedoctypetxt = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
