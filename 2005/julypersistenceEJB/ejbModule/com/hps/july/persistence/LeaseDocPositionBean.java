package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Обобщенная позиция документа аренды
 */
public class LeaseDocPositionBean implements EntityBean {
	public java.sql.Date date;
	private javax.ejb.EntityContext entityContext = null;
	public int leaseDocPosition;
	private final static long serialVersionUID = 3206093459760846163L;
	public String source;
	public java.lang.Integer leaseContract_leaseDocument;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink leaseContractLink = null;
	public String docposvid;
	public java.sql.Date begindate;
	public java.sql.Date enddate;
	public java.math.BigDecimal summ;
	public java.math.BigDecimal sumnds;
	public java.lang.Integer act_leaseDocument;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink actLink = null;
	public java.lang.Integer resource_resource;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink resourceLink = null;
	public java.lang.Integer currency_currency;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink currencyLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseCalcRatesLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink abonBillpos2docposLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink abonPays2docposLink = null;
	public Integer usedinact;
	public Integer operator;
	private int tempOperator;
	public Integer willbeinact;
	public java.sql.Timestamp modified;
	public java.sql.Timestamp created;
	public Integer modifiedby;
	public Integer createdby;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("createdby", getCreatedby());
        h.put("enddate", getEnddate());
        h.put("currencyKey", getCurrencyKey());
        h.put("created", getCreated());
        h.put("date", getDate());
        h.put("modifiedby", getModifiedby());
        h.put("actKey", getActKey());
        h.put("docposvid", getDocposvid());
        h.put("operator", getOperator());
        h.put("willbeinact", getWillbeinact());
        h.put("begindate", getBegindate());
        h.put("sumnds", getSumnds());
        h.put("modified", getModified());
        h.put("resourceKey", getResourceKey());
        h.put("summ", getSumm());
        h.put("leaseDocPosition", new Integer(getLeaseDocPosition()));
        h.put("usedinact", getUsedinact());
        h.put("leaseContractKey", getLeaseContractKey());
        h.put("source", getSource());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.Integer localCreatedby = (java.lang.Integer) h.get("createdby");
        java.sql.Date localEnddate = (java.sql.Date) h.get("enddate");
        java.sql.Timestamp localCreated = (java.sql.Timestamp) h.get("created");
        java.sql.Date localDate = (java.sql.Date) h.get("date");
        java.lang.Integer localModifiedby = (java.lang.Integer) h.get("modifiedby");
        java.lang.String localDocposvid = (java.lang.String) h.get("docposvid");
        java.lang.Integer localOperator = (java.lang.Integer) h.get("operator");
        java.lang.Integer localWillbeinact = (java.lang.Integer) h.get("willbeinact");
        java.sql.Date localBegindate = (java.sql.Date) h.get("begindate");
        java.math.BigDecimal localSumnds = (java.math.BigDecimal) h.get("sumnds");
        java.sql.Timestamp localModified = (java.sql.Timestamp) h.get("modified");
        java.math.BigDecimal localSumm = (java.math.BigDecimal) h.get("summ");
        Integer localLeaseDocPosition = (Integer) h.get("leaseDocPosition");
        java.lang.Integer localUsedinact = (java.lang.Integer) h.get("usedinact");
        java.lang.String localSource = (java.lang.String) h.get("source");

        if ( h.containsKey("createdby") )
            setCreatedby((localCreatedby));
        if ( h.containsKey("enddate") )
            setEnddate((localEnddate));
        if ( h.containsKey("created") )
            setCreated((localCreated));
        if ( h.containsKey("date") )
            setDate((localDate));
        if ( h.containsKey("modifiedby") )
            setModifiedby((localModifiedby));
        if ( h.containsKey("docposvid") )
            setDocposvid((localDocposvid));
        if ( h.containsKey("operator") )
            setOperator((localOperator));
        if ( h.containsKey("willbeinact") )
            setWillbeinact((localWillbeinact));
        if ( h.containsKey("begindate") )
            setBegindate((localBegindate));
        if ( h.containsKey("sumnds") )
            setSumnds((localSumnds));
        if ( h.containsKey("modified") )
            setModified((localModified));
        if ( h.containsKey("summ") )
            setSumm((localSumm));
        if ( h.containsKey("leaseDocPosition") )
            setLeaseDocPosition((localLeaseDocPosition).intValue());
        if ( h.containsKey("usedinact") )
            setUsedinact((localUsedinact));
        if ( h.containsKey("source") )
            setSource((localSource));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getActLink());
	links.addElement(getCurrencyLink());
	links.addElement(getLeaseContractLink());
	links.addElement(getAbonPays2docposLink());
	links.addElement(getLeaseCalcRatesLink());
	links.addElement(getResourceLink());
	links.addElement(getAbonBillpos2docposLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	actLink = null;
	currencyLink = null;
	leaseContractLink = null;
	abonPays2docposLink = null;
	leaseCalcRatesLink = null;
	resourceLink = null;
	abonBillpos2docposLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argLeaseDocPosition int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argLeaseDocPosition, java.sql.Date argDate, Integer argLeaseContract, 
	String argSource, String argVid, java.sql.Date argSDate, java.sql.Date argEDate,
	Integer argResource, java.math.BigDecimal argSumm, Integer argCurrency,
	java.math.BigDecimal argSumNds) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	leaseDocPosition = argLeaseDocPosition;
	date = argDate;
	leaseContract_leaseDocument = argLeaseContract;
	source = argSource;
	docposvid = argVid;
	begindate = argSDate;
	enddate = argEDate;
	resource_resource = argResource;
	summ = PersistenceUtil.dec(argSumm,2);
	currency_currency = argCurrency;
	sumnds = PersistenceUtil.dec(argSumNds,2);
	act_leaseDocument = null;
	operator = null;
	usedinact = null;
	willbeinact = null;
	modified = null;
	modifiedby = null;
	created = null;
	createdby = null;
	setOperator();
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
	setOperator();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argLeaseDocPosition int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argLeaseDocPosition) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
public void ejbStore() throws java.rmi.RemoteException {
	//System.out.println("LeaseDocPosition_ejbStore operator="+operator);
	if(tempOperator == 0) {
		System.out.println("LeaseDocPosition_ejbStore Не определен оператор !!!");
		setOperator(null);
	}
	else
		setOperator(new Integer(tempOperator));
}
/**
 * This method was generated for supporting the association named AbonBillpos2docpos2docpos.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.AbonBillpos2docpos getAbonBillpos2docpos() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.AbonBillpos2docpos)this.getAbonBillpos2docposLink().value();
}
/**
 * This method was generated for supporting the association named AbonBillpos2docpos2docpos.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getAbonBillpos2docposLink() {
	if (abonBillpos2docposLink == null)
		abonBillpos2docposLink = new LeaseDocPositionToAbonBillpos2docposLink(this);
	return abonBillpos2docposLink;
}
/**
 * This method was generated for supporting the association named AbonPays2docpos2docpos.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.AbonPays2docpos getAbonPays2docpos() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.AbonPays2docpos)this.getAbonPays2docposLink().value();
}
/**
 * This method was generated for supporting the association named AbonPays2docpos2docpos.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getAbonPays2docposLink() {
	if (abonPays2docposLink == null)
		abonPays2docposLink = new LeaseDocPositionToAbonPays2docposLink(this);
	return abonPays2docposLink;
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2act.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseMutualActNew getAct() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.LeaseMutualActNew)this.getActLink().value();
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2act.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseDocumentKey getActKey() {
	com.hps.july.persistence.LeaseDocumentKey temp = null;
	temp = new com.hps.july.persistence.LeaseDocumentKey();
	boolean act_NULLTEST = true;
	act_NULLTEST &= (act_leaseDocument == null);
	temp.leaseDocument = ((act_leaseDocument == null) ? 0 : act_leaseDocument.intValue());
	if (act_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2act.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getActLink() {
	if (actLink == null)
		actLink = new LeaseDocPositionToActLink(this);
	return actLink;
}
/**
 * Getter method for begindate
 */
public java.sql.Date getBegindate() {
	return begindate;
}
/**
 * Getter method for created
 */
public java.sql.Timestamp getCreated() {
	return created;
}
/**
 * Getter method for createdby
 */
public java.lang.Integer getCreatedby() {
	return createdby;
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Currency getCurrency() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Currency)this.getCurrencyLink().value();
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.CurrencyKey getCurrencyKey() {
	com.hps.july.persistence.CurrencyKey temp = null;
	temp = new com.hps.july.persistence.CurrencyKey();
	boolean currency_NULLTEST = true;
	currency_NULLTEST &= (currency_currency == null);
	temp.currency = ((currency_currency == null) ? 0 : currency_currency.intValue());
	if (currency_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getCurrencyLink() {
	if (currencyLink == null)
		currencyLink = new LeaseDocPositionToCurrencyLink(this);
	return currencyLink;
}
/**
 * Getter method for date
 * @return java.sql.Date
 */
public java.sql.Date getDate() {
	return date;
}
/**
 * Getter method for docposvid
 */
public java.lang.String getDocposvid() {
	return docposvid;
}
/**
 * Getter method for enddate
 */
public java.sql.Date getEnddate() {
	return enddate;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * This method was generated for supporting the association named LeaseCalcRate2docposition.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseCalcRates() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseCalcRatesLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseCalcRate2docposition.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseCalcRatesLink() {
	if (leaseCalcRatesLink == null)
		leaseCalcRatesLink = new LeaseDocPositionToLeaseCalcRatesLink(this);
	return leaseCalcRatesLink;
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2LeaseContract.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseContract getLeaseContract() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.LeaseContract)this.getLeaseContractLink().value();
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2LeaseContract.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseDocumentKey getLeaseContractKey() {
	com.hps.july.persistence.LeaseDocumentKey temp = null;
	temp = new com.hps.july.persistence.LeaseDocumentKey();
	boolean leaseContract_NULLTEST = true;
	leaseContract_NULLTEST &= (leaseContract_leaseDocument == null);
	temp.leaseDocument = ((leaseContract_leaseDocument == null) ? 0 : leaseContract_leaseDocument.intValue());
	if (leaseContract_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2LeaseContract.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getLeaseContractLink() {
	if (leaseContractLink == null)
		leaseContractLink = new LeaseDocPositionToLeaseContractLink(this);
	return leaseContractLink;
}
/**
 * Insert the method's description here.
 * Creation date: (19.07.2002 17:14:49)
 * @return int
 */
public int getLeaseDocPosition() {
	return leaseDocPosition;
}
/**
 * Getter method for modified
 */
public java.sql.Timestamp getModified() {
	return modified;
}
/**
 * Getter method for modifiedby
 */
public java.lang.Integer getModifiedby() {
	return modifiedby;
}
/**
 * Getter method for operator
 */
public java.lang.Integer getOperator() {
	return operator;
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Resource getResource() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Resource)this.getResourceLink().value();
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ResourceKey getResourceKey() {
	com.hps.july.persistence.ResourceKey temp = null;
	temp = new com.hps.july.persistence.ResourceKey();
	boolean resource_NULLTEST = true;
	resource_NULLTEST &= (resource_resource == null);
	temp.resource = ((resource_resource == null) ? 0 : resource_resource.intValue());
	if (resource_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getResourceLink() {
	if (resourceLink == null)
		resourceLink = new LeaseDocPositionToResourceLink(this);
	return resourceLink;
}
/**
 * Getter method for source
 * @return java.lang.String
 */
public java.lang.String getSource() {
	return source;
}
/**
 * Getter method for summ
 */
public java.math.BigDecimal getSumm() {
	return summ;
}
/**
 * Getter method for sumnds
 */
public java.math.BigDecimal getSumnds() {
	return sumnds;
}
/**
 * Getter method for usedinact
 */
public java.lang.Integer getUsedinact() {
	return usedinact;
}
/**
 * Getter method for willbeinact
 */
public java.lang.Integer getWillbeinact() {
	return willbeinact;
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2act.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetActKey(com.hps.july.persistence.LeaseDocumentKey inKey) {
	boolean act_NULLTEST = (inKey == null);
	if (act_NULLTEST) act_leaseDocument = null; else act_leaseDocument = (new Integer(inKey.leaseDocument));
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetCurrencyKey(com.hps.july.persistence.CurrencyKey inKey) {
	boolean currency_NULLTEST = (inKey == null);
	if (currency_NULLTEST) currency_currency = null; else currency_currency = (new Integer(inKey.currency));
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2LeaseContract.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetLeaseContractKey(com.hps.july.persistence.LeaseDocumentKey inKey) {
	boolean leaseContract_NULLTEST = (inKey == null);
	if (leaseContract_NULLTEST) leaseContract_leaseDocument = null; else leaseContract_leaseDocument = (new Integer(inKey.leaseDocument));
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetResourceKey(com.hps.july.persistence.ResourceKey inKey) {
	boolean resource_NULLTEST = (inKey == null);
	if (resource_NULLTEST) resource_resource = null; else resource_resource = (new Integer(inKey.resource));
}
/**
 * This method was generated for supporting the association named LeaseCalcRate2docposition.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseCalcRates(com.hps.july.persistence.LeaseCalcRate aLeaseCalcRates) {
	this.getLeaseCalcRatesLink().secondaryAddElement(aLeaseCalcRates);
}
/**
 * This method was generated for supporting the association named LeaseCalcRate2docposition.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseCalcRates(com.hps.july.persistence.LeaseCalcRate aLeaseCalcRates) {
	this.getLeaseCalcRatesLink().secondaryRemoveElement(aLeaseCalcRates);
}
/**
 * This method was generated for supporting the association named AbonBillpos2docpos2docpos.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetAbonBillpos2docpos(com.hps.july.persistence.AbonBillpos2docpos anAbonBillpos2docpos) throws java.rmi.RemoteException {
	this.getAbonBillpos2docposLink().secondarySet(anAbonBillpos2docpos);
}
/**
 * This method was generated for supporting the association named AbonPays2docpos2docpos.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetAbonPays2docpos(com.hps.july.persistence.AbonPays2docpos anAbonPays2docpos) throws java.rmi.RemoteException {
	this.getAbonPays2docposLink().secondarySet(anAbonPays2docpos);
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2act.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetAct(com.hps.july.persistence.LeaseMutualActNew anAct) throws java.rmi.RemoteException {
	this.getActLink().secondarySet(anAct);
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetCurrency(com.hps.july.persistence.Currency aCurrency) throws java.rmi.RemoteException {
	this.getCurrencyLink().secondarySet(aCurrency);
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2LeaseContract.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetLeaseContract(com.hps.july.persistence.LeaseContract aLeaseContract) throws java.rmi.RemoteException {
	this.getLeaseContractLink().secondarySet(aLeaseContract);
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetResource(com.hps.july.persistence.Resource aResource) throws java.rmi.RemoteException {
	this.getResourceLink().secondarySet(aResource);
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2act.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setAct(com.hps.july.persistence.LeaseMutualActNew anAct) throws java.rmi.RemoteException {
	this.getActLink().set(anAct);
}
/**
 * Setter method for begindate
 */
public void setBegindate(java.sql.Date newValue) {
	this.begindate = newValue;
}
/**
 * Setter method for created
 */
public void setCreated(java.sql.Timestamp newValue) {
	this.created = newValue;
}
/**
 * Setter method for createdby
 */
public void setCreatedby(java.lang.Integer newValue) {
	this.createdby = newValue;
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setCurrency(com.hps.july.persistence.Currency aCurrency) throws java.rmi.RemoteException {
	this.getCurrencyLink().set(aCurrency);
}
/**
 * Setter method for date
 * @param newValue java.sql.Date
 */
public void setDate(java.sql.Date newValue) {
	this.date = newValue;
}
/**
 * Setter method for docposvid
 */
public void setDocposvid(java.lang.String newValue) {
	this.docposvid = newValue;
}
/**
 * Setter method for enddate
 */
public void setEnddate(java.sql.Date newValue) {
	this.enddate = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2LeaseContract.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setLeaseContract(com.hps.july.persistence.LeaseContract aLeaseContract) throws java.rmi.RemoteException {
	this.getLeaseContractLink().set(aLeaseContract);
}
/**
 * Insert the method's description here.
 * Creation date: (19.07.2002 17:14:49)
 * @param newLeaseDocPosition int
 */
public void setLeaseDocPosition(int newLeaseDocPosition) {
	leaseDocPosition = newLeaseDocPosition;
}
/**
 * Setter method for modified
 */
public void setModified(java.sql.Timestamp newValue) {
	this.modified = newValue;
}
/**
 * Setter method for modifiedby
 */
public void setModifiedby(java.lang.Integer newValue) {
	this.modifiedby = newValue;
}
private void setOperator() throws java.rmi.RemoteException{
	try{
		String operatorName = entityContext.getCallerIdentity().getName();
		int index = operatorName.indexOf("/");
		if(index != -1)
			operatorName = operatorName.substring(index+1);
//System.out.println("LeaseDocPosition operatorName="+operatorName+"=");	
			tempOperator = new OperatorAccessBean().findByLogin(operatorName).getOperator();

			setOperator(new Integer(tempOperator));
//System.out.println("LeaseDocPosition operatorValue="+operator);
	}catch(Exception e){
		setOperator(null);
		System.out.println("LeaseDocPosition Не могу присвоить значение полю operator");
		//e.printStackTrace();
	}
}
/**
 * Setter method for operator
 */
public void setOperator(java.lang.Integer newValue) {
	this.operator = newValue;
}
/**
 * This method was generated for supporting the association named LeaseDocPosition2resource.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setResource(com.hps.july.persistence.Resource aResource) throws java.rmi.RemoteException {
	this.getResourceLink().set(aResource);
}
/**
 * Setter method for source
 * @param newValue java.lang.String
 */
public void setSource(java.lang.String newValue) {
	this.source = newValue;
}
/**
 * Setter method for summ
 */
public void setSumm(java.math.BigDecimal newValue) {
	this.summ = newValue;
}
/**
 * Setter method for sumnds
 */
public void setSumnds(java.math.BigDecimal newValue) {
	this.sumnds = newValue;
}
/**
 * Setter method for usedinact
 */
public void setUsedinact(java.lang.Integer newValue) {
	this.usedinact = newValue;
}
/**
 * Setter method for willbeinact
 */
public void setWillbeinact(java.lang.Integer newValue) {
	this.willbeinact = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
