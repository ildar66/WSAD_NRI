package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Серии штрих-кодов
 */
public class InventoryNumbersBean implements EntityBean {
	private javax.ejb.EntityContext entityContext = null;
	public java.sql.Date serdate;
	public String serend;
	private final static long serialVersionUID = 3206093459760846163L;
	public int serid;
	public String serprefix;
	public String serstart;
	public java.lang.Integer serworker_worker;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink serworkerLink = null;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("serstart", getSerstart());
        h.put("serprefix", getSerprefix());
        h.put("serworkerKey", getSerworkerKey());
        h.put("serid", new Integer(getSerid()));
        h.put("serdate", getSerdate());
        h.put("serend", getSerend());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localSerstart = (java.lang.String) h.get("serstart");
        java.lang.String localSerprefix = (java.lang.String) h.get("serprefix");
        java.sql.Date localSerdate = (java.sql.Date) h.get("serdate");
        java.lang.String localSerend = (java.lang.String) h.get("serend");

        if ( h.containsKey("serstart") )
            setSerstart((localSerstart));
        if ( h.containsKey("serprefix") )
            setSerprefix((localSerprefix));
        if ( h.containsKey("serdate") )
            setSerdate((localSerdate));
        if ( h.containsKey("serend") )
            setSerend((localSerend));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getSerworkerLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	serworkerLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argSerid int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argSerid, java.sql.Date serdate, String serend, 
	String serprefix, String serstart, java.lang.Integer serworker)
								throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	serid = argSerid;

	this.serdate = serdate;
	this.serend = serend;
	this.serprefix = serprefix;
	this.serstart = serstart;
	serworker_worker = serworker;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argSerid int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argSerid) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for serdate
 * @return java.sql.Date
 */
public java.sql.Date getSerdate() {
	return serdate;
}
/**
 * Getter method for serend
 * @return java.lang.String
 */
public java.lang.String getSerend() {
	return serend;
}
/**
 * Insert the method's description here.
 * Creation date: (05.11.2002 17:13:45)
 * @return int
 */
public int getSerid() {
	return serid;
}
/**
 * Getter method for serprefix
 * @return java.lang.String
 */
public java.lang.String getSerprefix() {
	return serprefix;
}
/**
 * Getter method for serstart
 * @return java.lang.String
 */
public java.lang.String getSerstart() {
	return serstart;
}
/**
 * This method was generated for supporting the association named InventoryNumbers2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Worker getSerworker() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Worker)this.getSerworkerLink().value();
}
/**
 * This method was generated for supporting the association named InventoryNumbers2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.WorkerKey getSerworkerKey() {
	com.hps.july.persistence.WorkerKey temp = null;
	temp = new com.hps.july.persistence.WorkerKey();
	boolean serworker_NULLTEST = true;
	serworker_NULLTEST &= (serworker_worker == null);
	temp.worker = ((serworker_worker == null) ? 0 : serworker_worker.intValue());
	if (serworker_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named InventoryNumbers2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getSerworkerLink() {
	if (serworkerLink == null)
		serworkerLink = new InventoryNumbersToSerworkerLink(this);
	return serworkerLink;
}
/**
 * This method was generated for supporting the association named InventoryNumbers2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetSerworkerKey(com.hps.july.persistence.WorkerKey inKey) {
	boolean serworker_NULLTEST = (inKey == null);
	if (serworker_NULLTEST) serworker_worker = null; else serworker_worker = (new Integer(inKey.worker));
}
/**
 * This method was generated for supporting the association named InventoryNumbers2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetSerworker(com.hps.july.persistence.Worker aSerworker) throws java.rmi.RemoteException {
	this.getSerworkerLink().secondarySet(aSerworker);
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for serdate
 * @param newValue java.sql.Date
 */
public void setSerdate(java.sql.Date newValue) {
	this.serdate = newValue;
}
/**
 * Setter method for serend
 * @param newValue java.lang.String
 */
public void setSerend(java.lang.String newValue) {
	this.serend = newValue;
}
/**
 * Setter method for serprefix
 * @param newValue java.lang.String
 */
public void setSerprefix(java.lang.String newValue) {
	this.serprefix = newValue;
}
/**
 * Setter method for serstart
 * @param newValue java.lang.String
 */
public void setSerstart(java.lang.String newValue) {
	this.serstart = newValue;
}
/**
 * This method was generated for supporting the association named InventoryNumbers2Worker.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setSerworker(com.hps.july.persistence.Worker aSerworker) throws java.rmi.RemoteException {
	this.getSerworkerLink().set(aSerworker);
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
