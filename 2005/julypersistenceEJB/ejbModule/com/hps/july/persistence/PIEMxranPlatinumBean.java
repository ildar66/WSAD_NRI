package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Данные PIE - места хранения из Platinum
 */
public class PIEMxranPlatinumBean implements EntityBean {
	private javax.ejb.EntityContext entityContext = null;
	public String mxranplatinum;
	public String name;
	public String p_status;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.lang.Integer owner_organization;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink ownerLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink pIEMxranLinksLink = null;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("mxranplatinum", getMxranplatinum());
        h.put("p_status", getP_status());
        h.put("ownerKey", getOwnerKey());
        h.put("name", getName());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localP_status = (java.lang.String) h.get("p_status");
        java.lang.String localName = (java.lang.String) h.get("name");

        if ( h.containsKey("p_status") )
            setP_status((localP_status));
        if ( h.containsKey("name") )
            setName((localName));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getOwnerLink());
	links.addElement(getPIEMxranLinksLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	ownerLink = null;
	pIEMxranLinksLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argMxranplatinum java.lang.String
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(java.lang.String argMxranplatinum, int argOwner, String argStatus, String argName) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	mxranplatinum = argMxranplatinum;
	owner_organization = new Integer(argOwner);
	p_status = argStatus;
	name = argName;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argMxranplatinum java.lang.String
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(java.lang.String argMxranplatinum) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Insert the method's description here.
 * Creation date: (18.12.2002 17:09:35)
 * @return java.lang.String
 */
public java.lang.String getMxranplatinum() {
	return mxranplatinum;
}
/**
 * Getter method for name
 * @return java.lang.String
 */
public java.lang.String getName() {
	return name;
}
/**
 * This method was generated for supporting the association named PIEMxranPlatinum2organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Organization getOwner() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Organization)this.getOwnerLink().value();
}
/**
 * This method was generated for supporting the association named PIEMxranPlatinum2organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.OrganizationKey getOwnerKey() {
	com.hps.july.persistence.OrganizationKey temp = null;
	temp = new com.hps.july.persistence.OrganizationKey();
	boolean owner_NULLTEST = true;
	owner_NULLTEST &= (owner_organization == null);
	temp.organization = ((owner_organization == null) ? 0 : owner_organization.intValue());
	if (owner_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named PIEMxranPlatinum2organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getOwnerLink() {
	if (ownerLink == null)
		ownerLink = new PIEMxranPlatinumToOwnerLink(this);
	return ownerLink;
}
/**
 * Getter method for p_status
 * @return java.lang.String
 */
public java.lang.String getP_status() {
	return p_status;
}
/**
 * This method was generated for supporting the association named PIEMxranLink2mxran.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getPIEMxranLinks() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getPIEMxranLinksLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named PIEMxranLink2mxran.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getPIEMxranLinksLink() {
	if (pIEMxranLinksLink == null)
		pIEMxranLinksLink = new PIEMxranPlatinumToPIEMxranLinksLink(this);
	return pIEMxranLinksLink;
}
/**
 * This method was generated for supporting the association named PIEMxranPlatinum2organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetOwnerKey(com.hps.july.persistence.OrganizationKey inKey) {
	boolean owner_NULLTEST = (inKey == null);
	if (owner_NULLTEST) owner_organization = null; else owner_organization = (new Integer(inKey.organization));
}
/**
 * This method was generated for supporting the association named PIEMxranLink2mxran.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddPIEMxranLinks(com.hps.july.persistence.PIEMxranLink aPIEMxranLinks) {
	this.getPIEMxranLinksLink().secondaryAddElement(aPIEMxranLinks);
}
/**
 * This method was generated for supporting the association named PIEMxranLink2mxran.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemovePIEMxranLinks(com.hps.july.persistence.PIEMxranLink aPIEMxranLinks) {
	this.getPIEMxranLinksLink().secondaryRemoveElement(aPIEMxranLinks);
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for name
 * @param newValue java.lang.String
 */
public void setName(java.lang.String newValue) {
	this.name = newValue;
}
/**
 * This method was generated for supporting the association named PIEMxranPlatinum2organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setOwner(com.hps.july.persistence.Organization anOwner) throws java.rmi.RemoteException {
	this.getOwnerLink().set(anOwner);
}
/**
 * Setter method for p_status
 * @param newValue java.lang.String
 */
public void setP_status(java.lang.String newValue) {
	this.p_status = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
