package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Связь документа с позицией опорной сети
 */
public class Sitedoc2SplaceBean implements EntityBean {
	private javax.ejb.EntityContext entityContext = null;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.lang.Integer siteDoc_sitedoc;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink siteDocLink = null;
	public java.lang.Integer storagePlace_storageplace;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink storagePlaceLink = null;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("storagePlace_storageplace", getStoragePlace_storageplace());
        h.put("siteDoc_sitedoc", getSiteDoc_sitedoc());
        h.put("siteDocKey", getSiteDocKey());
        h.put("storagePlaceKey", getStoragePlaceKey());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {


}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getSiteDocLink());
	links.addElement(getStoragePlaceLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	siteDocLink = null;
	storagePlaceLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int sitedoc, int storageplace) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	siteDoc_sitedoc = new Integer(sitedoc);
	storagePlace_storageplace = new Integer(storageplace);
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate() throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * This method was generated for supporting the association named Sitedoc2Splace2SiteDoc.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.SiteDoc getSiteDoc() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.SiteDoc)this.getSiteDocLink().value();
}
/**
 * Insert the method's description here.
 * Creation date: (14.05.2003 15:57:46)
 * @return java.lang.Integer
 */
public java.lang.Integer getSiteDoc_sitedoc() {
	return siteDoc_sitedoc;
}
/**
 * This method was generated for supporting the association named Sitedoc2Splace2SiteDoc.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.SiteDocKey getSiteDocKey() {
	com.hps.july.persistence.SiteDocKey temp = null;
	temp = new com.hps.july.persistence.SiteDocKey();
	boolean siteDoc_NULLTEST = true;
	siteDoc_NULLTEST &= (siteDoc_sitedoc == null);
	temp.sitedoc = ((siteDoc_sitedoc == null) ? 0 : siteDoc_sitedoc.intValue());
	if (siteDoc_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named Sitedoc2Splace2SiteDoc.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getSiteDocLink() {
	if (siteDocLink == null)
		siteDocLink = new Sitedoc2SplaceToSiteDocLink(this);
	return siteDocLink;
}
/**
 * This method was generated for supporting the association named Sitedoc2Splace2StoragePlace.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.StoragePlace getStoragePlace() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.StoragePlace)this.getStoragePlaceLink().value();
}
/**
 * Insert the method's description here.
 * Creation date: (14.05.2003 15:57:46)
 * @return java.lang.Integer
 */
public java.lang.Integer getStoragePlace_storageplace() {
	return storagePlace_storageplace;
}
/**
 * This method was generated for supporting the association named Sitedoc2Splace2StoragePlace.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.StoragePlaceKey getStoragePlaceKey() {
	com.hps.july.persistence.StoragePlaceKey temp = null;
	temp = new com.hps.july.persistence.StoragePlaceKey();
	boolean storagePlace_NULLTEST = true;
	storagePlace_NULLTEST &= (storagePlace_storageplace == null);
	temp.storageplace = ((storagePlace_storageplace == null) ? 0 : storagePlace_storageplace.intValue());
	if (storagePlace_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named Sitedoc2Splace2StoragePlace.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getStoragePlaceLink() {
	if (storagePlaceLink == null)
		storagePlaceLink = new Sitedoc2SplaceToStoragePlaceLink(this);
	return storagePlaceLink;
}
/**
 * This method was generated for supporting the association named Sitedoc2Splace2SiteDoc.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetSiteDocKey(com.hps.july.persistence.SiteDocKey inKey) {
	boolean siteDoc_NULLTEST = (inKey == null);
	if (siteDoc_NULLTEST) siteDoc_sitedoc = null; else siteDoc_sitedoc = (new Integer(inKey.sitedoc));
}
/**
 * This method was generated for supporting the association named Sitedoc2Splace2StoragePlace.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetStoragePlaceKey(com.hps.july.persistence.StoragePlaceKey inKey) {
	boolean storagePlace_NULLTEST = (inKey == null);
	if (storagePlace_NULLTEST) storagePlace_storageplace = null; else storagePlace_storageplace = (new Integer(inKey.storageplace));
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * This method was generated for supporting the association named Sitedoc2Splace2SiteDoc.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setSiteDoc(com.hps.july.persistence.SiteDoc aSiteDoc) throws java.rmi.RemoteException {
	this.getSiteDocLink().set(aSiteDoc);
}
/**
 * This method was generated for supporting the association named Sitedoc2Splace2StoragePlace.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setStoragePlace(com.hps.july.persistence.StoragePlace aStoragePlace) throws java.rmi.RemoteException {
	this.getStoragePlaceLink().set(aStoragePlace);
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
