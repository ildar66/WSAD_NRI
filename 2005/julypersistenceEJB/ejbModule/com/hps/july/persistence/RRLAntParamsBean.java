package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 */
public class RRLAntParamsBean implements EntityBean {
	public java.math.BigDecimal amplifkoeff;
	public java.math.BigDecimal antdiam;
	public java.math.BigDecimal dnangleh;
	public java.math.BigDecimal dnanglew;
	private javax.ejb.EntityContext entityContext = null;
	public int resource;
	public int rrlantid;
	private final static long serialVersionUID = 3206093459760846163L;

/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("dnanglew", getDnanglew());
        h.put("antdiam", getAntdiam());
        h.put("dnangleh", getDnangleh());
        h.put("amplifkoeff", getAmplifkoeff());
        h.put("resource", new Integer(getResource()));
        h.put("rrlantid", new Integer(getRrlantid()));
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.math.BigDecimal localDnanglew = (java.math.BigDecimal) h.get("dnanglew");
        java.math.BigDecimal localAntdiam = (java.math.BigDecimal) h.get("antdiam");
        java.math.BigDecimal localDnangleh = (java.math.BigDecimal) h.get("dnangleh");
        java.math.BigDecimal localAmplifkoeff = (java.math.BigDecimal) h.get("amplifkoeff");
        Integer localResource = (Integer) h.get("resource");

        if ( h.containsKey("dnanglew") )
            setDnanglew((localDnanglew));
        if ( h.containsKey("antdiam") )
            setAntdiam((localAntdiam));
        if ( h.containsKey("dnangleh") )
            setDnangleh((localDnangleh));
        if ( h.containsKey("amplifkoeff") )
            setAmplifkoeff((localAmplifkoeff));
        if ( h.containsKey("resource") )
            setResource((localResource).intValue());

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argRrlantid int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argRrlantid, int argResource, java.math.BigDecimal argAntDiam, 
	        java.math.BigDecimal argAmplifKoeff,  
	        java.math.BigDecimal argDNAngleH,  java.math.BigDecimal argDNAngleW) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	rrlantid = argRrlantid;
	resource = argResource;
	antdiam = argAntDiam;
	amplifkoeff = argAmplifKoeff;
	dnangleh = argDNAngleH;
	dnanglew = argDNAngleW;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argRrlantid int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argRrlantid) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for amplifkoeff
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getAmplifkoeff() {
	return amplifkoeff;
}
/**
 * Getter method for antdiam
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getAntdiam() {
	return antdiam;
}
/**
 * Getter method for dnangleh
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getDnangleh() {
	return dnangleh;
}
/**
 * Getter method for dnanglew
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getDnanglew() {
	return dnanglew;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for resource
 * @return int
 */
public int getResource() {
	return resource;
}
/**
 * Insert the method's description here.
 * Creation date: (07.07.2004 18:06:57)
 * @return int
 */
public int getRrlantid() {
	return rrlantid;
}
/**
 * Setter method for amplifkoeff
 * @param newValue java.math.BigDecimal
 */
public void setAmplifkoeff(java.math.BigDecimal newValue) {
	this.amplifkoeff = newValue;
}
/**
 * Setter method for antdiam
 * @param newValue java.math.BigDecimal
 */
public void setAntdiam(java.math.BigDecimal newValue) {
	this.antdiam = newValue;
}
/**
 * Setter method for dnangleh
 * @param newValue java.math.BigDecimal
 */
public void setDnangleh(java.math.BigDecimal newValue) {
	this.dnangleh = newValue;
}
/**
 * Setter method for dnanglew
 * @param newValue java.math.BigDecimal
 */
public void setDnanglew(java.math.BigDecimal newValue) {
	this.dnanglew = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for resource
 * @param newValue int
 */
public void setResource(int newValue) {
	this.resource = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
