package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Этап плана-графика строительства позиций
 */
public class ProjectActionBean implements EntityBean {
	public Boolean agreement;
	private javax.ejb.EntityContext entityContext = null;
	public java.sql.Date factdate;
	public int order;
	public java.sql.Date plandate;
	public int projectaction;
	private final static long serialVersionUID = 3206093459760846163L;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink projectLink = null;
	public java.lang.Integer projectactiontype_projectactiontype;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink projectactiontypeLink = null;
	public java.lang.Integer project_project;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink projectActionDocumentsLink = null;
	public boolean hasproblems;
	public java.lang.Integer equipment_storageplace;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink equipmentLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink projectActionCommentsLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink siteDocsLink = null;
	public Boolean completed;
	public java.sql.Date suggplandate;
	public Boolean isNewplandate;
	public String notes;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("suggplandate", getSuggplandate());
        h.put("order", new Integer(getOrder()));
        h.put("projectKey", getProjectKey());
        h.put("factdate", getFactdate());
        h.put("isNewplandate", getIsNewplandate());
        h.put("plandate", getPlandate());
        h.put("equipmentKey", getEquipmentKey());
        h.put("agreement", getAgreement());
        h.put("projectaction", new Integer(getProjectaction()));
        h.put("complete", new Boolean(isComplete()));
        h.put("notes", getNotes());
        h.put("projectactiontypeKey", getProjectactiontypeKey());
        h.put("completed", getCompleted());
        h.put("hasproblems", new Boolean(getHasproblems()));
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.sql.Date localSuggplandate = (java.sql.Date) h.get("suggplandate");
        Integer localOrder = (Integer) h.get("order");
        java.sql.Date localFactdate = (java.sql.Date) h.get("factdate");
        java.lang.Boolean localIsNewplandate = (java.lang.Boolean) h.get("isNewplandate");
        java.sql.Date localPlandate = (java.sql.Date) h.get("plandate");
        java.lang.Boolean localAgreement = (java.lang.Boolean) h.get("agreement");
        java.lang.String localNotes = (java.lang.String) h.get("notes");
        java.lang.Boolean localCompleted = (java.lang.Boolean) h.get("completed");
        Boolean localHasproblems = (Boolean) h.get("hasproblems");

        if ( h.containsKey("suggplandate") )
            setSuggplandate((localSuggplandate));
        if ( h.containsKey("order") )
            setOrder((localOrder).intValue());
        if ( h.containsKey("factdate") )
            setFactdate((localFactdate));
        if ( h.containsKey("isNewplandate") )
            setIsNewplandate((localIsNewplandate));
        if ( h.containsKey("plandate") )
            setPlandate((localPlandate));
        if ( h.containsKey("agreement") )
            setAgreement((localAgreement));
        if ( h.containsKey("notes") )
            setNotes((localNotes));
        if ( h.containsKey("completed") )
            setCompleted((localCompleted));
        if ( h.containsKey("hasproblems") )
            setHasproblems((localHasproblems).booleanValue());

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getProjectActionDocumentsLink());
	links.addElement(getEquipmentLink());
	links.addElement(getProjectactiontypeLink());
	links.addElement(getProjectLink());
	links.addElement(getProjectActionCommentsLink());
	links.addElement(getSiteDocsLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	projectActionDocumentsLink = null;
	equipmentLink = null;
	projectactiontypeLink = null;
	projectLink = null;
	projectActionCommentsLink = null;
	siteDocsLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * This method was generated for supporting the association named ProjectActionDocument2action.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addProjectActionDocuments(com.hps.july.persistence.ProjectActionDocument aProjectActionDocuments) throws java.rmi.RemoteException {
	this.getProjectActionDocumentsLink().addElement(aProjectActionDocuments);
}
/**
 * This method was generated for supporting the association named SiteDoc2ProjectAction.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addSiteDocs(com.hps.july.persistence.SiteDoc aSiteDocs) throws java.rmi.RemoteException {
	this.getSiteDocsLink().addElement(aSiteDocs);
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argProjectaction int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argProjectaction, int argProject, int argProjectactiontype,
		int argOrder, boolean argHasproblems) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	projectaction = argProjectaction;
	project_project = new Integer(argProject);
	projectactiontype_projectactiontype = new Integer(argProjectactiontype);
	order = argOrder;
	plandate = null;
	factdate = null;
	agreement = null;
	notes = null;
	hasproblems = argHasproblems;
	equipment_storageplace = null;
	completed = Boolean.FALSE;
	suggplandate = null;
	isNewplandate = Boolean.FALSE;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argProjectaction int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argProjectaction) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for agreement
 * @return java.lang.Boolean
 */
public java.lang.Boolean getAgreement() {
	return agreement;
}
/**
 * Getter method for completed
 */
public java.lang.Boolean getCompleted() {
	return completed;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * This method was generated for supporting the association named ProjectAction2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.EquipmentSet getEquipment() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.EquipmentSet)this.getEquipmentLink().value();
}
/**
 * This method was generated for supporting the association named ProjectAction2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.StoragePlaceKey getEquipmentKey() {
	com.hps.july.persistence.StoragePlaceKey temp = null;
	temp = new com.hps.july.persistence.StoragePlaceKey();
	boolean equipment_NULLTEST = true;
	equipment_NULLTEST &= (equipment_storageplace == null);
	temp.storageplace = ((equipment_storageplace == null) ? 0 : equipment_storageplace.intValue());
	if (equipment_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named ProjectAction2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getEquipmentLink() {
	if (equipmentLink == null)
		equipmentLink = new ProjectActionToEquipmentLink(this);
	return equipmentLink;
}
/**
 * Getter method for factdate
 * @return java.sql.Date
 */
public java.sql.Date getFactdate() {
	return factdate;
}
/**
 * Getter method for hasproblems
 */
public boolean getHasproblems() {
	return hasproblems;
}
/**
 * Getter method for isNewplandate
 */
public java.lang.Boolean getIsNewplandate() {
	return isNewplandate;
}
/**
 * Getter method for notes
 */
public java.lang.String getNotes() {
	return notes;
}
/**
 * Getter method for order
 * @return int
 */
public int getOrder() {
	return order;
}
/**
 * Getter method for plandate
 * @return java.sql.Date
 */
public java.sql.Date getPlandate() {
	return plandate;
}
/**
 * This method was generated for supporting the association named ProjectAction2project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Project getProject() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Project)this.getProjectLink().value();
}
/**
 * Insert the method's description here.
 * Creation date: (19.05.2003 19:56:50)
 * @return int
 */
public int getProjectaction() {
	return projectaction;
}
/**
 * This method was generated for supporting the association named ProjectActionComments2projectaction.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getProjectActionComments() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getProjectActionCommentsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named ProjectActionComments2projectaction.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getProjectActionCommentsLink() {
	if (projectActionCommentsLink == null)
		projectActionCommentsLink = new ProjectActionToProjectActionCommentsLink(this);
	return projectActionCommentsLink;
}
/**
 * This method was generated for supporting the association named ProjectActionDocument2action.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getProjectActionDocuments() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getProjectActionDocumentsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named ProjectActionDocument2action.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getProjectActionDocumentsLink() {
	if (projectActionDocumentsLink == null)
		projectActionDocumentsLink = new ProjectActionToProjectActionDocumentsLink(this);
	return projectActionDocumentsLink;
}
/**
 * This method was generated for supporting the association named ProjectAction2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ProjectActionType getProjectactiontype() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.ProjectActionType)this.getProjectactiontypeLink().value();
}
/**
 * This method was generated for supporting the association named ProjectAction2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ProjectActionTypeKey getProjectactiontypeKey() {
	com.hps.july.persistence.ProjectActionTypeKey temp = null;
	temp = new com.hps.july.persistence.ProjectActionTypeKey();
	boolean projectactiontype_NULLTEST = true;
	projectactiontype_NULLTEST &= (projectactiontype_projectactiontype == null);
	temp.projectactiontype = ((projectactiontype_projectactiontype == null) ? 0 : projectactiontype_projectactiontype.intValue());
	if (projectactiontype_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named ProjectAction2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getProjectactiontypeLink() {
	if (projectactiontypeLink == null)
		projectactiontypeLink = new ProjectActionToProjectactiontypeLink(this);
	return projectactiontypeLink;
}
/**
 * This method was generated for supporting the association named ProjectAction2project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ProjectKey getProjectKey() {
	com.hps.july.persistence.ProjectKey temp = null;
	temp = new com.hps.july.persistence.ProjectKey();
	boolean project_NULLTEST = true;
	project_NULLTEST &= (project_project == null);
	temp.project = ((project_project == null) ? 0 : project_project.intValue());
	if (project_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named ProjectAction2project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getProjectLink() {
	if (projectLink == null)
		projectLink = new ProjectActionToProjectLink(this);
	return projectLink;
}
/**
 * This method was generated for supporting the association named SiteDoc2ProjectAction.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getSiteDocs() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getSiteDocsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named SiteDoc2ProjectAction.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getSiteDocsLink() {
	if (siteDocsLink == null)
		siteDocsLink = new ProjectActionToSiteDocsLink(this);
	return siteDocsLink;
}
/**
 * Getter method for suggplandate
 */
public java.sql.Date getSuggplandate() {
	return suggplandate;
}
/**
 * Insert the method's description here.
 * Creation date: (15.12.2002 12:36:46)
 * @return boolean
 */
public boolean isComplete() {
	return (getFactdate() != null);
}
/**
 * This method was generated for supporting the association named ProjectAction2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetEquipmentKey(com.hps.july.persistence.StoragePlaceKey inKey) {
	boolean equipment_NULLTEST = (inKey == null);
	if (equipment_NULLTEST) equipment_storageplace = null; else equipment_storageplace = (new Integer(inKey.storageplace));
}
/**
 * This method was generated for supporting the association named ProjectAction2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetProjectactiontypeKey(com.hps.july.persistence.ProjectActionTypeKey inKey) {
	boolean projectactiontype_NULLTEST = (inKey == null);
	if (projectactiontype_NULLTEST) projectactiontype_projectactiontype = null; else projectactiontype_projectactiontype = (new Integer(inKey.projectactiontype));
}
/**
 * This method was generated for supporting the association named ProjectAction2project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetProjectKey(com.hps.july.persistence.ProjectKey inKey) {
	boolean project_NULLTEST = (inKey == null);
	if (project_NULLTEST) project_project = null; else project_project = (new Integer(inKey.project));
}
/**
 * This method was generated for supporting the association named SiteDoc2ProjectAction.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void removeSiteDocs(com.hps.july.persistence.SiteDoc aSiteDocs) throws java.rmi.RemoteException {
	this.getSiteDocsLink().removeElement(aSiteDocs);
}
/**
 * This method was generated for supporting the association named ProjectActionComments2projectaction.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddProjectActionComments(com.hps.july.persistence.ProjectActionComments aProjectActionComments) {
	this.getProjectActionCommentsLink().secondaryAddElement(aProjectActionComments);
}
/**
 * This method was generated for supporting the association named ProjectActionDocument2action.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddProjectActionDocuments(com.hps.july.persistence.ProjectActionDocument aProjectActionDocuments) {
	this.getProjectActionDocumentsLink().secondaryAddElement(aProjectActionDocuments);
}
/**
 * This method was generated for supporting the association named SiteDoc2ProjectAction.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddSiteDocs(com.hps.july.persistence.SiteDoc aSiteDocs) {
	this.getSiteDocsLink().secondaryAddElement(aSiteDocs);
}
/**
 * This method was generated for supporting the association named ProjectActionComments2projectaction.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveProjectActionComments(com.hps.july.persistence.ProjectActionComments aProjectActionComments) {
	this.getProjectActionCommentsLink().secondaryRemoveElement(aProjectActionComments);
}
/**
 * This method was generated for supporting the association named ProjectActionDocument2action.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveProjectActionDocuments(com.hps.july.persistence.ProjectActionDocument aProjectActionDocuments) {
	this.getProjectActionDocumentsLink().secondaryRemoveElement(aProjectActionDocuments);
}
/**
 * This method was generated for supporting the association named SiteDoc2ProjectAction.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveSiteDocs(com.hps.july.persistence.SiteDoc aSiteDocs) {
	this.getSiteDocsLink().secondaryRemoveElement(aSiteDocs);
}
/**
 * This method was generated for supporting the association named ProjectAction2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetEquipment(com.hps.july.persistence.EquipmentSet anEquipment) throws java.rmi.RemoteException {
	this.getEquipmentLink().secondarySet(anEquipment);
}
/**
 * This method was generated for supporting the association named ProjectAction2project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetProject(com.hps.july.persistence.Project aProject) throws java.rmi.RemoteException {
	this.getProjectLink().secondarySet(aProject);
}
/**
 * This method was generated for supporting the association named ProjectAction2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetProjectactiontype(com.hps.july.persistence.ProjectActionType aProjectactiontype) throws java.rmi.RemoteException {
	this.getProjectactiontypeLink().secondarySet(aProjectactiontype);
}
/**
 * Setter method for agreement
 * @param newValue java.lang.Boolean
 */
public void setAgreement(java.lang.Boolean newValue) {
	this.agreement = newValue;
}
/**
 * Setter method for completed
 */
public void setCompleted(java.lang.Boolean newValue) {
	this.completed = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * This method was generated for supporting the association named ProjectAction2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setEquipment(com.hps.july.persistence.EquipmentSet anEquipment) throws java.rmi.RemoteException {
	this.getEquipmentLink().set(anEquipment);
}
/**
 * Setter method for factdate
 * @param newValue java.sql.Date
 */
public void setFactdate(java.sql.Date newValue) {
	this.factdate = newValue;
}
/**
 * Setter method for hasproblems
 */
public void setHasproblems(boolean newValue) {
	this.hasproblems = newValue;
}
/**
 * Setter method for isNewplandate
 */
public void setIsNewplandate(java.lang.Boolean newValue) {
	this.isNewplandate = newValue;
}
/**
 * Setter method for notes
 */
public void setNotes(java.lang.String newValue) {
	this.notes = newValue;
}
/**
 * Setter method for order
 * @param newValue int
 */
public void setOrder(int newValue) {
	this.order = newValue;
}
/**
 * Setter method for plandate
 * @param newValue java.sql.Date
 */
public void setPlandate(java.sql.Date newValue) {
	this.plandate = newValue;
}
/**
 * This method was generated for supporting the association named ProjectAction2project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setProject(com.hps.july.persistence.Project aProject) throws java.rmi.RemoteException {
	this.getProjectLink().set(aProject);
}
/**
 * This method was generated for supporting the association named ProjectAction2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setProjectactiontype(com.hps.july.persistence.ProjectActionType aProjectactiontype) throws java.rmi.RemoteException {
	this.getProjectactiontypeLink().set(aProjectactiontype);
}
/**
 * Setter method for suggplandate
 */
public void setSuggplandate(java.sql.Date newValue) {
	this.suggplandate = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
