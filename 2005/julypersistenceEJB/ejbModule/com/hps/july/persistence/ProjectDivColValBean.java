package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Значение колонки пользователя плана-графика
 */
public class ProjectDivColValBean implements EntityBean {
	private javax.ejb.EntityContext entityContext = null;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.lang.Integer project_project;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink projectLink = null;
	public java.lang.Integer projectDivColumn_divcolid;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink projectDivColumnLink = null;
	public String colvalue;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("project_project", getProject_project());
        h.put("projectKey", getProjectKey());
        h.put("colvalue", getColvalue());
        h.put("projectDivColumnKey", getProjectDivColumnKey());
        h.put("projectDivColumn_divcolid", getProjectDivColumn_divcolid());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localColvalue = (java.lang.String) h.get("colvalue");

        if ( h.containsKey("colvalue") )
            setColvalue((localColvalue));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getProjectDivColumnLink());
	links.addElement(getProjectLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	projectDivColumnLink = null;
	projectLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int divcolid, int project, String argColvalue) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();

	project_project = new Integer(project);
	projectDivColumn_divcolid = new Integer(divcolid);
	colvalue = argColvalue;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate() throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for colvalue
 */
public java.lang.String getColvalue() {
	return colvalue;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * This method was generated for supporting the association named ProjectDivColVal2Project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Project getProject() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Project)this.getProjectLink().value();
}
/**
 * Insert the method's description here.
 * Creation date: (09.06.2003 18:10:33)
 * @return java.lang.Integer
 */
public java.lang.Integer getProject_project() {
	return project_project;
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2ProjectDivColVal.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ProjectDivColumns getProjectDivColumn() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.ProjectDivColumns)this.getProjectDivColumnLink().value();
}
/**
 * Insert the method's description here.
 * Creation date: (09.06.2003 18:10:33)
 * @return java.lang.Integer
 */
public java.lang.Integer getProjectDivColumn_divcolid() {
	return projectDivColumn_divcolid;
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2ProjectDivColVal.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ProjectDivColumnsKey getProjectDivColumnKey() {
	com.hps.july.persistence.ProjectDivColumnsKey temp = null;
	temp = new com.hps.july.persistence.ProjectDivColumnsKey();
	boolean projectDivColumn_NULLTEST = true;
	projectDivColumn_NULLTEST &= (projectDivColumn_divcolid == null);
	temp.divcolid = ((projectDivColumn_divcolid == null) ? 0 : projectDivColumn_divcolid.intValue());
	if (projectDivColumn_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2ProjectDivColVal.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getProjectDivColumnLink() {
	if (projectDivColumnLink == null)
		projectDivColumnLink = new ProjectDivColValToProjectDivColumnLink(this);
	return projectDivColumnLink;
}
/**
 * This method was generated for supporting the association named ProjectDivColVal2Project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ProjectKey getProjectKey() {
	com.hps.july.persistence.ProjectKey temp = null;
	temp = new com.hps.july.persistence.ProjectKey();
	boolean project_NULLTEST = true;
	project_NULLTEST &= (project_project == null);
	temp.project = ((project_project == null) ? 0 : project_project.intValue());
	if (project_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named ProjectDivColVal2Project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getProjectLink() {
	if (projectLink == null)
		projectLink = new ProjectDivColValToProjectLink(this);
	return projectLink;
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2ProjectDivColVal.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetProjectDivColumnKey(com.hps.july.persistence.ProjectDivColumnsKey inKey) {
	boolean projectDivColumn_NULLTEST = (inKey == null);
	if (projectDivColumn_NULLTEST) projectDivColumn_divcolid = null; else projectDivColumn_divcolid = (new Integer(inKey.divcolid));
}
/**
 * This method was generated for supporting the association named ProjectDivColVal2Project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetProjectKey(com.hps.july.persistence.ProjectKey inKey) {
	boolean project_NULLTEST = (inKey == null);
	if (project_NULLTEST) project_project = null; else project_project = (new Integer(inKey.project));
}
/**
 * Setter method for colvalue
 */
public void setColvalue(java.lang.String newValue) {
	this.colvalue = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * This method was generated for supporting the association named ProjectDivColVal2Project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setProject(com.hps.july.persistence.Project aProject) throws java.rmi.RemoteException {
	this.getProjectLink().set(aProject);
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2ProjectDivColVal.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setProjectDivColumn(com.hps.july.persistence.ProjectDivColumns aProjectDivColumn) throws java.rmi.RemoteException {
	this.getProjectDivColumnLink().set(aProjectDivColumn);
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
