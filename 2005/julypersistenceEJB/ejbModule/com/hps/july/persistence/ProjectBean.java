package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * План-график строительства позиций
 */
public class ProjectBean implements EntityBean {
	public java.sql.Date datestart;
	private javax.ejb.EntityContext entityContext = null;
	public String name;
	public int project;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.lang.Integer contructer_organization;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink contructerLink = null;
	public java.lang.Integer projecttype_projecttype;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink projecttypeLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink projectStatesLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink projectActionsLink = null;
	public String vctext;
	public java.lang.Integer vccontructer_organization;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink vccontructerLink = null;
	public java.lang.Integer position_storageplace;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink positionLink = null;
	public String notes;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink projectDivColValsLink = null;
	public Short monthfinish;
	public Integer yearfinish;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("projecttypeKey", getProjecttypeKey());
        h.put("yearfinish", getYearfinish());
        h.put("contructerKey", getContructerKey());
        h.put("vccontructerKey", getVccontructerKey());
        h.put("positionKey", getPositionKey());
        h.put("vctext", getVctext());
        h.put("datestart", getDatestart());
        h.put("notes", getNotes());
        h.put("project", new Integer(getProject()));
        h.put("monthfinish", getMonthfinish());
        h.put("name", getName());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.Integer localYearfinish = (java.lang.Integer) h.get("yearfinish");
        java.lang.String localVctext = (java.lang.String) h.get("vctext");
        java.sql.Date localDatestart = (java.sql.Date) h.get("datestart");
        java.lang.String localNotes = (java.lang.String) h.get("notes");
        java.lang.Short localMonthfinish = (java.lang.Short) h.get("monthfinish");
        java.lang.String localName = (java.lang.String) h.get("name");

        if ( h.containsKey("yearfinish") )
            setYearfinish((localYearfinish));
        if ( h.containsKey("vctext") )
            setVctext((localVctext));
        if ( h.containsKey("datestart") )
            setDatestart((localDatestart));
        if ( h.containsKey("notes") )
            setNotes((localNotes));
        if ( h.containsKey("monthfinish") )
            setMonthfinish((localMonthfinish));
        if ( h.containsKey("name") )
            setName((localName));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getProjecttypeLink());
	links.addElement(getPositionLink());
	links.addElement(getVccontructerLink());
	links.addElement(getProjectStatesLink());
	links.addElement(getProjectActionsLink());
	links.addElement(getContructerLink());
	links.addElement(getProjectDivColValsLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	projecttypeLink = null;
	positionLink = null;
	vccontructerLink = null;
	projectStatesLink = null;
	projectActionsLink = null;
	contructerLink = null;
	projectDivColValsLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * This method was generated for supporting the association named ProjectAction2project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addProjectActions(com.hps.july.persistence.ProjectAction aProjectActions) throws java.rmi.RemoteException {
	this.getProjectActionsLink().addElement(aProjectActions);
}
/**
 * This method was generated for supporting the association named ProjectState2project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addProjectStates(com.hps.july.persistence.ProjectState aProjectStates) throws java.rmi.RemoteException {
	this.getProjectStatesLink().addElement(aProjectStates);
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argProject int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argProject, int argProjectType, String argName, int position) 
		throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	project = argProject;
	//projectstate_projectstate = new Integer(argProjectState);
	projecttype_projecttype = new Integer(argProjectType);
	name = argName;
	contructer_organization = null;
	notes = null;
	datestart = null;
	monthfinish = null;
	yearfinish = null;
	vctext = null;
	vccontructer_organization = null;
	position_storageplace = new Integer(position);
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argProject int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argProject) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * This method was generated for supporting the association named Project2organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Organization getContructer() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Organization)this.getContructerLink().value();
}
/**
 * This method was generated for supporting the association named Project2organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.OrganizationKey getContructerKey() {
	com.hps.july.persistence.OrganizationKey temp = null;
	temp = new com.hps.july.persistence.OrganizationKey();
	boolean contructer_NULLTEST = true;
	contructer_NULLTEST &= (contructer_organization == null);
	temp.organization = ((contructer_organization == null) ? 0 : contructer_organization.intValue());
	if (contructer_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named Project2organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getContructerLink() {
	if (contructerLink == null)
		contructerLink = new ProjectToContructerLink(this);
	return contructerLink;
}
/**
 * Getter method for datestart
 * @return java.sql.Date
 */
public java.sql.Date getDatestart() {
	return datestart;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for monthfinish
 */
public java.lang.Short getMonthfinish() {
	return monthfinish;
}
/**
 * Getter method for name
 * @return java.lang.String
 */
public java.lang.String getName() {
	return name;
}
/**
 * Getter method for notes
 */
public java.lang.String getNotes() {
	return notes;
}
/**
 * This method was generated for supporting the association named Project2position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Position getPosition() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Position)this.getPositionLink().value();
}
/**
 * This method was generated for supporting the association named Project2position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.StoragePlaceKey getPositionKey() {
	com.hps.july.persistence.StoragePlaceKey temp = null;
	temp = new com.hps.july.persistence.StoragePlaceKey();
	boolean position_NULLTEST = true;
	position_NULLTEST &= (position_storageplace == null);
	temp.storageplace = ((position_storageplace == null) ? 0 : position_storageplace.intValue());
	if (position_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named Project2position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getPositionLink() {
	if (positionLink == null)
		positionLink = new ProjectToPositionLink(this);
	return positionLink;
}
/**
 * Insert the method's description here.
 * Creation date: (11.12.2002 18:33:01)
 * @return int
 */
public int getProject() {
	return project;
}
/**
 * This method was generated for supporting the association named ProjectAction2project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getProjectActions() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getProjectActionsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named ProjectAction2project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getProjectActionsLink() {
	if (projectActionsLink == null)
		projectActionsLink = new ProjectToProjectActionsLink(this);
	return projectActionsLink;
}
/**
 * This method was generated for supporting the association named ProjectDivColVal2Project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getProjectDivColVals() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getProjectDivColValsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named ProjectDivColVal2Project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getProjectDivColValsLink() {
	if (projectDivColValsLink == null)
		projectDivColValsLink = new ProjectToProjectDivColValsLink(this);
	return projectDivColValsLink;
}
/**
 * This method was generated for supporting the association named ProjectState2project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getProjectStates() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getProjectStatesLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named ProjectState2project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getProjectStatesLink() {
	if (projectStatesLink == null)
		projectStatesLink = new ProjectToProjectStatesLink(this);
	return projectStatesLink;
}
/**
 * This method was generated for supporting the association named Project2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ProjectType getProjecttype() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.ProjectType)this.getProjecttypeLink().value();
}
/**
 * This method was generated for supporting the association named Project2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ProjectTypeKey getProjecttypeKey() {
	com.hps.july.persistence.ProjectTypeKey temp = null;
	temp = new com.hps.july.persistence.ProjectTypeKey();
	boolean projecttype_NULLTEST = true;
	projecttype_NULLTEST &= (projecttype_projecttype == null);
	temp.projecttype = ((projecttype_projecttype == null) ? 0 : projecttype_projecttype.intValue());
	if (projecttype_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named Project2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getProjecttypeLink() {
	if (projecttypeLink == null)
		projecttypeLink = new ProjectToProjecttypeLink(this);
	return projecttypeLink;
}
/**
 * This method was generated for supporting the association named Project2vccontructer.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Organization getVccontructer() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Organization)this.getVccontructerLink().value();
}
/**
 * This method was generated for supporting the association named Project2vccontructer.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.OrganizationKey getVccontructerKey() {
	com.hps.july.persistence.OrganizationKey temp = null;
	temp = new com.hps.july.persistence.OrganizationKey();
	boolean vccontructer_NULLTEST = true;
	vccontructer_NULLTEST &= (vccontructer_organization == null);
	temp.organization = ((vccontructer_organization == null) ? 0 : vccontructer_organization.intValue());
	if (vccontructer_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named Project2vccontructer.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getVccontructerLink() {
	if (vccontructerLink == null)
		vccontructerLink = new ProjectToVccontructerLink(this);
	return vccontructerLink;
}
/**
 * Getter method for vctext
 */
public java.lang.String getVctext() {
	return vctext;
}
/**
 * Getter method for yearfinish
 */
public java.lang.Integer getYearfinish() {
	return yearfinish;
}
/**
 * This method was generated for supporting the association named Project2organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetContructerKey(com.hps.july.persistence.OrganizationKey inKey) {
	boolean contructer_NULLTEST = (inKey == null);
	if (contructer_NULLTEST) contructer_organization = null; else contructer_organization = (new Integer(inKey.organization));
}
/**
 * This method was generated for supporting the association named Project2position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetPositionKey(com.hps.july.persistence.StoragePlaceKey inKey) {
	boolean position_NULLTEST = (inKey == null);
	if (position_NULLTEST) position_storageplace = null; else position_storageplace = (new Integer(inKey.storageplace));
}
/**
 * This method was generated for supporting the association named Project2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetProjecttypeKey(com.hps.july.persistence.ProjectTypeKey inKey) {
	boolean projecttype_NULLTEST = (inKey == null);
	if (projecttype_NULLTEST) projecttype_projecttype = null; else projecttype_projecttype = (new Integer(inKey.projecttype));
}
/**
 * This method was generated for supporting the association named Project2vccontructer.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetVccontructerKey(com.hps.july.persistence.OrganizationKey inKey) {
	boolean vccontructer_NULLTEST = (inKey == null);
	if (vccontructer_NULLTEST) vccontructer_organization = null; else vccontructer_organization = (new Integer(inKey.organization));
}
/**
 * This method was generated for supporting the association named ProjectAction2project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddProjectActions(com.hps.july.persistence.ProjectAction aProjectActions) {
	this.getProjectActionsLink().secondaryAddElement(aProjectActions);
}
/**
 * This method was generated for supporting the association named ProjectDivColVal2Project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddProjectDivColVals(com.hps.july.persistence.ProjectDivColVal aProjectDivColVals) {
	this.getProjectDivColValsLink().secondaryAddElement(aProjectDivColVals);
}
/**
 * This method was generated for supporting the association named ProjectState2project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddProjectStates(com.hps.july.persistence.ProjectState aProjectStates) {
	this.getProjectStatesLink().secondaryAddElement(aProjectStates);
}
/**
 * This method was generated for supporting the association named ProjectAction2project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveProjectActions(com.hps.july.persistence.ProjectAction aProjectActions) {
	this.getProjectActionsLink().secondaryRemoveElement(aProjectActions);
}
/**
 * This method was generated for supporting the association named ProjectDivColVal2Project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveProjectDivColVals(com.hps.july.persistence.ProjectDivColVal aProjectDivColVals) {
	this.getProjectDivColValsLink().secondaryRemoveElement(aProjectDivColVals);
}
/**
 * This method was generated for supporting the association named ProjectState2project.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveProjectStates(com.hps.july.persistence.ProjectState aProjectStates) {
	this.getProjectStatesLink().secondaryRemoveElement(aProjectStates);
}
/**
 * This method was generated for supporting the association named Project2organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetContructer(com.hps.july.persistence.Organization aContructer) throws java.rmi.RemoteException {
	this.getContructerLink().secondarySet(aContructer);
}
/**
 * This method was generated for supporting the association named Project2position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetPosition(com.hps.july.persistence.Position aPosition) throws java.rmi.RemoteException {
	this.getPositionLink().secondarySet(aPosition);
}
/**
 * This method was generated for supporting the association named Project2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetProjecttype(com.hps.july.persistence.ProjectType aProjecttype) throws java.rmi.RemoteException {
	this.getProjecttypeLink().secondarySet(aProjecttype);
}
/**
 * This method was generated for supporting the association named Project2vccontructer.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetVccontructer(com.hps.july.persistence.Organization aVccontructer) throws java.rmi.RemoteException {
	this.getVccontructerLink().secondarySet(aVccontructer);
}
/**
 * This method was generated for supporting the association named Project2organization.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setContructer(com.hps.july.persistence.Organization aContructer) throws java.rmi.RemoteException {
	this.getContructerLink().set(aContructer);
}
/**
 * Setter method for datestart
 * @param newValue java.sql.Date
 */
public void setDatestart(java.sql.Date newValue) {
	this.datestart = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for monthfinish
 */
public void setMonthfinish(java.lang.Short newValue) {
	this.monthfinish = newValue;
}
/**
 * Setter method for name
 * @param newValue java.lang.String
 */
public void setName(java.lang.String newValue) {
	this.name = newValue;
}
/**
 * Setter method for notes
 */
public void setNotes(java.lang.String newValue) {
	this.notes = newValue;
}
/**
 * This method was generated for supporting the association named Project2position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setPosition(com.hps.july.persistence.Position aPosition) throws java.rmi.RemoteException {
	this.getPositionLink().set(aPosition);
}
/**
 * This method was generated for supporting the association named Project2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setProjecttype(com.hps.july.persistence.ProjectType aProjecttype) throws java.rmi.RemoteException {
	this.getProjecttypeLink().set(aProjecttype);
}
/**
 * This method was generated for supporting the association named Project2vccontructer.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setVccontructer(com.hps.july.persistence.Organization aVccontructer) throws java.rmi.RemoteException {
	this.getVccontructerLink().set(aVccontructer);
}
/**
 * Setter method for vctext
 */
public void setVctext(java.lang.String newValue) {
	this.vctext = newValue;
}
/**
 * Setter method for yearfinish
 */
public void setYearfinish(java.lang.Integer newValue) {
	this.yearfinish = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
