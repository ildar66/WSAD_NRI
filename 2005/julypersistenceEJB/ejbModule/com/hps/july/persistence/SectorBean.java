package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Сектор базовой станции
 */
public class SectorBean implements EntityBean {
	public java.math.BigDecimal azimut;
	public String btsnumber;
	public Boolean capgprs;
	public String conabis;
	public String conf;
	public Boolean ddk;
	private javax.ejb.EntityContext entityContext = null;
	public Boolean hasbuster;
	public Boolean hasflt;
	public Boolean haslna;
	public int idsect;
	public Boolean ishr;
	public String namesect;
	public String numpo;
	public String numsect;
	public Integer portabis;
	public java.math.BigDecimal power;
	private final static long serialVersionUID = 3206093459760846163L;
	public Integer trxnum;
	public Integer trxnum2;
	public java.math.BigDecimal txpwr;
	public java.math.BigDecimal txpwr2;
	public java.lang.Integer equipment_storageplace;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink equipmentLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink antena2sectorsLink = null;
	public short band;
	public java.math.BigDecimal txsetpwr;
	public Integer trxovrnum;
	public java.math.BigDecimal txovrsetpwr;
	public Integer operator;
	private Integer tempOperator;
	public Boolean byhand;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink repitersLink = null;
	public Integer lac;
	public Integer rac;
	public Integer cellname;
	public int datasource;
	public int planfacttype;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("capgprs", getCapgprs());
        h.put("namesect", getNamesect());
        h.put("numpo", getNumpo());
        h.put("conabis", getConabis());
        h.put("cellname", getCellname());
        h.put("hasbuster", getHasbuster());
        h.put("byhand", getByhand());
        h.put("datasource", new Integer(getDatasource()));
        h.put("numsect", getNumsect());
        h.put("band", new Short(getBand()));
        h.put("txpwr2", getTxpwr2());
        h.put("trxnum", getTrxnum());
        h.put("hasflt", getHasflt());
        h.put("idsect", new Integer(getIdsect()));
        h.put("trxnum2", getTrxnum2());
        h.put("planfacttype", new Integer(getPlanfacttype()));
        h.put("txovrsetpwr", getTxovrsetpwr());
        h.put("equipmentKey", getEquipmentKey());
        h.put("portabis", getPortabis());
        h.put("power", getPower());
        h.put("operator", getOperator());
        h.put("rac", getRac());
        h.put("btsnumber", getBtsnumber());
        h.put("trxovrnum", getTrxovrnum());
        h.put("lac", getLac());
        h.put("ddk", getDdk());
        h.put("haslna", getHaslna());
        h.put("txsetpwr", getTxsetpwr());
        h.put("txpwr", getTxpwr());
        h.put("azimut", getAzimut());
        h.put("ishr", getIshr());
        h.put("conf", getConf());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.Boolean localCapgprs = (java.lang.Boolean) h.get("capgprs");
        java.lang.String localNamesect = (java.lang.String) h.get("namesect");
        java.lang.String localNumpo = (java.lang.String) h.get("numpo");
        java.lang.String localConabis = (java.lang.String) h.get("conabis");
        java.lang.Integer localCellname = (java.lang.Integer) h.get("cellname");
        java.lang.Boolean localHasbuster = (java.lang.Boolean) h.get("hasbuster");
        java.lang.Boolean localByhand = (java.lang.Boolean) h.get("byhand");
        Integer localDatasource = (Integer) h.get("datasource");
        java.lang.String localNumsect = (java.lang.String) h.get("numsect");
        Short localBand = (Short) h.get("band");
        java.math.BigDecimal localTxpwr2 = (java.math.BigDecimal) h.get("txpwr2");
        java.lang.Integer localTrxnum = (java.lang.Integer) h.get("trxnum");
        java.lang.Boolean localHasflt = (java.lang.Boolean) h.get("hasflt");
        java.lang.Integer localTrxnum2 = (java.lang.Integer) h.get("trxnum2");
        Integer localPlanfacttype = (Integer) h.get("planfacttype");
        java.math.BigDecimal localTxovrsetpwr = (java.math.BigDecimal) h.get("txovrsetpwr");
        java.lang.Integer localPortabis = (java.lang.Integer) h.get("portabis");
        java.math.BigDecimal localPower = (java.math.BigDecimal) h.get("power");
        java.lang.Integer localOperator = (java.lang.Integer) h.get("operator");
        java.lang.Integer localRac = (java.lang.Integer) h.get("rac");
        java.lang.String localBtsnumber = (java.lang.String) h.get("btsnumber");
        java.lang.Integer localTrxovrnum = (java.lang.Integer) h.get("trxovrnum");
        java.lang.Integer localLac = (java.lang.Integer) h.get("lac");
        java.lang.Boolean localDdk = (java.lang.Boolean) h.get("ddk");
        java.lang.Boolean localHaslna = (java.lang.Boolean) h.get("haslna");
        java.math.BigDecimal localTxsetpwr = (java.math.BigDecimal) h.get("txsetpwr");
        java.math.BigDecimal localTxpwr = (java.math.BigDecimal) h.get("txpwr");
        java.math.BigDecimal localAzimut = (java.math.BigDecimal) h.get("azimut");
        java.lang.Boolean localIshr = (java.lang.Boolean) h.get("ishr");
        java.lang.String localConf = (java.lang.String) h.get("conf");

        if ( h.containsKey("capgprs") )
            setCapgprs((localCapgprs));
        if ( h.containsKey("namesect") )
            setNamesect((localNamesect));
        if ( h.containsKey("numpo") )
            setNumpo((localNumpo));
        if ( h.containsKey("conabis") )
            setConabis((localConabis));
        if ( h.containsKey("cellname") )
            setCellname((localCellname));
        if ( h.containsKey("hasbuster") )
            setHasbuster((localHasbuster));
        if ( h.containsKey("byhand") )
            setByhand((localByhand));
        if ( h.containsKey("datasource") )
            setDatasource((localDatasource).intValue());
        if ( h.containsKey("numsect") )
            setNumsect((localNumsect));
        if ( h.containsKey("band") )
            setBand((localBand).shortValue());
        if ( h.containsKey("txpwr2") )
            setTxpwr2((localTxpwr2));
        if ( h.containsKey("trxnum") )
            setTrxnum((localTrxnum));
        if ( h.containsKey("hasflt") )
            setHasflt((localHasflt));
        if ( h.containsKey("trxnum2") )
            setTrxnum2((localTrxnum2));
        if ( h.containsKey("planfacttype") )
            setPlanfacttype((localPlanfacttype).intValue());
        if ( h.containsKey("txovrsetpwr") )
            setTxovrsetpwr((localTxovrsetpwr));
        if ( h.containsKey("portabis") )
            setPortabis((localPortabis));
        if ( h.containsKey("power") )
            setPower((localPower));
        if ( h.containsKey("operator") )
            setOperator((localOperator));
        if ( h.containsKey("rac") )
            setRac((localRac));
        if ( h.containsKey("btsnumber") )
            setBtsnumber((localBtsnumber));
        if ( h.containsKey("trxovrnum") )
            setTrxovrnum((localTrxovrnum));
        if ( h.containsKey("lac") )
            setLac((localLac));
        if ( h.containsKey("ddk") )
            setDdk((localDdk));
        if ( h.containsKey("haslna") )
            setHaslna((localHaslna));
        if ( h.containsKey("txsetpwr") )
            setTxsetpwr((localTxsetpwr));
        if ( h.containsKey("txpwr") )
            setTxpwr((localTxpwr));
        if ( h.containsKey("azimut") )
            setAzimut((localAzimut));
        if ( h.containsKey("ishr") )
            setIshr((localIshr));
        if ( h.containsKey("conf") )
            setConf((localConf));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getAntena2sectorsLink());
	links.addElement(getEquipmentLink());
	links.addElement(getRepitersLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	antena2sectorsLink = null;
	equipmentLink = null;
	repitersLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * This method was generated for supporting the association named Repiter2Sector.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addRepiters(com.hps.july.persistence.Repiter aRepiters) throws java.rmi.RemoteException {
	this.getRepitersLink().addElement(aRepiters);
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argIdsect int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argIdsect, int argEquipment, String argNamesect, short argBand,
		String argNumsect) throws javax.ejb.CreateException, java.rmi.RemoteException {

			ejbCreate(argIdsect, argEquipment, argNamesect, argBand,	argNumsect, Boolean.TRUE);
		planfacttype = 1;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argIdsect int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argIdsect, int argEquipment, String argNamesect, short argBand,
		String argNumsect, Boolean argByhand) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	idsect = argIdsect;
	equipment_storageplace = new Integer(argEquipment);
	namesect = argNamesect;
	numsect = argNumsect;
	band = argBand;
	azimut = null;
	power = null;
	btsnumber = null;
	conabis = null;
	portabis = null;
	numpo = null;
	ddk = null;
	trxnum = null;
	txpwr = null;
	trxnum2 = null;
	txpwr2 = null;
	hasflt = null;
	haslna = null;
	hasbuster = null;
	conf = null;
	ishr = null;
	capgprs = null;
	txsetpwr = null;
	txovrsetpwr = null;
	trxovrnum = null;
	byhand = argByhand;
	
	operator = null;
	lac = null;
	rac = null;
	cellname = null;
	datasource = 0;
	planfacttype = 1;
	setOperator();
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
	
	setOperator();	
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argIdsect int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argIdsect) throws java.rmi.RemoteException {
	
}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();

}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {
	
	//System.out.println("Sector_ejbStore operator="+operator);
	if(tempOperator == null) {
		System.out.println("Sector_ejbStore Не определен оператор !!!");
		setOperator(null);
	}
	else
		setOperator(tempOperator);
	
}
/**
 * This method was generated for supporting the association named Antena2sector2sector.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getAntena2sectors() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getAntena2sectorsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named Antena2sector2sector.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getAntena2sectorsLink() {
	if (antena2sectorsLink == null)
		antena2sectorsLink = new SectorToAntena2sectorsLink(this);
	return antena2sectorsLink;
}
/**
 * Getter method for azimut
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getAzimut() {
	return azimut;
}
/**
 * Getter method for band
 */
public short getBand() {
	return band;
}
/**
 * Getter method for btsnumber
 * @return java.lang.String
 */
public java.lang.String getBtsnumber() {
	return btsnumber;
}
/**
 * Getter method for byhand
 */
public java.lang.Boolean getByhand() {
	return byhand;
}
/**
 * Getter method for capgprs
 * @return java.lang.Boolean
 */
public java.lang.Boolean getCapgprs() {
	return capgprs;
}
/**
 * Getter method for cellname
 */
public java.lang.Integer getCellname() {
	return cellname;
}
/**
 * Getter method for conabis
 * @return java.lang.String
 */
public java.lang.String getConabis() {
	return conabis;
}
/**
 * Getter method for conf
 * @return java.lang.String
 */
public java.lang.String getConf() {
	return conf;
}
/**
 * Getter method for datasource
 */
public int getDatasource() {
	return datasource;
}
/**
 * Getter method for ddk
 * @return java.lang.Boolean
 */
public java.lang.Boolean getDdk() {
	return ddk;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * This method was generated for supporting the association named Sector2basestation.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.BaseStation getEquipment() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.BaseStation)this.getEquipmentLink().value();
}
/**
 * This method was generated for supporting the association named Sector2basestation.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.StoragePlaceKey getEquipmentKey() {
	com.hps.july.persistence.StoragePlaceKey temp = null;
	temp = new com.hps.july.persistence.StoragePlaceKey();
	boolean equipment_NULLTEST = true;
	equipment_NULLTEST &= (equipment_storageplace == null);
	temp.storageplace = ((equipment_storageplace == null) ? 0 : equipment_storageplace.intValue());
	if (equipment_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named Sector2basestation.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getEquipmentLink() {
	if (equipmentLink == null)
		equipmentLink = new SectorToEquipmentLink(this);
	return equipmentLink;
}
/**
 * Getter method for hasbuster
 * @return java.lang.Boolean
 */
public java.lang.Boolean getHasbuster() {
	return hasbuster;
}
/**
 * Getter method for hasflt
 * @return java.lang.Boolean
 */
public java.lang.Boolean getHasflt() {
	return hasflt;
}
/**
 * Getter method for haslna
 * @return java.lang.Boolean
 */
public java.lang.Boolean getHaslna() {
	return haslna;
}
/**
 * Insert the method's description here.
 * Creation date: (27.02.2003 17:23:05)
 * @return int
 */
public int getIdsect() {
	return idsect;
}
/**
 * Getter method for ishr
 * @return java.lang.Boolean
 */
public java.lang.Boolean getIshr() {
	return ishr;
}
/**
 * Getter method for lac
 */
public java.lang.Integer getLac() {
	return lac;
}
/**
 * Getter method for namesect
 * @return java.lang.String
 */
public java.lang.String getNamesect() {
	return namesect;
}
/**
 * Getter method for numpo
 * @return java.lang.String
 */
public java.lang.String getNumpo() {
	return numpo;
}
/**
 * Getter method for numsect
 * @return java.lang.String
 */
public java.lang.String getNumsect() {
	return numsect;
}
/**
 * Insert the method's description here.
 * Creation date: (17.06.2003 20:53:57)
 * @return java.lang.Integer
 */
public java.lang.Integer getOperator() {
	return operator;
}
/**
 * Getter method for planfacttype
 */
public int getPlanfacttype() {
	return planfacttype;
}
/**
 * Getter method for portabis
 * @return java.lang.Integer
 */
public java.lang.Integer getPortabis() {
	return portabis;
}
/**
 * Getter method for power
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getPower() {
	return power;
}
/**
 * Getter method for rac
 */
public java.lang.Integer getRac() {
	return rac;
}
/**
 * This method was generated for supporting the association named Repiter2Sector.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getRepiters() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getRepitersLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named Repiter2Sector.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getRepitersLink() {
	if (repitersLink == null)
		repitersLink = new SectorToRepitersLink(this);
	return repitersLink;
}
/**
 * Getter method for trxnum
 * @return java.lang.Integer
 */
public java.lang.Integer getTrxnum() {
	return trxnum;
}
/**
 * Getter method for trxnum2
 * @return java.lang.Integer
 */
public java.lang.Integer getTrxnum2() {
	return trxnum2;
}
/**
 * Getter method for trxovrnum
 */
public java.lang.Integer getTrxovrnum() {
	return trxovrnum;
}
/**
 * Getter method for txovrsetpwr
 */
public java.math.BigDecimal getTxovrsetpwr() {
	return txovrsetpwr;
}
/**
 * Getter method for txpwr
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getTxpwr() {
	return txpwr;
}
/**
 * Getter method for txpwr2
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getTxpwr2() {
	return txpwr2;
}
/**
 * Getter method for txsetpwr
 */
public java.math.BigDecimal getTxsetpwr() {
	return txsetpwr;
}
/**
 * This method was generated for supporting the association named Sector2basestation.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetEquipmentKey(com.hps.july.persistence.StoragePlaceKey inKey) {
	boolean equipment_NULLTEST = (inKey == null);
	if (equipment_NULLTEST) equipment_storageplace = null; else equipment_storageplace = (new Integer(inKey.storageplace));
}
/**
 * This method was generated for supporting the association named Antena2sector2sector.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddAntena2sectors(com.hps.july.persistence.Antena2sector anAntena2sectors) {
	this.getAntena2sectorsLink().secondaryAddElement(anAntena2sectors);
}
/**
 * This method was generated for supporting the association named Repiter2Sector.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddRepiters(com.hps.july.persistence.Repiter aRepiters) {
	this.getRepitersLink().secondaryAddElement(aRepiters);
}
/**
 * This method was generated for supporting the association named Antena2sector2sector.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveAntena2sectors(com.hps.july.persistence.Antena2sector anAntena2sectors) {
	this.getAntena2sectorsLink().secondaryRemoveElement(anAntena2sectors);
}
/**
 * This method was generated for supporting the association named Repiter2Sector.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveRepiters(com.hps.july.persistence.Repiter aRepiters) {
	this.getRepitersLink().secondaryRemoveElement(aRepiters);
}
/**
 * This method was generated for supporting the association named Sector2basestation.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetEquipment(com.hps.july.persistence.BaseStation anEquipment) throws java.rmi.RemoteException {
	this.getEquipmentLink().secondarySet(anEquipment);
}
/**
 * Setter method for azimut
 * @param newValue java.math.BigDecimal
 */
public void setAzimut(java.math.BigDecimal newValue) {
	this.azimut = newValue;
}
/**
 * Setter method for band
 */
public void setBand(short newValue) {
	this.band = newValue;
}
/**
 * Setter method for btsnumber
 * @param newValue java.lang.String
 */
public void setBtsnumber(java.lang.String newValue) {
	this.btsnumber = newValue;
}
/**
 * Setter method for byhand
 */
public void setByhand(java.lang.Boolean newValue) {
	this.byhand = newValue;
}
/**
 * Setter method for capgprs
 * @param newValue java.lang.Boolean
 */
public void setCapgprs(java.lang.Boolean newValue) {
	this.capgprs = newValue;
}
/**
 * Setter method for cellname
 */
public void setCellname(java.lang.Integer newValue) {
	this.cellname = newValue;
}
/**
 * Setter method for conabis
 * @param newValue java.lang.String
 */
public void setConabis(java.lang.String newValue) {
	this.conabis = newValue;
}
/**
 * Setter method for conf
 * @param newValue java.lang.String
 */
public void setConf(java.lang.String newValue) {
	this.conf = newValue;
}
/**
 * Setter method for datasource
 */
public void setDatasource(int newValue) {
	this.datasource = newValue;
}
/**
 * Setter method for ddk
 * @param newValue java.lang.Boolean
 */
public void setDdk(java.lang.Boolean newValue) {
	this.ddk = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * This method was generated for supporting the association named Sector2basestation.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setEquipment(com.hps.july.persistence.BaseStation anEquipment) throws java.rmi.RemoteException {
	this.getEquipmentLink().set(anEquipment);
}
/**
 * Setter method for hasbuster
 * @param newValue java.lang.Boolean
 */
public void setHasbuster(java.lang.Boolean newValue) {
	this.hasbuster = newValue;
}
/**
 * Setter method for hasflt
 * @param newValue java.lang.Boolean
 */
public void setHasflt(java.lang.Boolean newValue) {
	this.hasflt = newValue;
}
/**
 * Setter method for haslna
 * @param newValue java.lang.Boolean
 */
public void setHaslna(java.lang.Boolean newValue) {
	this.haslna = newValue;
}
/**
 * Setter method for ishr
 * @param newValue java.lang.Boolean
 */
public void setIshr(java.lang.Boolean newValue) {
	this.ishr = newValue;
}
/**
 * Setter method for lac
 */
public void setLac(java.lang.Integer newValue) {
	this.lac = newValue;
}
/**
 * Setter method for namesect
 * @param newValue java.lang.String
 */
public void setNamesect(java.lang.String newValue) {
	this.namesect = newValue;
}
/**
 * Setter method for numpo
 * @param newValue java.lang.String
 */
public void setNumpo(java.lang.String newValue) {
	this.numpo = newValue;
}
/**
 * Setter method for numsect
 * @param newValue java.lang.String
 */
public void setNumsect(java.lang.String newValue) {
	this.numsect = newValue;
}
private void setOperator() throws java.rmi.RemoteException{
		String operatorName = entityContext.getCallerIdentity().getName();
		tempOperator = OperatorObject.getOperatorCode(operatorName);
		setOperator(tempOperator);
}
/**
 * Insert the method's description here.
 * Creation date: (17.06.2003 20:53:57)
 * @param newOperator java.lang.Integer
 */
public void setOperator(java.lang.Integer newOperator) {
	operator = newOperator;
}
/**
 * Setter method for planfacttype
 */
public void setPlanfacttype(int newValue) {
	this.planfacttype = newValue;
}
/**
 * Setter method for portabis
 * @param newValue java.lang.Integer
 */
public void setPortabis(java.lang.Integer newValue) {
	this.portabis = newValue;
}
/**
 * Setter method for power
 * @param newValue java.math.BigDecimal
 */
public void setPower(java.math.BigDecimal newValue) {
	this.power = newValue;
}
/**
 * Setter method for rac
 */
public void setRac(java.lang.Integer newValue) {
	this.rac = newValue;
}
/**
 * Setter method for trxnum
 * @param newValue java.lang.Integer
 */
public void setTrxnum(java.lang.Integer newValue) {
	this.trxnum = newValue;
}
/**
 * Setter method for trxnum2
 * @param newValue java.lang.Integer
 */
public void setTrxnum2(java.lang.Integer newValue) {
	this.trxnum2 = newValue;
}
/**
 * Setter method for trxovrnum
 */
public void setTrxovrnum(java.lang.Integer newValue) {
	this.trxovrnum = newValue;
}
/**
 * Setter method for txovrsetpwr
 */
public void setTxovrsetpwr(java.math.BigDecimal newValue) {
	this.txovrsetpwr = newValue;
}
/**
 * Setter method for txpwr
 * @param newValue java.math.BigDecimal
 */
public void setTxpwr(java.math.BigDecimal newValue) {
	this.txpwr = newValue;
}
/**
 * Setter method for txpwr2
 * @param newValue java.math.BigDecimal
 */
public void setTxpwr2(java.math.BigDecimal newValue) {
	this.txpwr2 = newValue;
}
/**
 * Setter method for txsetpwr
 */
public void setTxsetpwr(java.math.BigDecimal newValue) {
	this.txsetpwr = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
