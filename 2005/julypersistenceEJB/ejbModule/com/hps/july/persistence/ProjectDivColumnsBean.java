package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Колонка пользователя плана-графика
 */
public class ProjectDivColumnsBean implements EntityBean {
	public int aftercol;
	public String colname;
	public int divcolid;
	private javax.ejb.EntityContext entityContext = null;
	private final static long serialVersionUID = 3206093459760846163L;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink projectDivColValsLink = null;
	public java.lang.Integer projectType_projecttype;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink projectTypeLink = null;
	public java.lang.Integer division_division;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink divisionLink = null;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("projectTypeKey", getProjectTypeKey());
        h.put("divisionKey", getDivisionKey());
        h.put("colname", getColname());
        h.put("aftercol", new Integer(getAftercol()));
        h.put("divcolid", new Integer(getDivcolid()));
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localColname = (java.lang.String) h.get("colname");
        Integer localAftercol = (Integer) h.get("aftercol");

        if ( h.containsKey("colname") )
            setColname((localColname));
        if ( h.containsKey("aftercol") )
            setAftercol((localAftercol).intValue());

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getProjectDivColValsLink());
	links.addElement(getProjectTypeLink());
	links.addElement(getDivisionLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	projectDivColValsLink = null;
	projectTypeLink = null;
	divisionLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argDivcolid int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argDivcolid, int projectType, int division, String argColname, int argAftercol) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	divcolid = argDivcolid;
	projectType_projecttype = new Integer(projectType);
	division_division = new Integer(division);
	colname = argColname;
	aftercol = argAftercol;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argDivcolid int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argDivcolid) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for aftercol
 * @return int
 */
public int getAftercol() {
	return aftercol;
}
/**
 * Getter method for colname
 * @return java.lang.String
 */
public java.lang.String getColname() {
	return colname;
}
/**
 * Insert the method's description here.
 * Creation date: (09.06.2003 18:02:47)
 * @return int
 */
public int getDivcolid() {
	return divcolid;
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Division getDivision() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Division)this.getDivisionLink().value();
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.DivisionKey getDivisionKey() {
	com.hps.july.persistence.DivisionKey temp = null;
	temp = new com.hps.july.persistence.DivisionKey();
	boolean division_NULLTEST = true;
	division_NULLTEST &= (division_division == null);
	temp.division = ((division_division == null) ? 0 : division_division.intValue());
	if (division_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getDivisionLink() {
	if (divisionLink == null)
		divisionLink = new ProjectDivColumnsToDivisionLink(this);
	return divisionLink;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2ProjectDivColVal.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getProjectDivColVals() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getProjectDivColValsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2ProjectDivColVal.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getProjectDivColValsLink() {
	if (projectDivColValsLink == null)
		projectDivColValsLink = new ProjectDivColumnsToProjectDivColValsLink(this);
	return projectDivColValsLink;
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2ProjectType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ProjectType getProjectType() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.ProjectType)this.getProjectTypeLink().value();
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2ProjectType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ProjectTypeKey getProjectTypeKey() {
	com.hps.july.persistence.ProjectTypeKey temp = null;
	temp = new com.hps.july.persistence.ProjectTypeKey();
	boolean projectType_NULLTEST = true;
	projectType_NULLTEST &= (projectType_projecttype == null);
	temp.projecttype = ((projectType_projecttype == null) ? 0 : projectType_projecttype.intValue());
	if (projectType_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2ProjectType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getProjectTypeLink() {
	if (projectTypeLink == null)
		projectTypeLink = new ProjectDivColumnsToProjectTypeLink(this);
	return projectTypeLink;
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetDivisionKey(com.hps.july.persistence.DivisionKey inKey) {
	boolean division_NULLTEST = (inKey == null);
	if (division_NULLTEST) division_division = null; else division_division = (new Integer(inKey.division));
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2ProjectType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetProjectTypeKey(com.hps.july.persistence.ProjectTypeKey inKey) {
	boolean projectType_NULLTEST = (inKey == null);
	if (projectType_NULLTEST) projectType_projecttype = null; else projectType_projecttype = (new Integer(inKey.projecttype));
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2ProjectDivColVal.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddProjectDivColVals(com.hps.july.persistence.ProjectDivColVal aProjectDivColVals) {
	this.getProjectDivColValsLink().secondaryAddElement(aProjectDivColVals);
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2ProjectDivColVal.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveProjectDivColVals(com.hps.july.persistence.ProjectDivColVal aProjectDivColVals) {
	this.getProjectDivColValsLink().secondaryRemoveElement(aProjectDivColVals);
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetDivision(com.hps.july.persistence.Division aDivision) throws java.rmi.RemoteException {
	this.getDivisionLink().secondarySet(aDivision);
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2ProjectType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetProjectType(com.hps.july.persistence.ProjectType aProjectType) throws java.rmi.RemoteException {
	this.getProjectTypeLink().secondarySet(aProjectType);
}
/**
 * Setter method for aftercol
 * @param newValue int
 */
public void setAftercol(int newValue) {
	this.aftercol = newValue;
}
/**
 * Setter method for colname
 * @param newValue java.lang.String
 */
public void setColname(java.lang.String newValue) {
	this.colname = newValue;
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2Division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setDivision(com.hps.july.persistence.Division aDivision) throws java.rmi.RemoteException {
	this.getDivisionLink().set(aDivision);
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * This method was generated for supporting the association named ProjectDivColumns2ProjectType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setProjectType(com.hps.july.persistence.ProjectType aProjectType) throws java.rmi.RemoteException {
	this.getProjectTypeLink().set(aProjectType);
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
