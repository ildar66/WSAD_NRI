package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Роль в системе безопасности NRI
 */
public class RoleBean implements EntityBean {
	private javax.ejb.EntityContext entityContext = null;
	public String role;
	public String rolename;
	private final static long serialVersionUID = 3206093459760846163L;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink tasksLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink operators2RolesLink = null;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("role", getRole());
        h.put("rolename", getRolename());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localRole = (java.lang.String) h.get("role");
        java.lang.String localRolename = (java.lang.String) h.get("rolename");

        if ( h.containsKey("role") )
            setRole((localRole));
        if ( h.containsKey("rolename") )
            setRolename((localRolename));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getTasksLink());
	links.addElement(getOperators2RolesLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	tasksLink = null;
	operators2RolesLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argRole java.lang.String
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(java.lang.String argRole) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	role = argRole;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argRole java.lang.String
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(java.lang.String argRole, String argRoleName) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	role = argRole;
	this.rolename = argRoleName;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argRole java.lang.String
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(java.lang.String argRole) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * This method was generated for supporting the association named operators2roles2role.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getOperators2Roles() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getOperators2RolesLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named operators2roles2role.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getOperators2RolesLink() {
	if (operators2RolesLink == null)
		operators2RolesLink = new RoleToOperators2RolesLink(this);
	return operators2RolesLink;
}
/**
 * Insert the method's description here.
 * Creation date: (08.04.2002 16:05:32)
 * @return java.lang.String
 */
public java.lang.String getRole() {
	return role;
}
/**
 * Getter method for rolename
 * @return java.lang.String
 */
public java.lang.String getRolename() {
	return rolename;
}
/**
 * This method was generated for supporting the association named role2roles2tasks.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getTasks() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getTasksLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named role2roles2tasks.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getTasksLink() {
	if (tasksLink == null)
		tasksLink = new RoleToTasksLink(this);
	return tasksLink;
}
/**
 * This method was generated for supporting the association named operators2roles2role.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddOperators2Roles(com.hps.july.persistence.Operators2Roles anOperators2Roles) {
	this.getOperators2RolesLink().secondaryAddElement(anOperators2Roles);
}
/**
 * This method was generated for supporting the association named role2roles2tasks.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddTasks(com.hps.july.persistence.Roles2Tasks aTasks) {
	this.getTasksLink().secondaryAddElement(aTasks);
}
/**
 * This method was generated for supporting the association named operators2roles2role.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveOperators2Roles(com.hps.july.persistence.Operators2Roles anOperators2Roles) {
	this.getOperators2RolesLink().secondaryRemoveElement(anOperators2Roles);
}
/**
 * This method was generated for supporting the association named role2roles2tasks.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveTasks(com.hps.july.persistence.Roles2Tasks aTasks) {
	this.getTasksLink().secondaryRemoveElement(aTasks);
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Insert the method's description here.
 * Creation date: (08.04.2002 16:05:32)
 * @param newRole java.lang.String
 */
public void setRole(java.lang.String newRole) {
	role = newRole;
}
/**
 * Setter method for rolename
 * @param newValue java.lang.String
 */
public void setRolename(java.lang.String newValue) {
	this.rolename = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
