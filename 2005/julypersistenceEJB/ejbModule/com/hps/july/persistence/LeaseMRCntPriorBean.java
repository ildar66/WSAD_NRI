package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Приоритеты взаимозачета по аренде
 */
public class LeaseMRCntPriorBean implements EntityBean {
	private javax.ejb.EntityContext entityContext = null;
	public Short priority;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.lang.Integer reglament_leaseDocument;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink reglamentLink = null;
	public java.lang.Integer contract1_leaseDocument;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink contract1Link = null;
	public java.lang.Integer contract2_leaseDocument;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink contract2Link = null;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("priority", getPriority());
        h.put("contract1Key", getContract1Key());
        h.put("contract2Key", getContract2Key());
        h.put("reglamentKey", getReglamentKey());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.Short localPriority = (java.lang.Short) h.get("priority");

        if ( h.containsKey("priority") )
            setPriority((localPriority));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getReglamentLink());
	links.addElement(getContract1Link());
	links.addElement(getContract2Link());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	reglamentLink = null;
	contract1Link = null;
	contract2Link = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate() throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
}
/**
 * ejbCreate method for a CMP entity bean
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(Integer argReglament, Integer argContract1,
	Integer argContract2, Short argPriority) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	reglament_leaseDocument = argReglament;
	contract1_leaseDocument = argContract1;
	contract2_leaseDocument = argContract2;
	priority = argPriority;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate() throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2contract1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseContract getContract1() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.LeaseContract)this.getContract1Link().value();
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2contract1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseDocumentKey getContract1Key() {
	com.hps.july.persistence.LeaseDocumentKey temp = null;
	temp = new com.hps.july.persistence.LeaseDocumentKey();
	boolean contract1_NULLTEST = true;
	contract1_NULLTEST &= (contract1_leaseDocument == null);
	temp.leaseDocument = ((contract1_leaseDocument == null) ? 0 : contract1_leaseDocument.intValue());
	if (contract1_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2contract1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getContract1Link() {
	if (contract1Link == null)
		contract1Link = new LeaseMRCntPriorToContract1Link(this);
	return contract1Link;
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2contract2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseContract getContract2() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.LeaseContract)this.getContract2Link().value();
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2contract2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseDocumentKey getContract2Key() {
	com.hps.july.persistence.LeaseDocumentKey temp = null;
	temp = new com.hps.july.persistence.LeaseDocumentKey();
	boolean contract2_NULLTEST = true;
	contract2_NULLTEST &= (contract2_leaseDocument == null);
	temp.leaseDocument = ((contract2_leaseDocument == null) ? 0 : contract2_leaseDocument.intValue());
	if (contract2_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2contract2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getContract2Link() {
	if (contract2Link == null)
		contract2Link = new LeaseMRCntPriorToContract2Link(this);
	return contract2Link;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for priority
 * @return java.lang.Short
 */
public java.lang.Short getPriority() {
	return priority;
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseMutualReglament getReglament() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.LeaseMutualReglament)this.getReglamentLink().value();
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseDocumentKey getReglamentKey() {
	com.hps.july.persistence.LeaseDocumentKey temp = null;
	temp = new com.hps.july.persistence.LeaseDocumentKey();
	boolean reglament_NULLTEST = true;
	reglament_NULLTEST &= (reglament_leaseDocument == null);
	temp.leaseDocument = ((reglament_leaseDocument == null) ? 0 : reglament_leaseDocument.intValue());
	if (reglament_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getReglamentLink() {
	if (reglamentLink == null)
		reglamentLink = new LeaseMRCntPriorToReglamentLink(this);
	return reglamentLink;
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2contract1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetContract1Key(com.hps.july.persistence.LeaseDocumentKey inKey) {
	boolean contract1_NULLTEST = (inKey == null);
	if (contract1_NULLTEST) contract1_leaseDocument = null; else contract1_leaseDocument = (new Integer(inKey.leaseDocument));
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2contract2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetContract2Key(com.hps.july.persistence.LeaseDocumentKey inKey) {
	boolean contract2_NULLTEST = (inKey == null);
	if (contract2_NULLTEST) contract2_leaseDocument = null; else contract2_leaseDocument = (new Integer(inKey.leaseDocument));
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetReglamentKey(com.hps.july.persistence.LeaseDocumentKey inKey) {
	boolean reglament_NULLTEST = (inKey == null);
	if (reglament_NULLTEST) reglament_leaseDocument = null; else reglament_leaseDocument = (new Integer(inKey.leaseDocument));
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2contract1.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setContract1(com.hps.july.persistence.LeaseContract aContract1) throws java.rmi.RemoteException {
	this.getContract1Link().set(aContract1);
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2contract2.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setContract2(com.hps.july.persistence.LeaseContract aContract2) throws java.rmi.RemoteException {
	this.getContract2Link().set(aContract2);
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for priority
 * @param newValue java.lang.Short
 */
public void setPriority(java.lang.Short newValue) {
	this.priority = newValue;
}
/**
 * This method was generated for supporting the association named LeaseMRCntPrior2reglament.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setReglament(com.hps.july.persistence.LeaseMutualReglament aReglament) throws java.rmi.RemoteException {
	this.getReglamentLink().set(aReglament);
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
