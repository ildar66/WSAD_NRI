package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Данные PIE - связь платежей NRI и Platinum
 */
public class PIEPayLinkBean implements EntityBean {
	public int docposition;
	private javax.ejb.EntityContext entityContext = null;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.lang.String piepayplatinum_idpayplatinum;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink piepayplatinumLink = null;
	public java.lang.Integer piepayplatinum_owner;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("piepayplatinumKey", getPiepayplatinumKey());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {


}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getPiepayplatinumLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	piepayplatinumLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argDocposition int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(String argIdPayPlatinum, int argOwner, int argDocposition) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	piepayplatinum_idpayplatinum = argIdPayPlatinum;
	piepayplatinum_owner = new Integer(argOwner);
	docposition = argDocposition;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argDocposition int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(String argIdPayPlatinum, int argDocposition, String argFlagMain) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	piepayplatinum_idpayplatinum = argIdPayPlatinum;
	docposition = argDocposition;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argDocposition int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argDocposition) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * This method was generated for supporting the association named PIEPayLink2pay.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.PIEPayPlatinum getPiepayplatinum() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.PIEPayPlatinum)this.getPiepayplatinumLink().value();
}
/**
 * This method was generated for supporting the association named PIEPayLink2pay.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.PIEPayPlatinumKey getPiepayplatinumKey() {
	com.hps.july.persistence.PIEPayPlatinumKey temp = null;
	temp = new com.hps.july.persistence.PIEPayPlatinumKey();
	boolean piepayplatinum_NULLTEST = true;
	piepayplatinum_NULLTEST &= (piepayplatinum_idpayplatinum == null);
	temp.idpayplatinum = piepayplatinum_idpayplatinum;
	piepayplatinum_NULLTEST &= (piepayplatinum_owner == null);
	temp.owner = ((piepayplatinum_owner == null) ? 0 : piepayplatinum_owner.intValue());
	if (piepayplatinum_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named PIEPayLink2pay.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getPiepayplatinumLink() {
	if (piepayplatinumLink == null)
		piepayplatinumLink = new PIEPayLinkToPiepayplatinumLink(this);
	return piepayplatinumLink;
}
/**
 * This method was generated for supporting the association named PIEPayLink2pay.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetPiepayplatinumKey(com.hps.july.persistence.PIEPayPlatinumKey inKey) {
	boolean piepayplatinum_NULLTEST = (inKey == null);
	if (piepayplatinum_NULLTEST) piepayplatinum_idpayplatinum = null; else piepayplatinum_idpayplatinum = inKey.idpayplatinum;
	if (piepayplatinum_NULLTEST) piepayplatinum_owner = null; else piepayplatinum_owner = (new Integer(inKey.owner));
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * This method was generated for supporting the association named PIEPayLink2pay.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setPiepayplatinum(com.hps.july.persistence.PIEPayPlatinum aPiepayplatinum) throws java.rmi.RemoteException {
	this.getPiepayplatinumLink().set(aPiepayplatinum);
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
