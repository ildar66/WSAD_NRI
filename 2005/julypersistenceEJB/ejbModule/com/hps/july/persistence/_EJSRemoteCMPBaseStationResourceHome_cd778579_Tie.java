// Tie class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.hps.july.persistence;

import java.io.Serializable;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.Enumeration;
import java.util.Vector;
import javax.ejb.CreateException;
import javax.ejb.EJBMetaData;
import javax.ejb.FinderException;
import javax.ejb.Handle;
import javax.ejb.HomeHandle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Util;
import org.omg.CORBA.BAD_OPERATION;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.UnknownException;

public class _EJSRemoteCMPBaseStationResourceHome_cd778579_Tie extends org.omg.CORBA_2_3.portable.ObjectImpl implements javax.rmi.CORBA.Tie {
    
    private EJSRemoteCMPBaseStationResourceHome_cd778579 target = null;
    private org.omg.CORBA.ORB orb = null;
    
    private static final String[] _type_ids = {
        "RMI:com.hps.july.persistence.BaseStationResourceHome:0000000000000000", 
        "RMI:javax.ejb.EJBHome:0000000000000000", 
        "RMI:com.ibm.websphere.csi.CSIServant:0000000000000000", 
        "RMI:javax.ejb.EJBObject:0000000000000000", 
        "RMI:com.ibm.websphere.csi.TransactionalObject:0000000000000000"
    };
    
    public void setTarget(java.rmi.Remote target) {
        this.target = (EJSRemoteCMPBaseStationResourceHome_cd778579) target;
    }
    
    public java.rmi.Remote getTarget() {
        return target;
    }
    
    public org.omg.CORBA.Object thisObject() {
        return this;
    }
    
    public void deactivate() {
        if (orb != null) {
            orb.disconnect(this);
            _set_delegate(null);
        }
    }
    
    public org.omg.CORBA.ORB orb() {
        return _orb();
    }
    
    public void orb(org.omg.CORBA.ORB orb) {
        orb.connect(this);
    }
    
    public void _set_delegate(org.omg.CORBA.portable.Delegate del) {
        super._set_delegate(del);
        if (del != null)
            orb = _orb();
        else
            orb = null;
    }
    
    public String[] _ids() { 
        return _type_ids;
    }
    
    public org.omg.CORBA.portable.OutputStream _invoke(String method, org.omg.CORBA.portable.InputStream _in, org.omg.CORBA.portable.ResponseHandler reply) throws org.omg.CORBA.SystemException {
        try {
            org.omg.CORBA_2_3.portable.InputStream in = 
                (org.omg.CORBA_2_3.portable.InputStream) _in;
            switch (method.length()) {
                case 12: 
                    if (method.equals("create__long")) {
                        return create__long(in, reply);
                    }
                case 15: 
                    if (method.equals("_get_homeHandle")) {
                        return _get_homeHandle(in, reply);
                    }
                case 16: 
                    if (method.equals("findByPrimaryKey")) {
                        return findByPrimaryKey(in, reply);
                    } else if (method.equals("_get_EJBMetaData")) {
                        return _get_EJBMetaData(in, reply);
                    }
                case 18: 
                    if (method.equals("findResourcesByQBE")) {
                        return findResourcesByQBE(in, reply);
                    }
                case 19: 
                    if (method.equals("findResourcesByQBE2")) {
                        return findResourcesByQBE2(in, reply);
                    } else if (method.equals("findResourcesByQBE3")) {
                        return findResourcesByQBE3(in, reply);
                    }
                case 20: 
                    if (method.equals("findBasestationByQBE")) {
                        return findBasestationByQBE(in, reply);
                    }
                case 24: 
                    if (method.equals("remove__java_lang_Object")) {
                        return remove__java_lang_Object(in, reply);
                    } else if (method.equals("remove__javax_ejb_Handle")) {
                        return remove__javax_ejb_Handle(in, reply);
                    }
                case 27: 
                    if (method.equals("findActiveResourceBySubtype")) {
                        return findActiveResourceBySubtype(in, reply);
                    }
                case 28: 
                    if (method.equals("findResourcesByLeasePayRules")) {
                        return findResourcesByLeasePayRules(in, reply);
                    }
                case 31: 
                    if (method.equals("findBasestationResourceForBowse")) {
                        return findBasestationResourceForBowse(in, reply);
                    } else if (method.equals("findResourcesByLeaseChargeRules")) {
                        return findResourcesByLeaseChargeRules(in, reply);
                    }
                case 37: 
                    if (method.equals("findResourceByReglamentOrderByCodeAsc")) {
                        return findResourceByReglamentOrderByCodeAsc(in, reply);
                    }
                case 85: 
                    if (method.equals("create__long__com_hps_july_persistence_Unit__com_hps_july_persistence_ResourceSubType")) {
                        return create__long__com_hps_july_persistence_Unit__com_hps_july_persistence_ResourceSubType(in, reply);
                    }
                case 193: 
                    if (method.equals("create__long__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__java_lang_Boolean__CORBA_WStringValue__java_lang_Boolean__java_lang_Boolean__java_lang_Boolean__java_lang_Boolean__long")) {
                        return create__long__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__java_lang_Boolean__CORBA_WStringValue__java_lang_Boolean__java_lang_Boolean__java_lang_Boolean__java_lang_Boolean__long(in, reply);
                    }
            }
            throw new BAD_OPERATION();
        } catch (SystemException ex) {
            throw ex;
        } catch (Throwable ex) {
            throw new UnknownException(ex);
        }
    }
    
    private org.omg.CORBA.portable.OutputStream _get_EJBMetaData(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        EJBMetaData result = target.getEJBMetaData();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value((Serializable)result,EJBMetaData.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream _get_homeHandle(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        HomeHandle result = target.getHomeHandle();
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        Util.writeAbstractObject(out,result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream remove__java_lang_Object(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Object arg0 = Util.readAny(in);
        try {
            target.remove(arg0);
        } catch (RemoveException ex) {
            String id = "IDL:javax/ejb/RemoveEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,RemoveException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream remove__javax_ejb_Handle(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle arg0 = (Handle) in.read_abstract_interface(Handle.class);
        try {
            target.remove(arg0);
        } catch (RemoveException ex) {
            String id = "IDL:javax/ejb/RemoveEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,RemoveException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream create__long(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        BaseStationResource result;
        try {
            result = target.create(arg0);
        } catch (CreateException ex) {
            String id = "IDL:javax/ejb/CreateEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,CreateException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream create__long__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__java_lang_Boolean__CORBA_WStringValue__java_lang_Boolean__java_lang_Boolean__java_lang_Boolean__java_lang_Boolean__long(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Boolean arg4 = (Boolean) in.read_value(Boolean.class);
        String arg5 = (String) in.read_value(String.class);
        Boolean arg6 = (Boolean) in.read_value(Boolean.class);
        Boolean arg7 = (Boolean) in.read_value(Boolean.class);
        Boolean arg8 = (Boolean) in.read_value(Boolean.class);
        Boolean arg9 = (Boolean) in.read_value(Boolean.class);
        int arg10 = in.read_long();
        BaseStationResource result;
        try {
            result = target.create(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
        } catch (CreateException ex) {
            String id = "IDL:javax/ejb/CreateEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,CreateException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findActiveResourceBySubtype(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        String arg1 = (String) in.read_value(String.class);
        Enumeration result;
        try {
            result = target.findActiveResourceBySubtype(arg0, arg1);
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value((Serializable)result,Enumeration.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findBasestationByQBE(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Boolean arg0 = (Boolean) in.read_value(Boolean.class);
        Integer arg1 = (Integer) in.read_value(Integer.class);
        Boolean arg2 = (Boolean) in.read_value(Boolean.class);
        Integer arg3 = (Integer) in.read_value(Integer.class);
        Boolean arg4 = (Boolean) in.read_value(Boolean.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        Boolean arg7 = (Boolean) in.read_value(Boolean.class);
        String arg8 = (String) in.read_value(String.class);
        Boolean arg9 = (Boolean) in.read_value(Boolean.class);
        String arg10 = (String) in.read_value(String.class);
        Integer arg11 = (Integer) in.read_value(Integer.class);
        Enumeration result;
        try {
            result = target.findBasestationByQBE(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value((Serializable)result,Enumeration.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findBasestationResourceForBowse(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Boolean arg0 = (Boolean) in.read_value(Boolean.class);
        Integer arg1 = (Integer) in.read_value(Integer.class);
        Boolean arg2 = (Boolean) in.read_value(Boolean.class);
        Integer arg3 = (Integer) in.read_value(Integer.class);
        Boolean arg4 = (Boolean) in.read_value(Boolean.class);
        String arg5 = (String) in.read_value(String.class);
        Boolean arg6 = (Boolean) in.read_value(Boolean.class);
        String arg7 = (String) in.read_value(String.class);
        Boolean arg8 = (Boolean) in.read_value(Boolean.class);
        Integer arg9 = (Integer) in.read_value(Integer.class);
        Boolean arg10 = (Boolean) in.read_value(Boolean.class);
        String arg11 = (String) in.read_value(String.class);
        String arg12 = (String) in.read_value(String.class);
        Boolean arg13 = (Boolean) in.read_value(Boolean.class);
        String arg14 = (String) in.read_value(String.class);
        Integer arg15 = (Integer) in.read_value(Integer.class);
        Enumeration result;
        try {
            result = target.findBasestationResourceForBowse(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15);
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value((Serializable)result,Enumeration.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findByPrimaryKey(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        ResourceKey arg0 = (ResourceKey) in.read_value(ResourceKey.class);
        BaseStationResource result;
        try {
            result = target.findByPrimaryKey(arg0);
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findResourceByReglamentOrderByCodeAsc(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Enumeration result;
        try {
            result = target.findResourceByReglamentOrderByCodeAsc(arg0);
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value((Serializable)result,Enumeration.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findResourcesByLeaseChargeRules(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Vector arg0 = (Vector) in.read_value(Vector.class);
        Enumeration result;
        try {
            result = target.findResourcesByLeaseChargeRules(arg0);
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value((Serializable)result,Enumeration.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findResourcesByLeasePayRules(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Vector arg0 = (Vector) in.read_value(Vector.class);
        Enumeration result;
        try {
            result = target.findResourcesByLeasePayRules(arg0);
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value((Serializable)result,Enumeration.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findResourcesByQBE(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Boolean arg0 = (Boolean) in.read_value(Boolean.class);
        ResourceSubTypeKey arg1 = (ResourceSubTypeKey) in.read_value(ResourceSubTypeKey.class);
        Boolean arg2 = (Boolean) in.read_value(Boolean.class);
        String arg3 = (String) in.read_value(String.class);
        Boolean arg4 = (Boolean) in.read_value(Boolean.class);
        String arg5 = (String) in.read_value(String.class);
        Integer arg6 = (Integer) in.read_value(Integer.class);
        Enumeration result;
        try {
            result = target.findResourcesByQBE(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value((Serializable)result,Enumeration.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findResourcesByQBE2(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Boolean arg0 = (Boolean) in.read_value(Boolean.class);
        ResourceSubTypeKey arg1 = (ResourceSubTypeKey) in.read_value(ResourceSubTypeKey.class);
        Boolean arg2 = (Boolean) in.read_value(Boolean.class);
        String arg3 = (String) in.read_value(String.class);
        Boolean arg4 = (Boolean) in.read_value(Boolean.class);
        String arg5 = (String) in.read_value(String.class);
        Boolean arg6 = (Boolean) in.read_value(Boolean.class);
        Integer arg7 = (Integer) in.read_value(Integer.class);
        Boolean arg8 = (Boolean) in.read_value(Boolean.class);
        String arg9 = (String) in.read_value(String.class);
        Integer arg10 = (Integer) in.read_value(Integer.class);
        Enumeration result;
        try {
            result = target.findResourcesByQBE2(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value((Serializable)result,Enumeration.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream findResourcesByQBE3(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Boolean arg0 = (Boolean) in.read_value(Boolean.class);
        ResourceSubTypeKey arg1 = (ResourceSubTypeKey) in.read_value(ResourceSubTypeKey.class);
        Boolean arg2 = (Boolean) in.read_value(Boolean.class);
        String arg3 = (String) in.read_value(String.class);
        Boolean arg4 = (Boolean) in.read_value(Boolean.class);
        String arg5 = (String) in.read_value(String.class);
        Boolean arg6 = (Boolean) in.read_value(Boolean.class);
        Integer arg7 = (Integer) in.read_value(Integer.class);
        Boolean arg8 = (Boolean) in.read_value(Boolean.class);
        String arg9 = (String) in.read_value(String.class);
        Integer arg10 = (Integer) in.read_value(Integer.class);
        Integer arg11 = (Integer) in.read_value(Integer.class);
        Integer arg12 = (Integer) in.read_value(Integer.class);
        Enumeration result;
        try {
            result = target.findResourcesByQBE3(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12);
        } catch (FinderException ex) {
            String id = "IDL:javax/ejb/FinderEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,FinderException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value((Serializable)result,Enumeration.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream create__long__com_hps_july_persistence_Unit__com_hps_july_persistence_ResourceSubType(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        Unit arg1 = (Unit) in.read_Object(Unit.class);
        ResourceSubType arg2 = (ResourceSubType) in.read_Object(ResourceSubType.class);
        BaseStationResource result;
        try {
            result = target.create(arg0, arg1, arg2);
        } catch (CreateException ex) {
            String id = "IDL:javax/ejb/CreateEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,CreateException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
}
