package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 */
public class RRLSpeedParamsBean implements EntityBean {
	private javax.ejb.EntityContext entityContext = null;
	public String radiationclass;
	public java.math.BigDecimal recvsensitivity;
	public int resource;
	public int rrlspeedid;
	private final static long serialVersionUID = 3206093459760846163L;
	public String streamspeed;

/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("streamspeed", getStreamspeed());
        h.put("resource", new Integer(getResource()));
        h.put("rrlspeedid", new Integer(getRrlspeedid()));
        h.put("recvsensitivity", getRecvsensitivity());
        h.put("radiationclass", getRadiationclass());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localStreamspeed = (java.lang.String) h.get("streamspeed");
        Integer localResource = (Integer) h.get("resource");
        java.math.BigDecimal localRecvsensitivity = (java.math.BigDecimal) h.get("recvsensitivity");
        java.lang.String localRadiationclass = (java.lang.String) h.get("radiationclass");

        if ( h.containsKey("streamspeed") )
            setStreamspeed((localStreamspeed));
        if ( h.containsKey("resource") )
            setResource((localResource).intValue());
        if ( h.containsKey("recvsensitivity") )
            setRecvsensitivity((localRecvsensitivity));
        if ( h.containsKey("radiationclass") )
            setRadiationclass((localRadiationclass));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argRrlspeedid int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argRrlspeedid, int argResource, String argStreamSpeed, String argRadiationClass,
			java.math.BigDecimal argRecvSensitivity) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	rrlspeedid = argRrlspeedid;
	resource = argResource;
	streamspeed = argStreamSpeed;
	radiationclass = argRadiationClass;
	recvsensitivity = argRecvSensitivity;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argRrlspeedid int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argRrlspeedid) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for radiationclass
 * @return java.lang.String
 */
public java.lang.String getRadiationclass() {
	return radiationclass;
}
/**
 * Getter method for recvsensitivity
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getRecvsensitivity() {
	return recvsensitivity;
}
/**
 * Getter method for resource
 * @return int
 */
public int getResource() {
	return resource;
}
/**
 * Insert the method's description here.
 * Creation date: (05.08.2004 11:06:46)
 * @return int
 */
public int getRrlspeedid() {
	return rrlspeedid;
}
/**
 * Getter method for streamspeed
 * @return java.lang.String
 */
public java.lang.String getStreamspeed() {
	return streamspeed;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for radiationclass
 * @param newValue java.lang.String
 */
public void setRadiationclass(java.lang.String newValue) {
	this.radiationclass = newValue;
}
/**
 * Setter method for recvsensitivity
 * @param newValue java.math.BigDecimal
 */
public void setRecvsensitivity(java.math.BigDecimal newValue) {
	this.recvsensitivity = newValue;
}
/**
 * Setter method for resource
 * @param newValue int
 */
public void setResource(int newValue) {
	this.resource = newValue;
}
/**
 * Setter method for streamspeed
 * @param newValue java.lang.String
 */
public void setStreamspeed(java.lang.String newValue) {
	this.streamspeed = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
