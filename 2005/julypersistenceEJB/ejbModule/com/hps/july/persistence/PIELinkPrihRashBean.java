package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Данные PIE - связь начислений и платежей из Platinum
 */
public class PIELinkPrihRashBean implements EntityBean {
	public int docposprihod;
	public int docposrashod;
	private javax.ejb.EntityContext entityContext = null;
	public int fromstorageprihod;
	public int idlinkprihodrashod;
	public java.math.BigDecimal qty;
	private final static long serialVersionUID = 3206093459760846163L;

/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("qty", getQty());
        h.put("docposprihod", new Integer(getDocposprihod()));
        h.put("idlinkprihodrashod", new Integer(getIdlinkprihodrashod()));
        h.put("fromstorageprihod", new Integer(getFromstorageprihod()));
        h.put("docposrashod", new Integer(getDocposrashod()));
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.math.BigDecimal localQty = (java.math.BigDecimal) h.get("qty");
        Integer localDocposprihod = (Integer) h.get("docposprihod");
        Integer localFromstorageprihod = (Integer) h.get("fromstorageprihod");
        Integer localDocposrashod = (Integer) h.get("docposrashod");

        if ( h.containsKey("qty") )
            setQty((localQty));
        if ( h.containsKey("docposprihod") )
            setDocposprihod((localDocposprihod).intValue());
        if ( h.containsKey("fromstorageprihod") )
            setFromstorageprihod((localFromstorageprihod).intValue());
        if ( h.containsKey("docposrashod") )
            setDocposrashod((localDocposrashod).intValue());

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argIdlinkprihodrashod int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argIdlinkprihodrashod, int argDocposPrihod, int argFromStoragePrihod, 
		int argDocposRashod, java.math.BigDecimal argQty) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	idlinkprihodrashod = argIdlinkprihodrashod;
	docposprihod = argDocposPrihod;
	fromstorageprihod = argFromStoragePrihod;
	docposrashod = argDocposRashod;
	qty = argQty;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argIdlinkprihodrashod int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argIdlinkprihodrashod) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for docposprihod
 * @return int
 */
public int getDocposprihod() {
	return docposprihod;
}
/**
 * Getter method for docposrashod
 * @return int
 */
public int getDocposrashod() {
	return docposrashod;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for fromstorageprihod
 * @return int
 */
public int getFromstorageprihod() {
	return fromstorageprihod;
}
/**
 * Insert the method's description here.
 * Creation date: (19.12.2002 13:20:00)
 * @return int
 */
public int getIdlinkprihodrashod() {
	return idlinkprihodrashod;
}
/**
 * Getter method for qty
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getQty() {
	return qty;
}
/**
 * Setter method for docposprihod
 * @param newValue int
 */
public void setDocposprihod(int newValue) {
	this.docposprihod = newValue;
}
/**
 * Setter method for docposrashod
 * @param newValue int
 */
public void setDocposrashod(int newValue) {
	this.docposrashod = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for fromstorageprihod
 * @param newValue int
 */
public void setFromstorageprihod(int newValue) {
	this.fromstorageprihod = newValue;
}
/**
 * Setter method for qty
 * @param newValue java.math.BigDecimal
 */
public void setQty(java.math.BigDecimal newValue) {
	this.qty = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
