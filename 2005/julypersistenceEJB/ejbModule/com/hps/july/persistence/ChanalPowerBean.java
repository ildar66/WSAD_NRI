package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Ограничение можности по каналам
 */
public class ChanalPowerBean implements EntityBean {
	public int chanal;
	private javax.ejb.EntityContext entityContext = null;
	public int power;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.lang.Integer basestation_storageplace;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink basestationLink = null;
	public String polarization;
	public int band;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("polarization", getPolarization());
        h.put("band", new Integer(getBand()));
        h.put("chanal", new Integer(getChanal()));
        h.put("basestationKey", getBasestationKey());
        h.put("power", new Integer(getPower()));
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localPolarization = (java.lang.String) h.get("polarization");
        Integer localPower = (Integer) h.get("power");

        if ( h.containsKey("polarization") )
            setPolarization((localPolarization));
        if ( h.containsKey("power") )
            setPower((localPower).intValue());

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getBasestationLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	basestationLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argChanal int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argEquipment, int argChanal, String argPolarization, int argPower) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	basestation_storageplace = new Integer(argEquipment);
	chanal = argChanal;
	polarization = argPolarization;
	power = argPower;
	band = 900;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argChanal int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argEquipment, int argChanal, String argPolarization, int argBand, int argPower) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	basestation_storageplace = new Integer(argEquipment);
	chanal = argChanal;
	polarization = argPolarization;
	power = argPower;
	band = argBand;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argChanal int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argChanal) throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argChanal int
 * @param argBasestation com.hps.july.persistence.StoragePlaceKey
 * @param argPolarization java.lang.String
 * @param argBand int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argChanal, StoragePlaceKey argBasestation, java.lang.String argPolarization, int argBand) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Insert the method's description here.
 * Creation date: (27.05.2005 18:38:10)
 * @return int
 */
public int getBand() {
	return band;
}
/**
 * This method was generated for supporting the association named ChanalPower2basestation.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.BaseStation getBasestation() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.BaseStation)this.getBasestationLink().value();
}
/**
 * This method was generated for supporting the association named ChanalPower2basestation.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.StoragePlaceKey getBasestationKey() {
	com.hps.july.persistence.StoragePlaceKey temp = null;
	temp = new com.hps.july.persistence.StoragePlaceKey();
	boolean basestation_NULLTEST = true;
	basestation_NULLTEST &= (basestation_storageplace == null);
	temp.storageplace = ((basestation_storageplace == null) ? 0 : basestation_storageplace.intValue());
	if (basestation_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named ChanalPower2basestation.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getBasestationLink() {
	if (basestationLink == null)
		basestationLink = new ChanalPowerToBasestationLink(this);
	return basestationLink;
}
/**
 * Insert the method's description here.
 * Creation date: (13.03.2003 15:15:07)
 * @return int
 */
public int getChanal() {
	return chanal;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for polarization
 */
public java.lang.String getPolarization() {
	return polarization;
}
/**
 * Getter method for power
 * @return int
 */
public int getPower() {
	return power;
}
/**
 * This method was generated for supporting the association named ChanalPower2basestation.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetBasestationKey(com.hps.july.persistence.StoragePlaceKey inKey) {
	boolean basestation_NULLTEST = (inKey == null);
	if (basestation_NULLTEST) basestation_storageplace = null; else basestation_storageplace = (new Integer(inKey.storageplace));
}
/**
 * This method was generated for supporting the association named ChanalPower2basestation.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setBasestation(com.hps.july.persistence.BaseStation aBasestation) throws java.rmi.RemoteException {
	this.getBasestationLink().set(aBasestation);
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for polarization
 */
public void setPolarization(java.lang.String newValue) {
	this.polarization = newValue;
}
/**
 * Setter method for power
 * @param newValue int
 */
public void setPower(int newValue) {
	this.power = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
