package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Данные PIE - банки из Platinum
 */
public class PIEBankPlatinumBean implements EntityBean {
	public String address;
	public String bik;
	private javax.ejb.EntityContext entityContext = null;
	public String flagworknri;
	public Integer idbanknri;
	public String idbankplatinum;
	public String korbank;
	public String korschet;
	public String name;
	public int owner;
	public String p_status;
	private final static long serialVersionUID = 3206093459760846163L;
	public String swift;

/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("idbanknri", getIdbanknri());
        h.put("idbankplatinum", getIdbankplatinum());
        h.put("owner", new Integer(getOwner()));
        h.put("address", getAddress());
        h.put("bik", getBik());
        h.put("swift", getSwift());
        h.put("korschet", getKorschet());
        h.put("flagworknri", getFlagworknri());
        h.put("p_status", getP_status());
        h.put("korbank", getKorbank());
        h.put("name", getName());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.Integer localIdbanknri = (java.lang.Integer) h.get("idbanknri");
        java.lang.String localAddress = (java.lang.String) h.get("address");
        java.lang.String localBik = (java.lang.String) h.get("bik");
        java.lang.String localSwift = (java.lang.String) h.get("swift");
        java.lang.String localKorschet = (java.lang.String) h.get("korschet");
        java.lang.String localFlagworknri = (java.lang.String) h.get("flagworknri");
        java.lang.String localP_status = (java.lang.String) h.get("p_status");
        java.lang.String localKorbank = (java.lang.String) h.get("korbank");
        java.lang.String localName = (java.lang.String) h.get("name");

        if ( h.containsKey("idbanknri") )
            setIdbanknri((localIdbanknri));
        if ( h.containsKey("address") )
            setAddress((localAddress));
        if ( h.containsKey("bik") )
            setBik((localBik));
        if ( h.containsKey("swift") )
            setSwift((localSwift));
        if ( h.containsKey("korschet") )
            setKorschet((localKorschet));
        if ( h.containsKey("flagworknri") )
            setFlagworknri((localFlagworknri));
        if ( h.containsKey("p_status") )
            setP_status((localP_status));
        if ( h.containsKey("korbank") )
            setKorbank((localKorbank));
        if ( h.containsKey("name") )
            setName((localName));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argIdbankplatinum java.lang.String
 * @param argOwner int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(java.lang.String argIdbankplatinum, int argOwner, String argPStatus, 
		String argName, String argBik, String argFlagWorkNri) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	idbankplatinum = argIdbankplatinum;
	owner = argOwner;
	p_status = argPStatus;
	name = argName;
	bik = argBik;
	flagworknri = argFlagWorkNri;
	idbanknri = null;
	swift = null;
	korschet = null;
	address = null;
	korbank = null;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argIdbankplatinum java.lang.String
 * @param argOwner int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(java.lang.String argIdbankplatinum, int argOwner) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * Getter method for address
 * @return java.lang.String
 */
public java.lang.String getAddress() {
	return address;
}
/**
 * Getter method for bik
 * @return java.lang.String
 */
public java.lang.String getBik() {
	return bik;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for flagworknri
 * @return java.lang.String
 */
public java.lang.String getFlagworknri() {
	return flagworknri;
}
/**
 * Getter method for idbanknri
 * @return java.lang.Integer
 */
public java.lang.Integer getIdbanknri() {
	return idbanknri;
}
/**
 * Insert the method's description here.
 * Creation date: (20.01.2003 13:06:27)
 * @return java.lang.String
 */
public java.lang.String getIdbankplatinum() {
	return idbankplatinum;
}
/**
 * Getter method for korbank
 * @return java.lang.String
 */
public java.lang.String getKorbank() {
	return korbank;
}
/**
 * Getter method for korschet
 * @return java.lang.String
 */
public java.lang.String getKorschet() {
	return korschet;
}
/**
 * Getter method for name
 * @return java.lang.String
 */
public java.lang.String getName() {
	return name;
}
/**
 * Insert the method's description here.
 * Creation date: (20.01.2003 13:06:27)
 * @return int
 */
public int getOwner() {
	return owner;
}
/**
 * Getter method for p_status
 * @return java.lang.String
 */
public java.lang.String getP_status() {
	return p_status;
}
/**
 * Getter method for swift
 * @return java.lang.String
 */
public java.lang.String getSwift() {
	return swift;
}
/**
 * Setter method for address
 * @param newValue java.lang.String
 */
public void setAddress(java.lang.String newValue) {
	this.address = newValue;
}
/**
 * Setter method for bik
 * @param newValue java.lang.String
 */
public void setBik(java.lang.String newValue) {
	this.bik = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for flagworknri
 * @param newValue java.lang.String
 */
public void setFlagworknri(java.lang.String newValue) {
	this.flagworknri = newValue;
}
/**
 * Setter method for idbanknri
 * @param newValue java.lang.Integer
 */
public void setIdbanknri(java.lang.Integer newValue) {
	this.idbanknri = newValue;
}
/**
 * Setter method for korbank
 * @param newValue java.lang.String
 */
public void setKorbank(java.lang.String newValue) {
	this.korbank = newValue;
}
/**
 * Setter method for korschet
 * @param newValue java.lang.String
 */
public void setKorschet(java.lang.String newValue) {
	this.korschet = newValue;
}
/**
 * Setter method for name
 * @param newValue java.lang.String
 */
public void setName(java.lang.String newValue) {
	this.name = newValue;
}
/**
 * Setter method for p_status
 * @param newValue java.lang.String
 */
public void setP_status(java.lang.String newValue) {
	this.p_status = newValue;
}
/**
 * Setter method for swift
 * @param newValue java.lang.String
 */
public void setSwift(java.lang.String newValue) {
	this.swift = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
