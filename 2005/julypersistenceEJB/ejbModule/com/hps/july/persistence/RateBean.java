package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Курс валюты
 */
public class RateBean implements EntityBean {
	private javax.ejb.EntityContext entityContext = null;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.math.BigDecimal value;
	public java.lang.Integer type_ratetype;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink typeLink = null;
	public java.lang.Integer currency_currency;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink currencyLink = null;
	public java.sql.Date date;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("value", getValue());
        h.put("currencyKey", getCurrencyKey());
        h.put("date", getDate());
        h.put("typeKey", getTypeKey());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.math.BigDecimal localValue = (java.math.BigDecimal) h.get("value");
        java.sql.Date localDate = (java.sql.Date) h.get("date");

        if ( h.containsKey("value") )
            setValue((localValue));
        if ( h.containsKey("date") )
            setDate((localDate));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getTypeLink());
	links.addElement(getCurrencyLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	typeLink = null;
	currencyLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argCurrency com.hps.july.persistence.CurrencyKey
 * @param argType com.hps.july.persistence.RateTypeKey
 * @param argDate java.sql.Date
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(CurrencyKey argCurrency, RateTypeKey argType, java.sql.Date argDate, java.math.BigDecimal argValue) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	value = null;
	type_ratetype = null;
	currency_currency = null;
	date = null;

	boolean currency_NULLTEST = (argCurrency == null);
	if (currency_NULLTEST) currency_currency = null; else currency_currency = (new Integer(argCurrency.currency));
	boolean type_NULLTEST = (argType == null);
	if (type_NULLTEST) type_ratetype = null; else type_ratetype = (new Integer(argType.ratetype));
	date = argDate;
	value = PersistenceUtil.dec(argValue, 4);
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argDate java.util.Date
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(java.sql.Date argDate) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	date = argDate;
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argCurrency com.hps.july.persistence.CurrencyKey
 * @param argType com.hps.july.persistence.RateTypeKey
 * @param argDate java.sql.Date
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(CurrencyKey argCurrency, RateTypeKey argType, java.sql.Date argDate) throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argDate java.util.Date
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(java.util.Date argDate) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * This method was generated for supporting the association named Rate2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Currency getCurrency() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Currency)this.getCurrencyLink().value();
}
/**
 * This method was generated for supporting the association named Rate2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.CurrencyKey getCurrencyKey() {
	com.hps.july.persistence.CurrencyKey temp = null;
	temp = new com.hps.july.persistence.CurrencyKey();
	boolean currency_NULLTEST = true;
	currency_NULLTEST &= (currency_currency == null);
	temp.currency = ((currency_currency == null) ? 0 : currency_currency.intValue());
	if (currency_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named Rate2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getCurrencyLink() {
	if (currencyLink == null)
		currencyLink = new RateToCurrencyLink(this);
	return currencyLink;
}
/**
 * Getter method for date
 */
public java.sql.Date getDate() {
	return date;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * This method was generated for supporting the association named Rates2RateType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.RateType getType() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.RateType)this.getTypeLink().value();
}
/**
 * This method was generated for supporting the association named Rates2RateType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.RateTypeKey getTypeKey() {
	com.hps.july.persistence.RateTypeKey temp = null;
	temp = new com.hps.july.persistence.RateTypeKey();
	boolean type_NULLTEST = true;
	type_NULLTEST &= (type_ratetype == null);
	temp.ratetype = ((type_ratetype == null) ? 0 : type_ratetype.intValue());
	if (type_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named Rates2RateType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getTypeLink() {
	if (typeLink == null)
		typeLink = new RateToTypeLink(this);
	return typeLink;
}
/**
 * Getter method for value
 * @return java.math.BigDecimal
 */
public java.math.BigDecimal getValue() {
	return value;
}
/**
 * This method was generated for supporting the association named Rate2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetCurrencyKey(com.hps.july.persistence.CurrencyKey inKey) {
	boolean currency_NULLTEST = (inKey == null);
	if (currency_NULLTEST) currency_currency = null; else currency_currency = (new Integer(inKey.currency));
}
/**
 * This method was generated for supporting the association named Rates2RateType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetTypeKey(com.hps.july.persistence.RateTypeKey inKey) {
	boolean type_NULLTEST = (inKey == null);
	if (type_NULLTEST) type_ratetype = null; else type_ratetype = (new Integer(inKey.ratetype));
}
/**
 * This method was generated for supporting the association named Rate2Currency.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setCurrency(com.hps.july.persistence.Currency aCurrency) throws java.rmi.RemoteException {
	this.getCurrencyLink().set(aCurrency);
}
/**
 * Setter method for date
 */
public void setDate(java.sql.Date newValue) {
	this.date = newValue;
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * This method was generated for supporting the association named Rates2RateType.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setType(com.hps.july.persistence.RateType aType) throws java.rmi.RemoteException {
	this.getTypeLink().set(aType);
}
/**
 * Setter method for value
 * @param newValue java.math.BigDecimal
 */
public void setValue(java.math.BigDecimal newValue) {
	this.value = PersistenceUtil.dec(newValue, 4);
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
