package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Обобщенное оборудование
 */
public class EquipmentSetBean extends StoragePlaceBean {
	private final static long serialVersionUID = 3206093459760846163L;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink positionLink = null;
	public java.lang.Integer position_storageplace;
	public String equipmentState = "P";
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink faultReportLink = null;
	public java.math.BigDecimal pwrval;
	public String pwrcat;
	public Boolean pwrreserve;
	public String pwrrescat;
	public java.sql.Date datebldbeg;
	public java.sql.Date dateassemb;
	public java.sql.Date datetest;
	public java.sql.Date datepr;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink antennesLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink projectActionsLink = null;
	public String equipcomment;
	public int datasource;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("pwrval", getPwrval());
        h.put("datebldbeg", getDatebldbeg());
        h.put("createdby", getCreatedby());
        h.put("storageplace", new Integer(getStorageplace()));
        h.put("datasource", new Integer(getDatasource()));
        h.put("address", getAddress());
        h.put("closedate", getClosedate());
        h.put("dateassemb", getDateassemb());
        h.put("pwrreserve", getPwrreserve());
        h.put("created", getCreated());
        h.put("modifiedby", getModifiedby());
        h.put("datepr", getDatepr());
        h.put("positionKey", getPositionKey());
        h.put("operator", getOperator());
        h.put("divisionKey", getDivisionKey());
        h.put("datetest", getDatetest());
        h.put("equipcomment", getEquipcomment());
        h.put("pwrrescat", getPwrrescat());
        h.put("pwrcat", getPwrcat());
        h.put("modified", getModified());
        h.put("equipmentState", getEquipmentState());
        h.put("name", getName());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.math.BigDecimal localPwrval = (java.math.BigDecimal) h.get("pwrval");
        java.sql.Date localDatebldbeg = (java.sql.Date) h.get("datebldbeg");
        java.lang.Integer localCreatedby = (java.lang.Integer) h.get("createdby");
        Integer localStorageplace = (Integer) h.get("storageplace");
        Integer localDatasource = (Integer) h.get("datasource");
        java.lang.String localAddress = (java.lang.String) h.get("address");
        java.sql.Date localClosedate = (java.sql.Date) h.get("closedate");
        java.sql.Date localDateassemb = (java.sql.Date) h.get("dateassemb");
        java.lang.Boolean localPwrreserve = (java.lang.Boolean) h.get("pwrreserve");
        java.sql.Timestamp localCreated = (java.sql.Timestamp) h.get("created");
        java.lang.Integer localModifiedby = (java.lang.Integer) h.get("modifiedby");
        java.sql.Date localDatepr = (java.sql.Date) h.get("datepr");
        java.lang.Integer localOperator = (java.lang.Integer) h.get("operator");
        java.sql.Date localDatetest = (java.sql.Date) h.get("datetest");
        java.lang.String localEquipcomment = (java.lang.String) h.get("equipcomment");
        java.lang.String localPwrrescat = (java.lang.String) h.get("pwrrescat");
        java.lang.String localPwrcat = (java.lang.String) h.get("pwrcat");
        java.sql.Timestamp localModified = (java.sql.Timestamp) h.get("modified");
        java.lang.String localEquipmentState = (java.lang.String) h.get("equipmentState");
        java.lang.String localName = (java.lang.String) h.get("name");

        if ( h.containsKey("pwrval") )
            setPwrval((localPwrval));
        if ( h.containsKey("datebldbeg") )
            setDatebldbeg((localDatebldbeg));
        if ( h.containsKey("createdby") )
            setCreatedby((localCreatedby));
        if ( h.containsKey("storageplace") )
            setStorageplace((localStorageplace).intValue());
        if ( h.containsKey("datasource") )
            setDatasource((localDatasource).intValue());
        if ( h.containsKey("address") )
            setAddress((localAddress));
        if ( h.containsKey("closedate") )
            setClosedate((localClosedate));
        if ( h.containsKey("dateassemb") )
            setDateassemb((localDateassemb));
        if ( h.containsKey("pwrreserve") )
            setPwrreserve((localPwrreserve));
        if ( h.containsKey("created") )
            setCreated((localCreated));
        if ( h.containsKey("modifiedby") )
            setModifiedby((localModifiedby));
        if ( h.containsKey("datepr") )
            setDatepr((localDatepr));
        if ( h.containsKey("operator") )
            setOperator((localOperator));
        if ( h.containsKey("datetest") )
            setDatetest((localDatetest));
        if ( h.containsKey("equipcomment") )
            setEquipcomment((localEquipcomment));
        if ( h.containsKey("pwrrescat") )
            setPwrrescat((localPwrrescat));
        if ( h.containsKey("pwrcat") )
            setPwrcat((localPwrcat));
        if ( h.containsKey("modified") )
            setModified((localModified));
        if ( h.containsKey("equipmentState") )
            setEquipmentState((localEquipmentState));
        if ( h.containsKey("name") )
            setName((localName));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = super._getLinks();
	links.addElement(getAntennesLink());
	links.addElement(getPositionLink());
	links.addElement(getFaultReportLink());
	links.addElement(getProjectActionsLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	super._initLinks();
	antennesLink = null;
	positionLink = null;
	faultReportLink = null;
	projectActionsLink = null;
}
/**
 * This method was generated for supporting the association named Antenna2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addAntennes(com.hps.july.persistence.Antenna anAntennes) throws java.rmi.RemoteException {
	this.getAntennesLink().addElement(anAntennes);
}
/**
 * This method was generated for supporting the association named FaultReport2Equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addFaultReport(com.hps.july.persistence.FaultReport aFaultReport) throws java.rmi.RemoteException {
	this.getFaultReportLink().addElement(aFaultReport);
}
/**
 * This method was generated for supporting the association named ProjectAction2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addProjectActions(com.hps.july.persistence.ProjectAction aProjectActions) throws java.rmi.RemoteException {
	this.getProjectActionsLink().addElement(aProjectActions);
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argStorageplace int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argStorageplace, Integer argDivision, String argName, String argAddress ) throws javax.ejb.CreateException, java.rmi.RemoteException {
	super.ejbCreate( argStorageplace, argDivision, argName, argAddress );
	_initLinks();
	// All CMP fields should be initialized here.
	datasource = 0;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argStorageplace int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argStorageplace, Integer argDivision, String argName, 
	String argAddress, Integer argPosition ) throws javax.ejb.CreateException, java.rmi.RemoteException {
	super.ejbCreate( argStorageplace, argDivision, argName, argAddress );
	_initLinks();
	// All CMP fields should be initialized here.
	position_storageplace = null;
	equipmentState = "P";

	position_storageplace = argPosition;
	pwrval = null;
	pwrcat = null;
	pwrreserve = null;
	pwrrescat = null;
	datebldbeg = null;
	dateassemb = null;
	datetest = null;
	datepr = null;
	datasource = 0;
}
/**
 * This method was generated for supporting the association named Antenna2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getAntennes() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getAntennesLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named Antenna2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getAntennesLink() {
	if (antennesLink == null)
		antennesLink = new EquipmentSetToAntennesLink(this);
	return antennesLink;
}
/**
 * Getter method for datasource
 */
public int getDatasource() {
	return datasource;
}
/**
 * Getter method for dateassemb
 */
public java.sql.Date getDateassemb() {
	return dateassemb;
}
/**
 * Getter method for datebldbeg
 */
public java.sql.Date getDatebldbeg() {
	return datebldbeg;
}
/**
 * Getter method for datepr
 */
public java.sql.Date getDatepr() {
	return datepr;
}
/**
 * Getter method for datetest
 */
public java.sql.Date getDatetest() {
	return datetest;
}
/**
 * Getter method for equipcomment
 */
public java.lang.String getEquipcomment() {
	return equipcomment;
}
/**
 * Getter method for equipmentState
 */
public java.lang.String getEquipmentState() {
	return equipmentState;
}
/**
 * This method was generated for supporting the association named FaultReport2Equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getFaultReport() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getFaultReportLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named FaultReport2Equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getFaultReportLink() {
	if (faultReportLink == null)
		faultReportLink = new EquipmentSetToFaultReportLink(this);
	return faultReportLink;
}
/**
 * This method was generated for supporting the association named EquipmentSet2Position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Position getPosition() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Position)this.getPositionLink().value();
}
/**
 * This method was generated for supporting the association named EquipmentSet2Position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.StoragePlaceKey getPositionKey() {
	com.hps.july.persistence.StoragePlaceKey temp = null;
	temp = new com.hps.july.persistence.StoragePlaceKey();
	boolean position_NULLTEST = true;
	position_NULLTEST &= (position_storageplace == null);
	temp.storageplace = ((position_storageplace == null) ? 0 : position_storageplace.intValue());
	if (position_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named EquipmentSet2Position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getPositionLink() {
	if (positionLink == null)
		positionLink = new EquipmentSetToPositionLink(this);
	return positionLink;
}
/**
 * This method was generated for supporting the association named ProjectAction2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getProjectActions() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getProjectActionsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named ProjectAction2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getProjectActionsLink() {
	if (projectActionsLink == null)
		projectActionsLink = new EquipmentSetToProjectActionsLink(this);
	return projectActionsLink;
}
/**
 * Getter method for pwrcat
 */
public java.lang.String getPwrcat() {
	return pwrcat;
}
/**
 * Getter method for pwrrescat
 */
public java.lang.String getPwrrescat() {
	return pwrrescat;
}
/**
 * Getter method for pwrreserve
 */
public java.lang.Boolean getPwrreserve() {
	return pwrreserve;
}
/**
 * Getter method for pwrval
 */
public java.math.BigDecimal getPwrval() {
	return pwrval;
}
/**
 * This method was generated for supporting the association named EquipmentSet2Position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetPositionKey(com.hps.july.persistence.StoragePlaceKey inKey) {
	boolean position_NULLTEST = (inKey == null);
	if (position_NULLTEST) position_storageplace = null; else position_storageplace = (new Integer(inKey.storageplace));
}
/**
 * This method was generated for supporting the association named ProjectAction2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void removeProjectActions(com.hps.july.persistence.ProjectAction aProjectActions) throws java.rmi.RemoteException {
	this.getProjectActionsLink().removeElement(aProjectActions);
}
/**
 * This method was generated for supporting the association named Antenna2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddAntennes(com.hps.july.persistence.Antenna anAntennes) {
	this.getAntennesLink().secondaryAddElement(anAntennes);
}
/**
 * This method was generated for supporting the association named FaultReport2Equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddFaultReport(com.hps.july.persistence.FaultReport aFaultReport) {
	this.getFaultReportLink().secondaryAddElement(aFaultReport);
}
/**
 * This method was generated for supporting the association named ProjectAction2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddProjectActions(com.hps.july.persistence.ProjectAction aProjectActions) {
	this.getProjectActionsLink().secondaryAddElement(aProjectActions);
}
/**
 * This method was generated for supporting the association named Antenna2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveAntennes(com.hps.july.persistence.Antenna anAntennes) {
	this.getAntennesLink().secondaryRemoveElement(anAntennes);
}
/**
 * This method was generated for supporting the association named FaultReport2Equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveFaultReport(com.hps.july.persistence.FaultReport aFaultReport) {
	this.getFaultReportLink().secondaryRemoveElement(aFaultReport);
}
/**
 * This method was generated for supporting the association named ProjectAction2equipment.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveProjectActions(com.hps.july.persistence.ProjectAction aProjectActions) {
	this.getProjectActionsLink().secondaryRemoveElement(aProjectActions);
}
/**
 * This method was generated for supporting the association named EquipmentSet2Position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetPosition(com.hps.july.persistence.Position aPosition) throws java.rmi.RemoteException {
	this.getPositionLink().secondarySet(aPosition);
}
/**
 * Setter method for datasource
 */
public void setDatasource(int newValue) {
	this.datasource = newValue;
}
/**
 * Setter method for dateassemb
 */
public void setDateassemb(java.sql.Date newValue) {
	this.dateassemb = newValue;
}
/**
 * Setter method for datebldbeg
 */
public void setDatebldbeg(java.sql.Date newValue) {
	this.datebldbeg = newValue;
}
/**
 * Setter method for datepr
 */
public void setDatepr(java.sql.Date newValue) {
	this.datepr = newValue;
}
/**
 * Setter method for datetest
 */
public void setDatetest(java.sql.Date newValue) {
	this.datetest = newValue;
}
/**
 * Setter method for equipcomment
 */
public void setEquipcomment(java.lang.String newValue) {
	this.equipcomment = newValue;
}
/**
 * Setter method for equipmentState
 */
public void setEquipmentState(java.lang.String newValue) {
	this.equipmentState = newValue;
}
/**
 * This method was generated for supporting the association named EquipmentSet2Position.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setPosition(com.hps.july.persistence.Position aPosition) throws java.rmi.RemoteException {
	this.getPositionLink().set(aPosition);
}
/**
 * Setter method for pwrcat
 */
public void setPwrcat(java.lang.String newValue) {
	this.pwrcat = newValue;
}
/**
 * Setter method for pwrrescat
 */
public void setPwrrescat(java.lang.String newValue) {
	this.pwrrescat = newValue;
}
/**
 * Setter method for pwrreserve
 */
public void setPwrreserve(java.lang.Boolean newValue) {
	this.pwrreserve = newValue;
}
/**
 * Setter method for pwrval
 */
public void setPwrval(java.math.BigDecimal newValue) {
	this.pwrval = newValue;
}
}
