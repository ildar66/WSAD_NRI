package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Типовое событие плана-графика
 */
public class ProjectActionTypeBean implements EntityBean {
	private javax.ejb.EntityContext entityContext = null;
	public String name;
	public int projectactiontype;
	private final static long serialVersionUID = 3206093459760846163L;
	public java.lang.Integer action2division_division;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink action2divisionLink = null;
	public String result;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink protoActionsLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink projectActionsLink = null;
	public String equiptype;
	public java.lang.Integer responsibilitytype_responsibilityType;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink responsibilitytypeLink = null;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("result", getResult());
        h.put("equiptype", getEquiptype());
        h.put("responsibilitytypeKey", getResponsibilitytypeKey());
        h.put("action2divisionKey", getAction2divisionKey());
        h.put("projectactiontype", new Integer(getProjectactiontype()));
        h.put("name", getName());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.String localResult = (java.lang.String) h.get("result");
        java.lang.String localEquiptype = (java.lang.String) h.get("equiptype");
        java.lang.String localName = (java.lang.String) h.get("name");

        if ( h.containsKey("result") )
            setResult((localResult));
        if ( h.containsKey("equiptype") )
            setEquiptype((localEquiptype));
        if ( h.containsKey("name") )
            setName((localName));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = new java.util.Vector();
	links.addElement(getAction2divisionLink());
	links.addElement(getProtoActionsLink());
	links.addElement(getProjectActionsLink());
	links.addElement(getResponsibilitytypeLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	action2divisionLink = null;
	protoActionsLink = null;
	projectActionsLink = null;
	responsibilitytypeLink = null;
}
/**
 * This method was generated for supporting the associations.
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _removeLinks() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	java.util.Enumeration links = _getLinks().elements();
	while (links.hasMoreElements()) {
		try {
			((com.ibm.ivj.ejb.associations.interfaces.Link) (links.nextElement())).remove();
		}
		catch (javax.ejb.FinderException e) {} //Consume Finder error since I am going away
	}
}
/**
 * This method was generated for supporting the association named ProjectAction2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addProjectActions(com.hps.july.persistence.ProjectAction aProjectActions) throws java.rmi.RemoteException {
	this.getProjectActionsLink().addElement(aProjectActions);
}
/**
 * This method was generated for supporting the association named ProtoAction2actiontype.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void addProtoActions(com.hps.july.persistence.ProtoAction aProtoActions) throws java.rmi.RemoteException {
	this.getProtoActionsLink().addElement(aProtoActions);
}
/**
 * ejbActivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbActivate() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argProjectactiontype int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argProjectactiontype) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	projectactiontype = argProjectactiontype;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argProjectactiontype int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argProjectactiontype, int argDivision, String argName, 
		String argResult, String argEquiptype, int argResponsibilitytype) throws javax.ejb.CreateException, java.rmi.RemoteException {
	_initLinks();
	// All CMP fields should be initialized here.
	projectactiontype = argProjectactiontype;
	action2division_division = new Integer(argDivision);
	name = argName;
	result = argResult;
	equiptype = argEquiptype;
	responsibilitytype_responsibilityType = new Integer(argResponsibilitytype);
}
/**
 * ejbLoad method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbLoad() throws java.rmi.RemoteException {
	_initLinks();
}
/**
 * ejbPassivate method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPassivate() throws java.rmi.RemoteException {}
/**
 * ejbPostCreate method for a CMP entity bean
 * @param argProjectactiontype int
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbPostCreate(int argProjectactiontype) throws java.rmi.RemoteException {}
/**
 * ejbRemove method comment
 * @exception java.rmi.RemoteException The exception description.
 * @exception javax.ejb.RemoveException The exception description.
 */
public void ejbRemove() throws java.rmi.RemoteException, javax.ejb.RemoveException {
	_removeLinks();
}
/**
 * ejbStore method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbStore() throws java.rmi.RemoteException {}
/**
 * This method was generated for supporting the association named ProjectActionType2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.Division getAction2division() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.Division)this.getAction2divisionLink().value();
}
/**
 * This method was generated for supporting the association named ProjectActionType2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.DivisionKey getAction2divisionKey() {
	com.hps.july.persistence.DivisionKey temp = null;
	temp = new com.hps.july.persistence.DivisionKey();
	boolean action2division_NULLTEST = true;
	action2division_NULLTEST &= (action2division_division == null);
	temp.division = ((action2division_division == null) ? 0 : action2division_division.intValue());
	if (action2division_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named ProjectActionType2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getAction2divisionLink() {
	if (action2divisionLink == null)
		action2divisionLink = new ProjectActionTypeToAction2divisionLink(this);
	return action2divisionLink;
}
/**
 * getEntityContext method comment
 * @return javax.ejb.EntityContext
 */
public javax.ejb.EntityContext getEntityContext() {
	return entityContext;
}
/**
 * Getter method for equiptype
 */
public java.lang.String getEquiptype() {
	return equiptype;
}
/**
 * Getter method for name
 * @return java.lang.String
 */
public java.lang.String getName() {
	return name;
}
/**
 * This method was generated for supporting the association named ProjectAction2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getProjectActions() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getProjectActionsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named ProjectAction2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getProjectActionsLink() {
	if (projectActionsLink == null)
		projectActionsLink = new ProjectActionTypeToProjectActionsLink(this);
	return projectActionsLink;
}
/**
 * Insert the method's description here.
 * Creation date: (26.09.2002 14:42:07)
 * @return int
 */
public int getProjectactiontype() {
	return projectactiontype;
}
/**
 * This method was generated for supporting the association named ProtoAction2actiontype.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getProtoActions() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getProtoActionsLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named ProtoAction2actiontype.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getProtoActionsLink() {
	if (protoActionsLink == null)
		protoActionsLink = new ProjectActionTypeToProtoActionsLink(this);
	return protoActionsLink;
}
/**
 * This method was generated for supporting the association named ProjectActionType2responsible.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ResponsibilityType getResponsibilitytype() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.ResponsibilityType)this.getResponsibilitytypeLink().value();
}
/**
 * This method was generated for supporting the association named ProjectActionType2responsible.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.ResponsibilityTypeKey getResponsibilitytypeKey() {
	com.hps.july.persistence.ResponsibilityTypeKey temp = null;
	temp = new com.hps.july.persistence.ResponsibilityTypeKey();
	boolean responsibilitytype_NULLTEST = true;
	responsibilitytype_NULLTEST &= (responsibilitytype_responsibilityType == null);
	temp.responsibilityType = ((responsibilitytype_responsibilityType == null) ? 0 : responsibilitytype_responsibilityType.intValue());
	if (responsibilitytype_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named ProjectActionType2responsible.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getResponsibilitytypeLink() {
	if (responsibilitytypeLink == null)
		responsibilitytypeLink = new ProjectActionTypeToResponsibilitytypeLink(this);
	return responsibilitytypeLink;
}
/**
 * Getter method for result
 */
public java.lang.String getResult() {
	return result;
}
/**
 * This method was generated for supporting the association named ProjectActionType2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetAction2divisionKey(com.hps.july.persistence.DivisionKey inKey) {
	boolean action2division_NULLTEST = (inKey == null);
	if (action2division_NULLTEST) action2division_division = null; else action2division_division = (new Integer(inKey.division));
}
/**
 * This method was generated for supporting the association named ProjectActionType2responsible.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetResponsibilitytypeKey(com.hps.july.persistence.ResponsibilityTypeKey inKey) {
	boolean responsibilitytype_NULLTEST = (inKey == null);
	if (responsibilitytype_NULLTEST) responsibilitytype_responsibilityType = null; else responsibilitytype_responsibilityType = (new Integer(inKey.responsibilityType));
}
/**
 * This method was generated for supporting the association named ProjectAction2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddProjectActions(com.hps.july.persistence.ProjectAction aProjectActions) {
	this.getProjectActionsLink().secondaryAddElement(aProjectActions);
}
/**
 * This method was generated for supporting the association named ProtoAction2actiontype.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddProtoActions(com.hps.july.persistence.ProtoAction aProtoActions) {
	this.getProtoActionsLink().secondaryAddElement(aProtoActions);
}
/**
 * This method was generated for supporting the association named ProjectAction2type.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveProjectActions(com.hps.july.persistence.ProjectAction aProjectActions) {
	this.getProjectActionsLink().secondaryRemoveElement(aProjectActions);
}
/**
 * This method was generated for supporting the association named ProtoAction2actiontype.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveProtoActions(com.hps.july.persistence.ProtoAction aProtoActions) {
	this.getProtoActionsLink().secondaryRemoveElement(aProtoActions);
}
/**
 * This method was generated for supporting the association named ProjectActionType2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetAction2division(com.hps.july.persistence.Division anAction2division) throws java.rmi.RemoteException {
	this.getAction2divisionLink().secondarySet(anAction2division);
}
/**
 * This method was generated for supporting the association named ProjectActionType2responsible.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetResponsibilitytype(com.hps.july.persistence.ResponsibilityType aResponsibilitytype) throws java.rmi.RemoteException {
	this.getResponsibilitytypeLink().secondarySet(aResponsibilitytype);
}
/**
 * This method was generated for supporting the association named ProjectActionType2division.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setAction2division(com.hps.july.persistence.Division anAction2division) throws java.rmi.RemoteException {
	this.getAction2divisionLink().set(anAction2division);
}
/**
 * setEntityContext method comment
 * @param ctx javax.ejb.EntityContext
 * @exception java.rmi.RemoteException The exception description.
 */
public void setEntityContext(javax.ejb.EntityContext ctx) throws java.rmi.RemoteException {
	entityContext = ctx;
}
/**
 * Setter method for equiptype
 */
public void setEquiptype(java.lang.String newValue) {
	this.equiptype = newValue;
}
/**
 * Setter method for name
 * @param newValue java.lang.String
 */
public void setName(java.lang.String newValue) {
	this.name = newValue;
}
/**
 * This method was generated for supporting the association named ProjectActionType2responsible.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setResponsibilitytype(com.hps.july.persistence.ResponsibilityType aResponsibilitytype) throws java.rmi.RemoteException {
	this.getResponsibilitytypeLink().set(aResponsibilitytype);
}
/**
 * Setter method for result
 */
public void setResult(java.lang.String newValue) {
	this.result = newValue;
}
/**
 * unsetEntityContext method comment
 * @exception java.rmi.RemoteException The exception description.
 */
public void unsetEntityContext() throws java.rmi.RemoteException {
	entityContext = null;
}
}
