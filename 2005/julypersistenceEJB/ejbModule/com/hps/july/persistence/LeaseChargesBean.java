package com.hps.july.persistence;

import java.rmi.RemoteException;
import java.security.Identity;
import java.util.Properties;
import javax.ejb.*;
/**
 * This is an Entity Bean class with CMP fields
 * Начисления договоров аренды
 */
public class LeaseChargesBean extends LeaseDocPositionBean {
	private final static long serialVersionUID = 3206093459760846163L;
	public java.lang.Integer leaseRule_leaseRule;
	private transient com.ibm.ivj.ejb.associations.interfaces.SingleLink leaseRuleLink = null;
	private transient com.ibm.ivj.ejb.associations.interfaces.ManyLink leaseDNOPLink = null;
	public java.math.BigDecimal remaindersum;
	public java.math.BigDecimal remainderrate2rur;
	public Boolean byhandraterur;
	public String billnumber;
	public java.sql.Date billdate;
	public boolean isschetfakt1;
	public boolean isschetfakt2;
	public boolean isschetfakt3;
	public Integer usedincwact;
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Hashtable _copyFromEJB() {
        com.ibm.ivj.ejb.runtime.AccessBeanHashtable h = new com.ibm.ivj.ejb.runtime.AccessBeanHashtable();

        h.put("createdby", getCreatedby());
        h.put("billdate", getBilldate());
        h.put("enddate", getEnddate());
        h.put("usedincwact", getUsedincwact());
        h.put("currencyKey", getCurrencyKey());
        h.put("remainderrate2rur", getRemainderrate2rur());
        h.put("remaindersum", getRemaindersum());
        h.put("created", getCreated());
        h.put("modifiedby", getModifiedby());
        h.put("date", getDate());
        h.put("actKey", getActKey());
        h.put("leaseRuleKey", getLeaseRuleKey());
        h.put("docposvid", getDocposvid());
        h.put("operator", getOperator());
        h.put("byhandraterur", getByhandraterur());
        h.put("willbeinact", getWillbeinact());
        h.put("begindate", getBegindate());
        h.put("sumnds", getSumnds());
        h.put("modified", getModified());
        h.put("resourceKey", getResourceKey());
        h.put("summ", getSumm());
        h.put("leaseDocPosition", new Integer(getLeaseDocPosition()));
        h.put("usedinact", getUsedinact());
        h.put("leaseContractKey", getLeaseContractKey());
        h.put("isschetfakt3", new Boolean(getIsschetfakt3()));
        h.put("isschetfakt2", new Boolean(getIsschetfakt2()));
        h.put("isschetfakt1", new Boolean(getIsschetfakt1()));
        h.put("billnumber", getBillnumber());
        h.put("source", getSource());
        h.put("__Key", getEntityContext().getPrimaryKey());

        return h;

}
/**
 * This method was generated by the VisualAge for Java EJB AccessBean tool.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void _copyToEJB(java.util.Hashtable h) {
        java.lang.Integer localCreatedby = (java.lang.Integer) h.get("createdby");
        java.sql.Date localBilldate = (java.sql.Date) h.get("billdate");
        java.sql.Date localEnddate = (java.sql.Date) h.get("enddate");
        java.lang.Integer localUsedincwact = (java.lang.Integer) h.get("usedincwact");
        java.math.BigDecimal localRemainderrate2rur = (java.math.BigDecimal) h.get("remainderrate2rur");
        java.math.BigDecimal localRemaindersum = (java.math.BigDecimal) h.get("remaindersum");
        java.sql.Timestamp localCreated = (java.sql.Timestamp) h.get("created");
        java.lang.Integer localModifiedby = (java.lang.Integer) h.get("modifiedby");
        java.sql.Date localDate = (java.sql.Date) h.get("date");
        java.lang.String localDocposvid = (java.lang.String) h.get("docposvid");
        java.lang.Integer localOperator = (java.lang.Integer) h.get("operator");
        java.lang.Boolean localByhandraterur = (java.lang.Boolean) h.get("byhandraterur");
        java.lang.Integer localWillbeinact = (java.lang.Integer) h.get("willbeinact");
        java.sql.Date localBegindate = (java.sql.Date) h.get("begindate");
        java.math.BigDecimal localSumnds = (java.math.BigDecimal) h.get("sumnds");
        java.sql.Timestamp localModified = (java.sql.Timestamp) h.get("modified");
        java.math.BigDecimal localSumm = (java.math.BigDecimal) h.get("summ");
        Integer localLeaseDocPosition = (Integer) h.get("leaseDocPosition");
        java.lang.Integer localUsedinact = (java.lang.Integer) h.get("usedinact");
        Boolean localIsschetfakt3 = (Boolean) h.get("isschetfakt3");
        Boolean localIsschetfakt2 = (Boolean) h.get("isschetfakt2");
        Boolean localIsschetfakt1 = (Boolean) h.get("isschetfakt1");
        java.lang.String localBillnumber = (java.lang.String) h.get("billnumber");
        java.lang.String localSource = (java.lang.String) h.get("source");

        if ( h.containsKey("createdby") )
            setCreatedby((localCreatedby));
        if ( h.containsKey("billdate") )
            setBilldate((localBilldate));
        if ( h.containsKey("enddate") )
            setEnddate((localEnddate));
        if ( h.containsKey("usedincwact") )
            setUsedincwact((localUsedincwact));
        if ( h.containsKey("remainderrate2rur") )
            setRemainderrate2rur((localRemainderrate2rur));
        if ( h.containsKey("remaindersum") )
            setRemaindersum((localRemaindersum));
        if ( h.containsKey("created") )
            setCreated((localCreated));
        if ( h.containsKey("modifiedby") )
            setModifiedby((localModifiedby));
        if ( h.containsKey("date") )
            setDate((localDate));
        if ( h.containsKey("docposvid") )
            setDocposvid((localDocposvid));
        if ( h.containsKey("operator") )
            setOperator((localOperator));
        if ( h.containsKey("byhandraterur") )
            setByhandraterur((localByhandraterur));
        if ( h.containsKey("willbeinact") )
            setWillbeinact((localWillbeinact));
        if ( h.containsKey("begindate") )
            setBegindate((localBegindate));
        if ( h.containsKey("sumnds") )
            setSumnds((localSumnds));
        if ( h.containsKey("modified") )
            setModified((localModified));
        if ( h.containsKey("summ") )
            setSumm((localSumm));
        if ( h.containsKey("leaseDocPosition") )
            setLeaseDocPosition((localLeaseDocPosition).intValue());
        if ( h.containsKey("usedinact") )
            setUsedinact((localUsedinact));
        if ( h.containsKey("isschetfakt3") )
            setIsschetfakt3((localIsschetfakt3).booleanValue());
        if ( h.containsKey("isschetfakt2") )
            setIsschetfakt2((localIsschetfakt2).booleanValue());
        if ( h.containsKey("isschetfakt1") )
            setIsschetfakt1((localIsschetfakt1).booleanValue());
        if ( h.containsKey("billnumber") )
            setBillnumber((localBillnumber));
        if ( h.containsKey("source") )
            setSource((localSource));

}
/**
 * This method was generated for supporting the associations.
 * @return java.util.Vector
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected java.util.Vector _getLinks() {
	java.util.Vector links = super._getLinks();
	links.addElement(getLeaseRuleLink());
	links.addElement(getLeaseDNOPLink());
	return links;
}
/**
 * This method was generated for supporting the associations.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected void _initLinks() {
	super._initLinks();
	leaseRuleLink = null;
	leaseDNOPLink = null;
}
/**
 * ejbCreate method for a CMP entity bean
 * @param argLeaseDocPosition int
 * @exception javax.ejb.CreateException The exception description.
 * @exception java.rmi.RemoteException The exception description.
 */
public void ejbCreate(int argLeaseDocPosition, java.sql.Date argDate, Integer argLeaseContract, 
	String argSource, String argVid, java.sql.Date argSDate, java.sql.Date argEDate,
	Integer argResource, java.math.BigDecimal argSumm, Integer argCurrency,
	java.math.BigDecimal argSumNds, java.math.BigDecimal argRemainderSum,
	Boolean argByHandRateRur) throws javax.ejb.CreateException, java.rmi.RemoteException {
	
	super.ejbCreate(argLeaseDocPosition, argDate, argLeaseContract, 
		argSource, argVid, argSDate, argEDate,
		argResource, argSumm, argCurrency,
		argSumNds );
	
	_initLinks();
	
	// All CMP fields should be initialized here.
	remaindersum = PersistenceUtil.dec(argRemainderSum,2);
	byhandraterur = argByHandRateRur;
	remainderrate2rur = null;
	leaseRule_leaseRule = null;
	billnumber = null;
	billdate = null;
	isschetfakt1 = false;
	isschetfakt2 = false;
	isschetfakt3 = false;
	usedincwact = null;
}
/**
 * Getter method for billdate
 */
public java.sql.Date getBilldate() {
	return billdate;
}
/**
 * Getter method for billnumber
 */
public java.lang.String getBillnumber() {
	return billnumber;
}
/**
 * Getter method for byhandraterur
 */
public java.lang.Boolean getByhandraterur() {
	return byhandraterur;
}
/**
 * Getter method for isschetfakt1
 */
public boolean getIsschetfakt1() {
	return isschetfakt1;
}
/**
 * Getter method for isschetfakt2
 */
public boolean getIsschetfakt2() {
	return isschetfakt2;
}
/**
 * Getter method for isschetfakt3
 */
public boolean getIsschetfakt3() {
	return isschetfakt3;
}
/**
 * This method was generated for supporting the association named LeaseDNOP2LeaseCharge.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public java.util.Enumeration getLeaseDNOP() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return this.getLeaseDNOPLink().enumerationValue();
}
/**
 * This method was generated for supporting the association named LeaseDNOP2LeaseCharge.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.ManyLink getLeaseDNOPLink() {
	if (leaseDNOPLink == null)
		leaseDNOPLink = new LeaseChargesToLeaseDNOPLink(this);
	return leaseDNOPLink;
}
/**
 * This method was generated for supporting the association named LeaseCharges2LeaseChargeRules.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseChargeRule getLeaseRule() throws java.rmi.RemoteException, javax.ejb.FinderException {
	return (com.hps.july.persistence.LeaseChargeRule)this.getLeaseRuleLink().value();
}
/**
 * This method was generated for supporting the association named LeaseCharges2LeaseChargeRules.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public com.hps.july.persistence.LeaseRuleKey getLeaseRuleKey() {
	com.hps.july.persistence.LeaseRuleKey temp = null;
	temp = new com.hps.july.persistence.LeaseRuleKey();
	boolean leaseRule_NULLTEST = true;
	leaseRule_NULLTEST &= (leaseRule_leaseRule == null);
	temp.leaseRule = ((leaseRule_leaseRule == null) ? 0 : leaseRule_leaseRule.intValue());
	if (leaseRule_NULLTEST) temp = null;
	return temp;
}
/**
 * This method was generated for supporting the association named LeaseCharges2LeaseChargeRules.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
protected com.ibm.ivj.ejb.associations.interfaces.SingleLink getLeaseRuleLink() {
	if (leaseRuleLink == null)
		leaseRuleLink = new LeaseChargesToLeaseRuleLink(this);
	return leaseRuleLink;
}
/**
 * Getter method for remainderrate2rur
 */
public java.math.BigDecimal getRemainderrate2rur() {
	return remainderrate2rur;
}
/**
 * Getter method for remaindersum
 */
public java.math.BigDecimal getRemaindersum() {
	return remaindersum;
}
/**
 * Getter method for usedincwact
 */
public java.lang.Integer getUsedincwact() {
	return usedincwact;
}
/**
 * This method was generated for supporting the association named LeaseCharges2LeaseChargeRules.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void privateSetLeaseRuleKey(com.hps.july.persistence.LeaseRuleKey inKey) {
	boolean leaseRule_NULLTEST = (inKey == null);
	if (leaseRule_NULLTEST) leaseRule_leaseRule = null; else leaseRule_leaseRule = (new Integer(inKey.leaseRule));
}
/**
 * This method was generated for supporting the association named LeaseDNOP2LeaseCharge.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryAddLeaseDNOP(com.hps.july.persistence.LeaseDNOP aLeaseDNOP) {
	this.getLeaseDNOPLink().secondaryAddElement(aLeaseDNOP);
}
/**
 * This method was generated for supporting the association named LeaseDNOP2LeaseCharge.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondaryRemoveLeaseDNOP(com.hps.july.persistence.LeaseDNOP aLeaseDNOP) {
	this.getLeaseDNOPLink().secondaryRemoveElement(aLeaseDNOP);
}
/**
 * This method was generated for supporting the association named LeaseCharges2LeaseChargeRules.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void secondarySetLeaseRule(com.hps.july.persistence.LeaseChargeRule aLeaseRule) throws java.rmi.RemoteException {
	this.getLeaseRuleLink().secondarySet(aLeaseRule);
}
/**
 * Setter method for billdate
 */
public void setBilldate(java.sql.Date newValue) {
	this.billdate = newValue;
}
/**
 * Setter method for billnumber
 */
public void setBillnumber(java.lang.String newValue) {
	this.billnumber = newValue;
}
/**
 * Setter method for byhandraterur
 */
public void setByhandraterur(java.lang.Boolean newValue) {
	this.byhandraterur = newValue;
}
/**
 * Setter method for isschetfakt1
 */
public void setIsschetfakt1(boolean newValue) {
	this.isschetfakt1 = newValue;
}
/**
 * Setter method for isschetfakt2
 */
public void setIsschetfakt2(boolean newValue) {
	this.isschetfakt2 = newValue;
}
/**
 * Setter method for isschetfakt3
 */
public void setIsschetfakt3(boolean newValue) {
	this.isschetfakt3 = newValue;
}
/**
 * This method was generated for supporting the association named LeaseCharges2LeaseChargeRules.  
 * 	It will be deleted/edited when the association is deleted/edited.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
public void setLeaseRule(com.hps.july.persistence.LeaseChargeRule aLeaseRule) throws java.rmi.RemoteException {
	this.getLeaseRuleLink().set(aLeaseRule);
}
/**
 * Setter method for remainderrate2rur
 */
public void setRemainderrate2rur(java.math.BigDecimal newValue) {
	this.remainderrate2rur = newValue;
}
/**
 * Setter method for remaindersum
 */
public void setRemaindersum(java.math.BigDecimal newValue) {
	this.remaindersum = newValue;
}
/**
 * Setter method for usedincwact
 */
public void setUsedincwact(java.lang.Integer newValue) {
	this.usedincwact = newValue;
}
}
