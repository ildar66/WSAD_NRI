// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.hps.july.persistence;

import java.io.Serializable;
import java.math.BigDecimal;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.rmi.UnexpectedException;
import java.util.Enumeration;
import javax.ejb.CreateException;
import javax.ejb.EJBMetaData;
import javax.ejb.FinderException;
import javax.ejb.Handle;
import javax.ejb.HomeHandle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Stub;
import javax.rmi.CORBA.Util;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.ApplicationException;
import org.omg.CORBA.portable.RemarshalException;
import org.omg.CORBA.portable.ServantObject;

public class _RepiterHome_Stub extends Stub implements RepiterHome {
    
    private static final String[] _type_ids = {
        "RMI:com.hps.july.persistence.RepiterHome:0000000000000000", 
        "RMI:javax.ejb.EJBHome:0000000000000000"
    };
    
    public String[] _ids() { 
        return _type_ids;
    }
    
    public EJBMetaData getEJBMetaData() throws RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA.portable.OutputStream out = _request("_get_EJBMetaData", true);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (EJBMetaData) in.read_value(EJBMetaData.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return getEJBMetaData();
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("_get_EJBMetaData",javax.ejb.EJBHome.class);
            if (so == null) {
                return getEJBMetaData();
            }
            try {
                EJBMetaData result = ((javax.ejb.EJBHome)so.servant).getEJBMetaData();
                return (EJBMetaData)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public HomeHandle getHomeHandle() throws RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA.portable.OutputStream out = _request("_get_homeHandle", true);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (HomeHandle) in.read_abstract_interface(HomeHandle.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return getHomeHandle();
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("_get_homeHandle",javax.ejb.EJBHome.class);
            if (so == null) {
                return getHomeHandle();
            }
            try {
                HomeHandle result = ((javax.ejb.EJBHome)so.servant).getHomeHandle();
                return (HomeHandle)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public void remove(Object arg0) throws RemoteException, RemoveException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA.portable.OutputStream out = _request("remove__java_lang_Object", true);
                    Util.writeAny(out,arg0);
                    _invoke(out);
                    return;
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:javax/ejb/RemoveEx:1.0")) {
                        throw (RemoveException) in.read_value(RemoveException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    remove(arg0);
                    return;
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("remove__java_lang_Object",javax.ejb.EJBHome.class);
            if (so == null) {
                remove(arg0);
                return;
            }
            try {
                Object arg0Copy = (Object) Util.copyObject(arg0,_orb());
                ((javax.ejb.EJBHome)so.servant).remove(arg0Copy);
                return;
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof RemoveException) {
                    throw (RemoveException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public void remove(Handle arg0) throws RemoteException, RemoveException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA.portable.OutputStream out = _request("remove__javax_ejb_Handle", true);
                    Util.writeAbstractObject(out,arg0);
                    _invoke(out);
                    return;
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:javax/ejb/RemoveEx:1.0")) {
                        throw (RemoveException) in.read_value(RemoveException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    remove(arg0);
                    return;
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("remove__javax_ejb_Handle",javax.ejb.EJBHome.class);
            if (so == null) {
                remove(arg0);
                return;
            }
            try {
                Handle arg0Copy = (Handle) Util.copyObject(arg0,_orb());
                ((javax.ejb.EJBHome)so.servant).remove(arg0Copy);
                return;
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof RemoveException) {
                    throw (RemoveException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Repiter create(int arg0) throws CreateException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA.portable.OutputStream out = _request("create__long", true);
                    out.write_long(arg0);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Repiter) in.read_Object(Repiter.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:javax/ejb/CreateEx:1.0")) {
                        throw (CreateException) in.read_value(CreateException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return create(arg0);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("create__long",com.hps.july.persistence.RepiterHome.class);
            if (so == null) {
                return create(arg0);
            }
            try {
                Repiter result = ((com.hps.july.persistence.RepiterHome)so.servant).create(arg0);
                return (Repiter)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof CreateException) {
                    throw (CreateException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Repiter create(int arg0, Integer arg1, String arg2, String arg3) throws CreateException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("create__long__java_lang_Integer__CORBA_WStringValue__CORBA_WStringValue", true);
                    out.write_long(arg0);
                    out.write_value(arg1,Integer.class);
                    out.write_value(arg2,String.class);
                    out.write_value(arg3,String.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Repiter) in.read_Object(Repiter.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:javax/ejb/CreateEx:1.0")) {
                        throw (CreateException) in.read_value(CreateException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return create(arg0,arg1,arg2,arg3);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("create__long__java_lang_Integer__CORBA_WStringValue__CORBA_WStringValue",com.hps.july.persistence.RepiterHome.class);
            if (so == null) {
                return create(arg0, arg1, arg2, arg3);
            }
            try {
                Object[] copies = Util.copyObjects(new Object[]{arg1,arg2,arg3},_orb());
                Integer arg1Copy = (Integer) copies[0];
                String arg2Copy = (String) copies[1];
                String arg3Copy = (String) copies[2];
                Repiter result = ((com.hps.july.persistence.RepiterHome)so.servant).create(arg0, arg1Copy, arg2Copy, arg3Copy);
                return (Repiter)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof CreateException) {
                    throw (CreateException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Repiter create(int arg0, Integer arg1, String arg2, String arg3, Integer arg4) throws CreateException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("create__long__java_lang_Integer__CORBA_WStringValue__CORBA_WStringValue__java_lang_Integer", true);
                    out.write_long(arg0);
                    out.write_value(arg1,Integer.class);
                    out.write_value(arg2,String.class);
                    out.write_value(arg3,String.class);
                    out.write_value(arg4,Integer.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Repiter) in.read_Object(Repiter.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:javax/ejb/CreateEx:1.0")) {
                        throw (CreateException) in.read_value(CreateException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return create(arg0,arg1,arg2,arg3,arg4);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("create__long__java_lang_Integer__CORBA_WStringValue__CORBA_WStringValue__java_lang_Integer",com.hps.july.persistence.RepiterHome.class);
            if (so == null) {
                return create(arg0, arg1, arg2, arg3, arg4);
            }
            try {
                Object[] copies = Util.copyObjects(new Object[]{arg1,arg2,arg3,arg4},_orb());
                Integer arg1Copy = (Integer) copies[0];
                String arg2Copy = (String) copies[1];
                String arg3Copy = (String) copies[2];
                Integer arg4Copy = (Integer) copies[3];
                Repiter result = ((com.hps.july.persistence.RepiterHome)so.servant).create(arg0, arg1Copy, arg2Copy, arg3Copy, arg4Copy);
                return (Repiter)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof CreateException) {
                    throw (CreateException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Repiter create(int arg0, Integer arg1, String arg2, String arg3, Integer arg4, Integer arg5, String arg6, String arg7, Integer arg8, BigDecimal arg9) throws CreateException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("create__long__java_lang_Integer__CORBA_WStringValue__CORBA_WStringValue__java_lang_Integer__java_lang_Integer__CORBA_WStringValue__CORBA_WStringValue__java_lang_Integer__java_math_BigDecimal", true);
                    out.write_long(arg0);
                    out.write_value(arg1,Integer.class);
                    out.write_value(arg2,String.class);
                    out.write_value(arg3,String.class);
                    out.write_value(arg4,Integer.class);
                    out.write_value(arg5,Integer.class);
                    out.write_value(arg6,String.class);
                    out.write_value(arg7,String.class);
                    out.write_value(arg8,Integer.class);
                    out.write_value(arg9,BigDecimal.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Repiter) in.read_Object(Repiter.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:javax/ejb/CreateEx:1.0")) {
                        throw (CreateException) in.read_value(CreateException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return create(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("create__long__java_lang_Integer__CORBA_WStringValue__CORBA_WStringValue__java_lang_Integer__java_lang_Integer__CORBA_WStringValue__CORBA_WStringValue__java_lang_Integer__java_math_BigDecimal",com.hps.july.persistence.RepiterHome.class);
            if (so == null) {
                return create(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
            }
            try {
                Object[] copies = Util.copyObjects(new Object[]{arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9},_orb());
                Integer arg1Copy = (Integer) copies[0];
                String arg2Copy = (String) copies[1];
                String arg3Copy = (String) copies[2];
                Integer arg4Copy = (Integer) copies[3];
                Integer arg5Copy = (Integer) copies[4];
                String arg6Copy = (String) copies[5];
                String arg7Copy = (String) copies[6];
                Integer arg8Copy = (Integer) copies[7];
                BigDecimal arg9Copy = (BigDecimal) copies[8];
                Repiter result = ((com.hps.july.persistence.RepiterHome)so.servant).create(arg0, arg1Copy, arg2Copy, arg3Copy, arg4Copy, arg5Copy, arg6Copy, arg7Copy, arg8Copy, arg9Copy);
                return (Repiter)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof CreateException) {
                    throw (CreateException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Repiter create(int arg0, Integer arg1, String arg2, String arg3, Integer arg4, Integer arg5, String arg6, String arg7, Integer arg8, BigDecimal arg9, int arg10) throws CreateException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("create__long__java_lang_Integer__CORBA_WStringValue__CORBA_WStringValue__java_lang_Integer__java_lang_Integer__CORBA_WStringValue__CORBA_WStringValue__java_lang_Integer__java_math_BigDecimal__long", true);
                    out.write_long(arg0);
                    out.write_value(arg1,Integer.class);
                    out.write_value(arg2,String.class);
                    out.write_value(arg3,String.class);
                    out.write_value(arg4,Integer.class);
                    out.write_value(arg5,Integer.class);
                    out.write_value(arg6,String.class);
                    out.write_value(arg7,String.class);
                    out.write_value(arg8,Integer.class);
                    out.write_value(arg9,BigDecimal.class);
                    out.write_long(arg10);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Repiter) in.read_Object(Repiter.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:javax/ejb/CreateEx:1.0")) {
                        throw (CreateException) in.read_value(CreateException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return create(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("create__long__java_lang_Integer__CORBA_WStringValue__CORBA_WStringValue__java_lang_Integer__java_lang_Integer__CORBA_WStringValue__CORBA_WStringValue__java_lang_Integer__java_math_BigDecimal__long",com.hps.july.persistence.RepiterHome.class);
            if (so == null) {
                return create(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
            }
            try {
                Object[] copies = Util.copyObjects(new Object[]{arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9},_orb());
                Integer arg1Copy = (Integer) copies[0];
                String arg2Copy = (String) copies[1];
                String arg3Copy = (String) copies[2];
                Integer arg4Copy = (Integer) copies[3];
                Integer arg5Copy = (Integer) copies[4];
                String arg6Copy = (String) copies[5];
                String arg7Copy = (String) copies[6];
                Integer arg8Copy = (Integer) copies[7];
                BigDecimal arg9Copy = (BigDecimal) copies[8];
                Repiter result = ((com.hps.july.persistence.RepiterHome)so.servant).create(arg0, arg1Copy, arg2Copy, arg3Copy, arg4Copy, arg5Copy, arg6Copy, arg7Copy, arg8Copy, arg9Copy, arg10);
                return (Repiter)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof CreateException) {
                    throw (CreateException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Repiter create(int arg0, Integer arg1, String arg2, String arg3, Integer arg4, Integer arg5, String arg6, String arg7, BigDecimal arg8, int arg9) throws CreateException, RemoteException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("create__long__java_lang_Integer__CORBA_WStringValue__CORBA_WStringValue__java_lang_Integer__java_lang_Integer__CORBA_WStringValue__CORBA_WStringValue__java_math_BigDecimal__long", true);
                    out.write_long(arg0);
                    out.write_value(arg1,Integer.class);
                    out.write_value(arg2,String.class);
                    out.write_value(arg3,String.class);
                    out.write_value(arg4,Integer.class);
                    out.write_value(arg5,Integer.class);
                    out.write_value(arg6,String.class);
                    out.write_value(arg7,String.class);
                    out.write_value(arg8,BigDecimal.class);
                    out.write_long(arg9);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Repiter) in.read_Object(Repiter.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:javax/ejb/CreateEx:1.0")) {
                        throw (CreateException) in.read_value(CreateException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return create(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("create__long__java_lang_Integer__CORBA_WStringValue__CORBA_WStringValue__java_lang_Integer__java_lang_Integer__CORBA_WStringValue__CORBA_WStringValue__java_math_BigDecimal__long",com.hps.july.persistence.RepiterHome.class);
            if (so == null) {
                return create(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
            }
            try {
                Object[] copies = Util.copyObjects(new Object[]{arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8},_orb());
                Integer arg1Copy = (Integer) copies[0];
                String arg2Copy = (String) copies[1];
                String arg3Copy = (String) copies[2];
                Integer arg4Copy = (Integer) copies[3];
                Integer arg5Copy = (Integer) copies[4];
                String arg6Copy = (String) copies[5];
                String arg7Copy = (String) copies[6];
                BigDecimal arg8Copy = (BigDecimal) copies[7];
                Repiter result = ((com.hps.july.persistence.RepiterHome)so.servant).create(arg0, arg1Copy, arg2Copy, arg3Copy, arg4Copy, arg5Copy, arg6Copy, arg7Copy, arg8Copy, arg9);
                return (Repiter)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof CreateException) {
                    throw (CreateException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Enumeration findAllOrderByNameAsc() throws RemoteException, FinderException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA.portable.OutputStream out = _request("findAllOrderByNameAsc", true);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Enumeration) in.read_value(Enumeration.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:javax/ejb/FinderEx:1.0")) {
                        throw (FinderException) in.read_value(FinderException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return findAllOrderByNameAsc();
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("findAllOrderByNameAsc",com.hps.july.persistence.RepiterHome.class);
            if (so == null) {
                return findAllOrderByNameAsc();
            }
            try {
                Enumeration result = ((com.hps.july.persistence.RepiterHome)so.servant).findAllOrderByNameAsc();
                return (Enumeration)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof FinderException) {
                    throw (FinderException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Enumeration findByPlatinumAndStatus(Integer arg0, Integer arg1, String arg2, Integer arg3) throws RemoteException, FinderException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("findByPlatinumAndStatus", true);
                    out.write_value(arg0,Integer.class);
                    out.write_value(arg1,Integer.class);
                    out.write_value(arg2,String.class);
                    out.write_value(arg3,Integer.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Enumeration) in.read_value(Enumeration.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:javax/ejb/FinderEx:1.0")) {
                        throw (FinderException) in.read_value(FinderException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return findByPlatinumAndStatus(arg0,arg1,arg2,arg3);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("findByPlatinumAndStatus",com.hps.july.persistence.RepiterHome.class);
            if (so == null) {
                return findByPlatinumAndStatus(arg0, arg1, arg2, arg3);
            }
            try {
                Object[] copies = Util.copyObjects(new Object[]{arg0,arg1,arg2,arg3},_orb());
                Integer arg0Copy = (Integer) copies[0];
                Integer arg1Copy = (Integer) copies[1];
                String arg2Copy = (String) copies[2];
                Integer arg3Copy = (Integer) copies[3];
                Enumeration result = ((com.hps.july.persistence.RepiterHome)so.servant).findByPlatinumAndStatus(arg0Copy, arg1Copy, arg2Copy, arg3Copy);
                return (Enumeration)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof FinderException) {
                    throw (FinderException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Repiter findByPrimaryKey(StoragePlaceKey arg0) throws RemoteException, FinderException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("findByPrimaryKey", true);
                    out.write_value(arg0,StoragePlaceKey.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Repiter) in.read_Object(Repiter.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:javax/ejb/FinderEx:1.0")) {
                        throw (FinderException) in.read_value(FinderException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return findByPrimaryKey(arg0);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("findByPrimaryKey",com.hps.july.persistence.RepiterHome.class);
            if (so == null) {
                return findByPrimaryKey(arg0);
            }
            try {
                StoragePlaceKey arg0Copy = (StoragePlaceKey) Util.copyObject(arg0,_orb());
                Repiter result = ((com.hps.july.persistence.RepiterHome)so.servant).findByPrimaryKey(arg0Copy);
                return (Repiter)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof FinderException) {
                    throw (FinderException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Enumeration findByQBE(Boolean arg0, Integer arg1, Integer arg2) throws RemoteException, FinderException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("findByQBE", true);
                    out.write_value(arg0,Boolean.class);
                    out.write_value(arg1,Integer.class);
                    out.write_value(arg2,Integer.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Enumeration) in.read_value(Enumeration.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:javax/ejb/FinderEx:1.0")) {
                        throw (FinderException) in.read_value(FinderException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return findByQBE(arg0,arg1,arg2);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("findByQBE",com.hps.july.persistence.RepiterHome.class);
            if (so == null) {
                return findByQBE(arg0, arg1, arg2);
            }
            try {
                Object[] copies = Util.copyObjects(new Object[]{arg0,arg1,arg2},_orb());
                Boolean arg0Copy = (Boolean) copies[0];
                Integer arg1Copy = (Integer) copies[1];
                Integer arg2Copy = (Integer) copies[2];
                Enumeration result = ((com.hps.july.persistence.RepiterHome)so.servant).findByQBE(arg0Copy, arg1Copy, arg2Copy);
                return (Enumeration)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof FinderException) {
                    throw (FinderException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Enumeration findRepitersByDonor_ant(AntennaKey arg0) throws RemoteException, FinderException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("findRepitersByDonor_ant", true);
                    out.write_value(arg0,AntennaKey.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Enumeration) in.read_value(Enumeration.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:javax/ejb/FinderEx:1.0")) {
                        throw (FinderException) in.read_value(FinderException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return findRepitersByDonor_ant(arg0);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("findRepitersByDonor_ant",com.hps.july.persistence.RepiterHome.class);
            if (so == null) {
                return findRepitersByDonor_ant(arg0);
            }
            try {
                AntennaKey arg0Copy = (AntennaKey) Util.copyObject(arg0,_orb());
                Enumeration result = ((com.hps.july.persistence.RepiterHome)so.servant).findRepitersByDonor_ant(arg0Copy);
                return (Enumeration)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof FinderException) {
                    throw (FinderException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Enumeration findRepitersByDonor_sect(SectorKey arg0) throws RemoteException, FinderException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("findRepitersByDonor_sect", true);
                    out.write_value(arg0,SectorKey.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Enumeration) in.read_value(Enumeration.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:javax/ejb/FinderEx:1.0")) {
                        throw (FinderException) in.read_value(FinderException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return findRepitersByDonor_sect(arg0);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("findRepitersByDonor_sect",com.hps.july.persistence.RepiterHome.class);
            if (so == null) {
                return findRepitersByDonor_sect(arg0);
            }
            try {
                SectorKey arg0Copy = (SectorKey) Util.copyObject(arg0,_orb());
                Enumeration result = ((com.hps.july.persistence.RepiterHome)so.servant).findRepitersByDonor_sect(arg0Copy);
                return (Enumeration)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof FinderException) {
                    throw (FinderException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
    
    public Enumeration findRepitersByResource(ResourceKey arg0) throws RemoteException, FinderException {
        if (!Util.isLocal(this)) {
            try {
                org.omg.CORBA_2_3.portable.InputStream in = null;
                try {
                    org.omg.CORBA_2_3.portable.OutputStream out = 
                        (org.omg.CORBA_2_3.portable.OutputStream)
                        _request("findRepitersByResource", true);
                    out.write_value(arg0,ResourceKey.class);
                    in = (org.omg.CORBA_2_3.portable.InputStream)_invoke(out);
                    return (Enumeration) in.read_value(Enumeration.class);
                } catch (ApplicationException ex) {
                    in = (org.omg.CORBA_2_3.portable.InputStream) ex.getInputStream();
                    String id = in.read_string();
                    if (id.equals("IDL:javax/ejb/FinderEx:1.0")) {
                        throw (FinderException) in.read_value(FinderException.class);
                    }
                    throw new UnexpectedException(id);
                } catch (RemarshalException ex) {
                    return findRepitersByResource(arg0);
                } finally {
                    _releaseReply(in);
                }
            } catch (SystemException ex) {
                throw Util.mapSystemException(ex);
            }
        } else {
            ServantObject so = _servant_preinvoke("findRepitersByResource",com.hps.july.persistence.RepiterHome.class);
            if (so == null) {
                return findRepitersByResource(arg0);
            }
            try {
                ResourceKey arg0Copy = (ResourceKey) Util.copyObject(arg0,_orb());
                Enumeration result = ((com.hps.july.persistence.RepiterHome)so.servant).findRepitersByResource(arg0Copy);
                return (Enumeration)Util.copyObject(result,_orb());
            } catch (Throwable ex) {
                Throwable exCopy = (Throwable)Util.copyObject(ex,_orb());
                if (exCopy instanceof FinderException) {
                    throw (FinderException)exCopy;
                }
                throw Util.wrapException(exCopy);
            } finally {
                _servant_postinvoke(so);
            }
        }
    }
}
