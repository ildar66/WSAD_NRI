// Tie class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.hps.july.arenda.sessionbean;

import java.io.Serializable;
import java.math.BigDecimal;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.Date;
import javax.ejb.EJBHome;
import javax.ejb.EJBObject;
import javax.ejb.Handle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Util;
import org.omg.CORBA.BAD_OPERATION;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.UnknownException;

public class _EJSRemoteStatefulArendaTransactionMethod_Tie extends org.omg.CORBA_2_3.portable.ObjectImpl implements javax.rmi.CORBA.Tie {
    
    private EJSRemoteStatefulArendaTransactionMethod target = null;
    private org.omg.CORBA.ORB orb = null;
    
    private static final String[] _type_ids = {
        "RMI:com.hps.july.arenda.sessionbean.ArendaTransactionMethod:0000000000000000", 
        "RMI:javax.ejb.EJBObject:0000000000000000", 
        "RMI:com.ibm.websphere.csi.CSIServant:0000000000000000", 
        "RMI:com.ibm.websphere.csi.TransactionalObject:0000000000000000"
    };
    
    public void setTarget(java.rmi.Remote target) {
        this.target = (EJSRemoteStatefulArendaTransactionMethod) target;
    }
    
    public java.rmi.Remote getTarget() {
        return target;
    }
    
    public org.omg.CORBA.Object thisObject() {
        return this;
    }
    
    public void deactivate() {
        if (orb != null) {
            orb.disconnect(this);
            _set_delegate(null);
        }
    }
    
    public org.omg.CORBA.ORB orb() {
        return _orb();
    }
    
    public void orb(org.omg.CORBA.ORB orb) {
        orb.connect(this);
    }
    
    public void _set_delegate(org.omg.CORBA.portable.Delegate del) {
        super._set_delegate(del);
        if (del != null)
            orb = _orb();
        else
            orb = null;
    }
    
    public String[] _ids() { 
        return _type_ids;
    }
    
    public org.omg.CORBA.portable.OutputStream _invoke(String method, org.omg.CORBA.portable.InputStream _in, org.omg.CORBA.portable.ResponseHandler reply) throws org.omg.CORBA.SystemException {
        try {
            org.omg.CORBA_2_3.portable.InputStream in = 
                (org.omg.CORBA_2_3.portable.InputStream) _in;
            switch (method.hashCode()) {
                case -2112207571: 
                    if (method.equals("fillUsedInAct")) {
                        return fillUsedInAct(in, reply);
                    }
                case -2086604666: 
                    if (method.equals("deleteChargeOrPaymentOnSaldo")) {
                        return deleteChargeOrPaymentOnSaldo(in, reply);
                    }
                case -2055115121: 
                    if (method.equals("setChargeRemainderRate")) {
                        return setChargeRemainderRate(in, reply);
                    }
                case -1974217363: 
                    if (method.equals("rollbackCalcAct__java_lang_Integer__long")) {
                        return rollbackCalcAct__java_lang_Integer__long(in, reply);
                    }
                case -1550521068: 
                    if (method.equals("_get_EJBHome")) {
                        return _get_EJBHome(in, reply);
                    }
                case -1011244123: 
                    if (method.equals("_get_primaryKey")) {
                        return _get_primaryKey(in, reply);
                    }
                case -934610812: 
                    if (method.equals("remove")) {
                        return remove(in, reply);
                    }
                case -918419021: 
                    if (method.equals("J_setLeaseChargesRemainderRate")) {
                        return J_setLeaseChargesRemainderRate(in, reply);
                    }
                case -842230076: 
                    if (method.equals("getPaymentRateTemp")) {
                        return getPaymentRateTemp(in, reply);
                    }
                case -760192837: 
                    if (method.equals("updateSaldoSergey")) {
                        return updateSaldoSergey(in, reply);
                    }
                case -618304202: 
                    if (method.equals("defineRatePaymentOnContract__java_lang_Integer__java_lang_Integer__java_util_Date__java_util_Date__java_util_Date__java_util_Date__java_lang_Integer")) {
                        return defineRatePaymentOnContract__java_lang_Integer__java_lang_Integer__java_util_Date__java_util_Date__java_util_Date__java_util_Date__java_lang_Integer(in, reply);
                    }
                case -586148899: 
                    if (method.equals("clearLeasevpayment")) {
                        return clearLeasevpayment(in, reply);
                    }
                case -585091680: 
                    if (method.equals("updateSaldo")) {
                        return updateSaldo(in, reply);
                    }
                case -505219763: 
                    if (method.equals("createSaldo")) {
                        return createSaldo(in, reply);
                    }
                case -305196347: 
                    if (method.equals("removeSaldo")) {
                        return removeSaldo(in, reply);
                    }
                case -239217711: 
                    if (method.equals("rollbackCalcAct__java_lang_Integer")) {
                        return rollbackCalcAct__java_lang_Integer(in, reply);
                    }
                case -160888774: 
                    if (method.equals("J_makeSaldoCharge")) {
                        return J_makeSaldoCharge(in, reply);
                    }
                case -15104007: 
                    if (method.equals("J_linkCharge2Pay")) {
                        return J_linkCharge2Pay(in, reply);
                    }
                case 216708640: 
                    if (method.equals("J_newCalcRate")) {
                        return J_newCalcRate(in, reply);
                    }
                case 548346600: 
                    if (method.equals("calcNds")) {
                        return calcNds(in, reply);
                    }
                case 607174030: 
                    if (method.equals("clearCharge2PayOnAktLink")) {
                        return clearCharge2PayOnAktLink(in, reply);
                    }
                case 646738423: 
                    if (method.equals("clearCharge2Pay")) {
                        return clearCharge2Pay(in, reply);
                    }
                case 721243050: 
                    if (method.equals("setRateRurForPayment")) {
                        return setRateRurForPayment(in, reply);
                    }
                case 738811277: 
                    if (method.equals("J_addMutuallyBetweenContract")) {
                        return J_addMutuallyBetweenContract(in, reply);
                    }
                case 1120281002: 
                    if (method.equals("getChargeRate")) {
                        return getChargeRate(in, reply);
                    }
                case 1136519848: 
                    if (method.equals("createSaldoSergey")) {
                        return createSaldoSergey(in, reply);
                    }
                case 1246819486: 
                    if (method.equals("getChargeRateTemp")) {
                        return getChargeRateTemp(in, reply);
                    }
                case 1264756395: 
                    if (method.equals("isIdentical")) {
                        return isIdentical(in, reply);
                    }
                case 1359596619: 
                    if (method.equals("J_makeMutualCharge")) {
                        return J_makeMutualCharge(in, reply);
                    }
                case 1379234172: 
                    if (method.equals("defineRatePaymentOnContract__java_lang_Integer__java_lang_Integer")) {
                        return defineRatePaymentOnContract__java_lang_Integer__java_lang_Integer(in, reply);
                    }
                case 1432531496: 
                    if (method.equals("J_setLeaseDnopChargeRURSum")) {
                        return J_setLeaseDnopChargeRURSum(in, reply);
                    }
                case 1580943639: 
                    if (method.equals("createChargeOrPaymentOnSaldo")) {
                        return createChargeOrPaymentOnSaldo(in, reply);
                    }
                case 1626625489: 
                    if (method.equals("J_makeCompensationCharge")) {
                        return J_makeCompensationCharge(in, reply);
                    }
                case 1655005833: 
                    if (method.equals("J_makeCompensationPayment")) {
                        return J_makeCompensationPayment(in, reply);
                    }
                case 1665705174: 
                    if (method.equals("J_addToLeaseSaldo")) {
                        return J_addToLeaseSaldo(in, reply);
                    }
                case 1944413392: 
                    if (method.equals("_get_handle")) {
                        return _get_handle(in, reply);
                    }
                case 1967045455: 
                    if (method.equals("J_makeMutualPayment")) {
                        return J_makeMutualPayment(in, reply);
                    }
                case 2076638528: 
                    if (method.equals("J_makeSaldoPayment")) {
                        return J_makeSaldoPayment(in, reply);
                    }
                case 2114242256: 
                    if (method.equals("getPaymentRate")) {
                        return getPaymentRate(in, reply);
                    }
            }
            throw new BAD_OPERATION();
        } catch (SystemException ex) {
            throw ex;
        } catch (Throwable ex) {
            throw new UnknownException(ex);
        }
    }
    
    private org.omg.CORBA.portable.OutputStream _get_EJBHome(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        EJBHome result = target.getEJBHome();
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream _get_handle(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle result = target.getHandle();
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        Util.writeAbstractObject(out,result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream _get_primaryKey(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Object result = target.getPrimaryKey();
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        Util.writeAny(out,result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream isIdentical(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        EJBObject arg0 = (EJBObject) in.read_Object(EJBObject.class);
        boolean result = target.isIdentical(arg0);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream remove(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        try {
            target.remove();
        } catch (RemoveException ex) {
            String id = "IDL:javax/ejb/RemoveEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,RemoveException.class);
            return out;
        }
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream J_addMutuallyBetweenContract(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Integer arg1 = (Integer) in.read_value(Integer.class);
        BigDecimal arg2 = (BigDecimal) in.read_value(BigDecimal.class);
        boolean result = target._addMutuallyBetweenContract(arg0, arg1, arg2);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream J_addToLeaseSaldo(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Integer arg1 = (Integer) in.read_value(Integer.class);
        BigDecimal arg2 = (BigDecimal) in.read_value(BigDecimal.class);
        BigDecimal arg3 = (BigDecimal) in.read_value(BigDecimal.class);
        BigDecimal arg4 = (BigDecimal) in.read_value(BigDecimal.class);
        BigDecimal arg5 = (BigDecimal) in.read_value(BigDecimal.class);
        boolean result = target._addToLeaseSaldo(arg0, arg1, arg2, arg3, arg4, arg5);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream J_linkCharge2Pay(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle arg0 = (Handle) in.read_abstract_interface(Handle.class);
        Handle arg1 = (Handle) in.read_abstract_interface(Handle.class);
        BigDecimal arg2 = (BigDecimal) in.read_value(BigDecimal.class);
        Integer arg3 = (Integer) in.read_value(Integer.class);
        Boolean arg4 = (Boolean) in.read_value(Boolean.class);
        String arg5 = (String) in.read_value(String.class);
        int arg6 = in.read_long();
        boolean result = target._linkCharge2Pay(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream J_makeCompensationCharge(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle arg0 = (Handle) in.read_abstract_interface(Handle.class);
        Integer result = target._makeCompensationCharge(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Integer.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream J_makeCompensationPayment(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle arg0 = (Handle) in.read_abstract_interface(Handle.class);
        Integer result = target._makeCompensationPayment(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Integer.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream J_makeMutualCharge(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle arg0 = (Handle) in.read_abstract_interface(Handle.class);
        BigDecimal arg1 = (BigDecimal) in.read_value(BigDecimal.class);
        Integer result = target._makeMutualCharge(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Integer.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream J_makeMutualPayment(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle arg0 = (Handle) in.read_abstract_interface(Handle.class);
        BigDecimal arg1 = (BigDecimal) in.read_value(BigDecimal.class);
        Integer result = target._makeMutualPayment(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Integer.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream J_makeSaldoCharge(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle arg0 = (Handle) in.read_abstract_interface(Handle.class);
        boolean result = target._makeSaldoCharge(arg0);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream J_makeSaldoPayment(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle arg0 = (Handle) in.read_abstract_interface(Handle.class);
        boolean result = target._makeSaldoPayment(arg0);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream J_newCalcRate(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        BigDecimal arg2 = (BigDecimal) in.read_value(BigDecimal.class);
        target._newCalcRate(arg0, arg1, arg2);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream J_setLeaseChargesRemainderRate(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle arg0 = (Handle) in.read_abstract_interface(Handle.class);
        BigDecimal arg1 = (BigDecimal) in.read_value(BigDecimal.class);
        boolean result = target._setLeaseChargesRemainderRate(arg0, arg1);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream J_setLeaseDnopChargeRURSum(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle arg0 = (Handle) in.read_abstract_interface(Handle.class);
        BigDecimal arg1 = (BigDecimal) in.read_value(BigDecimal.class);
        boolean result = target._setLeaseDnopChargeRURSum(arg0, arg1);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream calcNds(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Date arg1 = (Date) in.read_value(Date.class);
        BigDecimal arg2 = (BigDecimal) in.read_value(BigDecimal.class);
        String arg3 = (String) in.read_value(String.class);
        int arg4 = in.read_long();
        BigDecimal result = target.calcNds(arg0, arg1, arg2, arg3, arg4);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream clearCharge2Pay(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle arg0 = (Handle) in.read_abstract_interface(Handle.class);
        int arg1 = in.read_long();
        boolean result = target.clearCharge2Pay(arg0, arg1);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream clearCharge2PayOnAktLink(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        boolean result = target.clearCharge2PayOnAktLink(arg0);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream clearLeasevpayment(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        boolean result = target.clearLeasevpayment();
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream createChargeOrPaymentOnSaldo(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Date arg1 = (Date) in.read_value(Date.class);
        Integer arg2 = (Integer) in.read_value(Integer.class);
        boolean result = target.createChargeOrPaymentOnSaldo(arg0, arg1, arg2);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream createSaldo(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Date arg1 = (Date) in.read_value(Date.class);
        Integer arg2 = (Integer) in.read_value(Integer.class);
        Integer arg3 = (Integer) in.read_value(Integer.class);
        BigDecimal arg4 = (BigDecimal) in.read_value(BigDecimal.class);
        BigDecimal arg5 = (BigDecimal) in.read_value(BigDecimal.class);
        int arg6 = in.read_long();
        BigDecimal arg7 = (BigDecimal) in.read_value(BigDecimal.class);
        BigDecimal arg8 = (BigDecimal) in.read_value(BigDecimal.class);
        boolean result = target.createSaldo(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream createSaldoSergey(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Date arg1 = (Date) in.read_value(Date.class);
        Integer arg2 = (Integer) in.read_value(Integer.class);
        Integer arg3 = (Integer) in.read_value(Integer.class);
        BigDecimal arg4 = (BigDecimal) in.read_value(BigDecimal.class);
        BigDecimal arg5 = (BigDecimal) in.read_value(BigDecimal.class);
        int arg6 = in.read_long();
        BigDecimal arg7 = (BigDecimal) in.read_value(BigDecimal.class);
        BigDecimal arg8 = (BigDecimal) in.read_value(BigDecimal.class);
        target.createSaldoSergey(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream defineRatePaymentOnContract__java_lang_Integer__java_lang_Integer(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Integer arg1 = (Integer) in.read_value(Integer.class);
        Object[] result = target.defineRatePaymentOnContract(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(cast_array(result),Object[].class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream defineRatePaymentOnContract__java_lang_Integer__java_lang_Integer__java_util_Date__java_util_Date__java_util_Date__java_util_Date__java_lang_Integer(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Integer arg1 = (Integer) in.read_value(Integer.class);
        Date arg2 = (Date) in.read_value(Date.class);
        Date arg3 = (Date) in.read_value(Date.class);
        Date arg4 = (Date) in.read_value(Date.class);
        Date arg5 = (Date) in.read_value(Date.class);
        Integer arg6 = (Integer) in.read_value(Integer.class);
        Object[] result = target.defineRatePaymentOnContract(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(cast_array(result),Object[].class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream deleteChargeOrPaymentOnSaldo(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Date arg1 = (Date) in.read_value(Date.class);
        Integer arg2 = (Integer) in.read_value(Integer.class);
        boolean result = target.deleteChargeOrPaymentOnSaldo(arg0, arg1, arg2);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream fillUsedInAct(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        boolean arg0 = in.read_boolean();
        boolean result = target.fillUsedInAct(arg0);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream getChargeRate(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle arg0 = (Handle) in.read_abstract_interface(Handle.class);
        int arg1 = in.read_long();
        boolean arg2 = in.read_boolean();
        BigDecimal result = target.getChargeRate(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream getChargeRateTemp(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle arg0 = (Handle) in.read_abstract_interface(Handle.class);
        int arg1 = in.read_long();
        boolean arg2 = in.read_boolean();
        int arg3 = in.read_long();
        BigDecimal result = target.getChargeRateTemp(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream getPaymentRate(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle arg0 = (Handle) in.read_abstract_interface(Handle.class);
        int arg1 = in.read_long();
        boolean arg2 = in.read_boolean();
        Integer arg3 = (Integer) in.read_value(Integer.class);
        boolean arg4 = in.read_boolean();
        BigDecimal result = target.getPaymentRate(arg0, arg1, arg2, arg3, arg4);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream getPaymentRateTemp(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle arg0 = (Handle) in.read_abstract_interface(Handle.class);
        int arg1 = in.read_long();
        boolean arg2 = in.read_boolean();
        int arg3 = in.read_long();
        BigDecimal result = target.getPaymentRateTemp(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream removeSaldo(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Date arg1 = (Date) in.read_value(Date.class);
        Integer arg2 = (Integer) in.read_value(Integer.class);
        boolean result = target.removeSaldo(arg0, arg1, arg2);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream rollbackCalcAct__java_lang_Integer(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        boolean result = target.rollbackCalcAct(arg0);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream rollbackCalcAct__java_lang_Integer__long(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        int arg1 = in.read_long();
        boolean result = target.rollbackCalcAct(arg0, arg1);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream setChargeRemainderRate(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Handle arg0 = (Handle) in.read_abstract_interface(Handle.class);
        BigDecimal result = target.setChargeRemainderRate(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream setRateRurForPayment(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        boolean result = target.setRateRurForPayment();
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream updateSaldo(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Date arg1 = (Date) in.read_value(Date.class);
        Integer arg2 = (Integer) in.read_value(Integer.class);
        int arg3 = in.read_long();
        BigDecimal arg4 = (BigDecimal) in.read_value(BigDecimal.class);
        BigDecimal arg5 = (BigDecimal) in.read_value(BigDecimal.class);
        int arg6 = in.read_long();
        BigDecimal arg7 = (BigDecimal) in.read_value(BigDecimal.class);
        BigDecimal arg8 = (BigDecimal) in.read_value(BigDecimal.class);
        boolean result = target.updateSaldo(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private org.omg.CORBA.portable.OutputStream updateSaldoSergey(org.omg.CORBA_2_3.portable.InputStream in , org.omg.CORBA.portable.ResponseHandler reply) throws Throwable {
        Integer arg0 = (Integer) in.read_value(Integer.class);
        Date arg1 = (Date) in.read_value(Date.class);
        Integer arg2 = (Integer) in.read_value(Integer.class);
        int arg3 = in.read_long();
        BigDecimal arg4 = (BigDecimal) in.read_value(BigDecimal.class);
        BigDecimal arg5 = (BigDecimal) in.read_value(BigDecimal.class);
        int arg6 = in.read_long();
        BigDecimal arg7 = (BigDecimal) in.read_value(BigDecimal.class);
        BigDecimal arg8 = (BigDecimal) in.read_value(BigDecimal.class);
        target.updateSaldoSergey(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
        org.omg.CORBA.portable.OutputStream out = reply.createReply();
        return out;
    }
    
    // This method is required as a work-around for
    // a bug in the JDK 1.1.6 verifier.
    
    private Serializable cast_array(Object obj) {
        return (Serializable)obj;
    }
}
